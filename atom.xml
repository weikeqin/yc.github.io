<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>沧海一粟</title>
  
  <subtitle>天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://weikeqin.com/"/>
  <updated>2020-05-30T14:44:17.473Z</updated>
  <id>http://weikeqin.com/</id>
  
  <author>
    <name>WKQ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redis高性能分析</title>
    <link href="http://weikeqin.com/2020/05/28/redis-high-performance-analysis/"/>
    <id>http://weikeqin.com/2020/05/28/redis-high-performance-analysis/</id>
    <published>2020-05-28T05:09:58.000Z</published>
    <updated>2020-05-30T14:44:17.473Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> redis高性能分析</p></blockquote><a id="more"></a><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://redis.io/documentation" target="_blank" rel="noopener">redis.io/documentation</a><br>[1] <a href="https://redis.io/topics/data-types" target="_blank" rel="noopener">redis.io/topics/data-types</a><br>[2] <a href="https://redis.io/topics/data-types-intro" target="_blank" rel="noopener">redis.io/topics/data-types-intr</a><br>[3] <a href="https://github.com/antirez/redis-doc" target="_blank" rel="noopener">redis-doc</a><br>[4] <a href="https://mp.weixin.qq.com/s/U7I5mW-dueVSFUS7LW3ziQ" target="_blank" rel="noopener">10万+QPS 真的只是因为单线程和基于内存？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; redis高性能分析&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="redis" scheme="http://weikeqin.com/categories/redis/"/>
    
    
      <category term="cache" scheme="http://weikeqin.com/tags/cache/"/>
    
      <category term="redis" scheme="http://weikeqin.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis高性能实践</title>
    <link href="http://weikeqin.com/2020/05/26/redis-high-performance-practice/"/>
    <id>http://weikeqin.com/2020/05/26/redis-high-performance-practice/</id>
    <published>2020-05-26T02:28:15.000Z</published>
    <updated>2020-05-26T09:35:13.525Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 在压测的时候看了一下缓存监控，看到监控上的数字震惊了，单分片每秒的出流量172MB。从来没想到过性能可以这么高。(优化前的)<br> 分享一些高性能的知识点吧。</p></blockquote><h1 id="1-大多数情况存储的时候推荐使用byte"><a href="#1-大多数情况存储的时候推荐使用byte" class="headerlink" title="(1) 大多数情况存储的时候推荐使用byte"></a>(1) 大多数情况存储的时候推荐使用byte</h1><p>  <a href="https://redis.io/topics/data-types" target="_blank" rel="noopener">redis-data-types</a><br>  <a href="https://stackoverflow.com/questions/51306134/redis-value-as-byte-vs-plain-string" target="_blank" rel="noopener">redis-value-as-byte-vs-plain-string</a><br>  <a href="https://github.com/eishay/jvm-serializers/wiki" target="_blank" rel="noopener">jvm-serializers</a></p><blockquote><p>string类型 redis底层存储的都是二进制，所以redis是二进制安全的(binary safe)<br> 看代码的话你会发现redis存储的时候用的都是 byte[]<br> Redis Strings are binary safe, this means that a Redis string can contain any kind of data, for instance a JPEG image or a serialized Ruby object.</p></blockquote><p>  对于存取对象，大多数情况建议使用 <code>set(final byte[] key, final byte[] value)</code>  <code>get(final byte[] key)</code><br>  对于直接存储字符串的，建议直接使用 <code>set(final String key, final String value)</code>  <code>get(final String key)</code></p><h1 id="2-使用mset-mget"><a href="#2-使用mset-mget" class="headerlink" title="(2) 使用mset mget"></a>(2) 使用mset mget</h1><p> <a href="https://redis.io/commands/mset" target="_blank" rel="noopener">mset</a><br> <a href="https://redis.io/commands/mget" target="_blank" rel="noopener">mget</a></p><h1 id="3-批量处理时优化成一次请求"><a href="#3-批量处理时优化成一次请求" class="headerlink" title="(3) 批量处理时优化成一次请求"></a>(3) 批量处理时优化成一次请求</h1><blockquote><p> 批处理时可以使用 Pipeline 一次处理，减少网络开销</p></blockquote><a id="more"></a><!--<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @param map</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public List&lt;Object&gt; batchSet(Map&lt;String, String&gt; map) &#123;</span><br><span class="line">    Pipeline pipeline = jedis.pipelined();</span><br><span class="line">    for (Map.Entry&lt;String, String&gt; e : map.entrySet()) &#123;</span><br><span class="line">        pipeline.set(e.getKey(), e.getValue());</span><br><span class="line">    &#125;</span><br><span class="line">    return pipeline.syncAndReturnAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * @param keys</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public List&lt;String&gt; batchGet(List&lt;String&gt; keys) &#123;</span><br><span class="line">    List&lt;String&gt; result = new ArrayList&lt;&gt;(keys.size());</span><br><span class="line">    List&lt;Response&lt;String&gt;&gt; responses = new ArrayList&lt;&gt;(keys.size());</span><br><span class="line"></span><br><span class="line">    Pipeline pipeline = jedis.pipelined();</span><br><span class="line">    for (String key : keys) &#123;</span><br><span class="line">        responses.add(pipeline.get(key));</span><br><span class="line">    &#125;</span><br><span class="line">    pipeline.sync();</span><br><span class="line"></span><br><span class="line">    for (Response&lt;String&gt; resp : responses) &#123;</span><br><span class="line">        result.add(resp.get());</span><br><span class="line">    &#125;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>–&gt;</p><h1 id="4-合理设计每一对Key的Value大小"><a href="#4-合理设计每一对Key的Value大小" class="headerlink" title="(4) 合理设计每一对Key的Value大小"></a>(4) 合理设计每一对Key的Value大小</h1><blockquote><p> 合理设计每一对Key的Value大小，原则是让每次网络包控制在一定大小，减少通信次数。<br> 这个需要根据具体的情况去设置。</p></blockquote><h1 id="5"><a href="#5" class="headerlink" title="(5)"></a>(5)</h1><p>  info可以看到所有库的key数量</p><p>  dbsize则是当前库key的数量</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://redis.io/documentation">redis.io/documentation</a><br>[1] <a href="https://redis.io/topics/data-types">redis.io/topics/data-types</a><br>[2] <a href="https://redis.io/topics/data-types-intro">redis.io/topics/data-types-intr</a><br>[3] <a href="https://github.com/antirez/redis-doc">redis-doc</a><br>[4] <a href="https://redis.io/topics/ldb">Redis Lua scripts debugger</a><br>[5] <a href="https://mp.weixin.qq.com/s/Yzv88PCDBstFFj0qIzTkJA">掌握这些 Redis 技巧，百亿数据量不在话下！</a><br>[6] <a href="https://blog.csdn.net/eng63538505/article/details/74670902">redis的两种存储方式string和byte对比</a></p>-->]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 在压测的时候看了一下缓存监控，看到监控上的数字震惊了，单分片每秒的出流量172MB。从来没想到过性能可以这么高。(优化前的)&lt;br&gt; 分享一些高性能的知识点吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-大多数情况存储的时候推荐使用byte&quot;&gt;&lt;a href=&quot;#1-大多数情况存储的时候推荐使用byte&quot; class=&quot;headerlink&quot; title=&quot;(1) 大多数情况存储的时候推荐使用byte&quot;&gt;&lt;/a&gt;(1) 大多数情况存储的时候推荐使用byte&lt;/h1&gt;&lt;p&gt;  &lt;a href=&quot;https://redis.io/topics/data-types&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;redis-data-types&lt;/a&gt;&lt;br&gt;  &lt;a href=&quot;https://stackoverflow.com/questions/51306134/redis-value-as-byte-vs-plain-string&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;redis-value-as-byte-vs-plain-string&lt;/a&gt;&lt;br&gt;  &lt;a href=&quot;https://github.com/eishay/jvm-serializers/wiki&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jvm-serializers&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;string类型 redis底层存储的都是二进制，所以redis是二进制安全的(binary safe)&lt;br&gt; 看代码的话你会发现redis存储的时候用的都是 byte[]&lt;br&gt; Redis Strings are binary safe, this means that a Redis string can contain any kind of data, for instance a JPEG image or a serialized Ruby object.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  对于存取对象，大多数情况建议使用 &lt;code&gt;set(final byte[] key, final byte[] value)&lt;/code&gt;  &lt;code&gt;get(final byte[] key)&lt;/code&gt;&lt;br&gt;  对于直接存储字符串的，建议直接使用 &lt;code&gt;set(final String key, final String value)&lt;/code&gt;  &lt;code&gt;get(final String key)&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;2-使用mset-mget&quot;&gt;&lt;a href=&quot;#2-使用mset-mget&quot; class=&quot;headerlink&quot; title=&quot;(2) 使用mset mget&quot;&gt;&lt;/a&gt;(2) 使用mset mget&lt;/h1&gt;&lt;p&gt; &lt;a href=&quot;https://redis.io/commands/mset&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mset&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;https://redis.io/commands/mget&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mget&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;3-批量处理时优化成一次请求&quot;&gt;&lt;a href=&quot;#3-批量处理时优化成一次请求&quot; class=&quot;headerlink&quot; title=&quot;(3) 批量处理时优化成一次请求&quot;&gt;&lt;/a&gt;(3) 批量处理时优化成一次请求&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 批处理时可以使用 Pipeline 一次处理，减少网络开销&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="redis" scheme="http://weikeqin.com/categories/redis/"/>
    
    
      <category term="cache" scheme="http://weikeqin.com/tags/cache/"/>
    
      <category term="redis" scheme="http://weikeqin.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>redis-data-types</title>
    <link href="http://weikeqin.com/2020/05/25/redis-data-types/"/>
    <id>http://weikeqin.com/2020/05/25/redis-data-types/</id>
    <published>2020-05-25T06:25:03.000Z</published>
    <updated>2020-05-30T14:44:55.988Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> Redis is not a plain key-value store, it is actually a data structures server, supporting different kinds of values. What this means is that, while in traditional key-value stores you associate string keys to string values, in Redis the value is not limited to a simple string, but can also hold more complex data structures. The following is the list of all the data structures supported by Redis, which will be covered separately in this tutorial:</p></blockquote><h1 id="redis-data-types"><a href="#redis-data-types" class="headerlink" title="redis data types"></a>redis data types</h1><blockquote><p> Binary-safe strings.<br> Lists: collections of string elements sorted according to the order of insertion. They are basically linked lists.<br> Sets: collections of unique, unsorted string elements.<br> Sorted sets, similar to Sets but where every string element is associated to a floating number value, called score. The elements are always taken sorted by their score, so unlike Sets it is possible to retrieve a range of elements (for example you may ask: give me the top 10, or the bottom 10).<br> Hashes, which are maps composed of fields associated with values. Both the field and the value are strings. This is very similar to Ruby or Python hashes.<br> Bit arrays (or simply bitmaps): it is possible, using special commands, to handle String values like an array of bits: you can set and clear individual bits, count all the bits set to 1, find the first set or unset bit, and so forth.<br> HyperLogLogs: this is a probabilistic data structure which is used in order to estimate the cardinality of a set. Don’t be scared, it is simpler than it seems… See later in the HyperLogLog section of this tutorial.<br> Streams: append-only collections of map-like entries that provide an abstract log data type. They are covered in depth in the Introduction to Redis Streams.</p></blockquote><h1 id="Redis-keys"><a href="#Redis-keys" class="headerlink" title="Redis keys"></a>Redis keys</h1><blockquote><p> Redis的key可以是任意类型，可以是字符串，还可以是图片，还可以是空字符串<br> Redis的key是二进制安全的，底层存储用的byte[]<br> 建议key不要太大<br> 建议key不要太小，太小会比较省内存，但是可读性、可维护性较差。<br> 尝试坚持一个模式。 建议使用 object-type:id，比如 <code>user:1000</code><br> redis允许最大的key大小为 512MB</p></blockquote><a id="more"></a><blockquote><p> 官方原文如下:<br> Redis keys are binary safe, this means that you can use any binary sequence as a key, from a string like “foo” to the content of a JPEG file. The empty string is also a valid key.<br> A few other rules about keys:<br> Very long keys are not a good idea. For instance a key of 1024 bytes is a bad idea not only memory-wise, but also because the lookup of the key in the dataset may require several costly key-comparisons. Even when the task at hand is to match the existence of a large value, hashing it (for example with SHA1) is a better idea, especially from the perspective of memory and bandwidth.<br> Very short keys are often not a good idea. There is little point in writing “u1000flw” as a key if you can instead write “user:1000:followers”. The latter is more readable and the added space is minor compared to the space used by the key object itself and the value object. While short keys will obviously consume a bit less memory, your job is to find the right balance.<br> Try to stick with a schema. For instance “object-type:id” is a good idea, as in “user:1000”. Dots or dashes are often used for multi-word fields, as in “comment:1234:reply.to” or “comment:1234:reply-to”.<br> The maximum allowed key size is 512 MB.</p></blockquote><h1 id="Redis-Strings"><a href="#Redis-Strings" class="headerlink" title="Redis Strings"></a>Redis Strings</h1><blockquote><p> Values can be strings (including binary data) of every kind, for instance you can store a jpeg image inside a value. A value can’t be bigger than 512 MB.</p></blockquote><p> string 可以用 set get 命令 </p><blockquote><p> set k v<br> get k </p></blockquote><blockquote><p> set counter 100<br> incr counter<br> incrby counter 50<br> decr counter 1<br> decrby counter 10 </p></blockquote><blockquote><p> incr 是原子性的<br> What does it mean that INCR is atomic? That even multiple clients issuing INCR against the same key will never enter into a race condition. </p></blockquote><blockquote><p> getset mycount “0”<br> mset a 10 b 20 c 30<br> mget a b c</p></blockquote><blockquote><p> set myKey wkq<br> exit myKey<br> type myKey<br> del myKey </p></blockquote><blockquote><p> set key wkq<br> expire key 5</p></blockquote><h1 id="Redis-Lists"><a href="#Redis-Lists" class="headerlink" title="Redis Lists"></a>Redis Lists</h1><blockquote><p> Redis lists are implemented via Linked Lists.<br> Redis Lists are implemented with linked lists because for a database system it is crucial to be able to add elements to a very long list in a very fast way. Another strong advantage, as you’ll see in a moment, is that Redis Lists can be taken at constant length in constant time.</p></blockquote><h1 id="Redis-expires"><a href="#Redis-expires" class="headerlink" title="Redis expires"></a>Redis expires</h1><p> <a href="https://redis.io/commands/expire" target="_blank" rel="noopener">EXPIRE key seconds</a></p><blockquote><p> Set a timeout on key. After the timeout has expired, the key will automatically be deleted. A key with an associated timeout is often said to be volatile in Redis terminology.<br> The timeout will only be cleared by commands that delete or overwrite the contents of the key, including DEL, SET, GETSET and all the *STORE commands. This means that all the operations that conceptually alter the value stored at the key without replacing it with a new one will leave the timeout untouched. For instance, incrementing the value of a key with INCR, pushing a new value into a list with LPUSH, or altering the field value of a hash with HSET are all operations that will leave the timeout untouched.<br> The timeout can also be cleared, turning the key back into a persistent key, using the PERSIST command.<br> If a key is renamed with RENAME, the associated time to live is transferred to the new key name.</p></blockquote><p>Expire accuracy<br>In Redis 2.4 the expire might not be pin-point accurate, and it could be between zero to one seconds out.<br>Since Redis 2.6 the expire error is from 0 to 1 milliseconds.</p><p>Expires and persistence<br>Keys expiring information is stored as absolute Unix timestamps (in milliseconds in case of Redis version 2.6 or greater). This means that the time is flowing even when the Redis instance is not active.<br>For expires to work well, the computer time must be taken stable. If you move an RDB file from two computers with a big desync in their clocks, funny things may happen (like all the keys loaded to be expired at loading time).<br>Even running instances will always check the computer clock, so for instance if you set a key with a time to live of 1000 seconds, and then set your computer time 2000 seconds in the future, the key will be expired immediately, instead of lasting for 1000 seconds.</p><p>How Redis expires keys<br>Redis keys are expired in two ways: a passive way, and an active way.</p><p>A key is passively expired simply when some client tries to access it, and the key is found to be timed out.</p><p>Of course this is not enough as there are expired keys that will never be accessed again. These keys should be expired anyway, so periodically Redis tests a few keys at random among keys with an expire set. All the keys that are already expired are deleted from the keyspace.</p><p>Specifically this is what Redis does 10 times per second:</p><p>Test 20 random keys from the set of keys with an associated expire.<br>Delete all the keys found expired.<br>If more than 25% of keys were expired, start again from step 1.<br>This is a trivial probabilistic algorithm, basically the assumption is that our sample is representative of the whole key space, and we continue to expire until the percentage of keys that are likely to be expired is under 25%</p><p>This means that at any given moment the maximum amount of keys already expired that are using memory is at max equal to max amount of write operations per second divided by 4.</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://redis.io/documentation" target="_blank" rel="noopener">redis.io/documentation</a><br>[2] <a href="https://redis.io/topics/data-types-intro" target="_blank" rel="noopener">redis.io/topics/data-types-intro</a><br>[3] <a href="https://redis.io/topics/data-types" target="_blank" rel="noopener">redis.io/topics/data-types</a><br><a href="https://redis.io/commands/#string" target="_blank" rel="noopener">https://redis.io/commands/#string</a><br><a href="https://redis.io/commands#list" target="_blank" rel="noopener">https://redis.io/commands#list</a><br><a href="https://redis.io/commands#set" target="_blank" rel="noopener">https://redis.io/commands#set</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; Redis is not a plain key-value store, it is actually a data structures server, supporting different kinds of values. What this means is that, while in traditional key-value stores you associate string keys to string values, in Redis the value is not limited to a simple string, but can also hold more complex data structures. The following is the list of all the data structures supported by Redis, which will be covered separately in this tutorial:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;redis-data-types&quot;&gt;&lt;a href=&quot;#redis-data-types&quot; class=&quot;headerlink&quot; title=&quot;redis data types&quot;&gt;&lt;/a&gt;redis data types&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; Binary-safe strings.&lt;br&gt; Lists: collections of string elements sorted according to the order of insertion. They are basically linked lists.&lt;br&gt; Sets: collections of unique, unsorted string elements.&lt;br&gt; Sorted sets, similar to Sets but where every string element is associated to a floating number value, called score. The elements are always taken sorted by their score, so unlike Sets it is possible to retrieve a range of elements (for example you may ask: give me the top 10, or the bottom 10).&lt;br&gt; Hashes, which are maps composed of fields associated with values. Both the field and the value are strings. This is very similar to Ruby or Python hashes.&lt;br&gt; Bit arrays (or simply bitmaps): it is possible, using special commands, to handle String values like an array of bits: you can set and clear individual bits, count all the bits set to 1, find the first set or unset bit, and so forth.&lt;br&gt; HyperLogLogs: this is a probabilistic data structure which is used in order to estimate the cardinality of a set. Don’t be scared, it is simpler than it seems… See later in the HyperLogLog section of this tutorial.&lt;br&gt; Streams: append-only collections of map-like entries that provide an abstract log data type. They are covered in depth in the Introduction to Redis Streams.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Redis-keys&quot;&gt;&lt;a href=&quot;#Redis-keys&quot; class=&quot;headerlink&quot; title=&quot;Redis keys&quot;&gt;&lt;/a&gt;Redis keys&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; Redis的key可以是任意类型，可以是字符串，还可以是图片，还可以是空字符串&lt;br&gt; Redis的key是二进制安全的，底层存储用的byte[]&lt;br&gt; 建议key不要太大&lt;br&gt; 建议key不要太小，太小会比较省内存，但是可读性、可维护性较差。&lt;br&gt; 尝试坚持一个模式。 建议使用 object-type:id，比如 &lt;code&gt;user:1000&lt;/code&gt;&lt;br&gt; redis允许最大的key大小为 512MB&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="redis" scheme="http://weikeqin.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://weikeqin.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch-setup</title>
    <link href="http://weikeqin.com/2020/05/16/elasticsearch-setup/"/>
    <id>http://weikeqin.com/2020/05/16/elasticsearch-setup/</id>
    <published>2020-05-16T09:08:13.000Z</published>
    <updated>2020-05-30T14:43:48.058Z</updated>
    
    <content type="html"><![CDATA[<p>  elasticsearch 配置笔记</p><p>Elasticsearch has three configuration files:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch.yml for configuring Elasticsearch</span><br><span class="line">jvm.options for configuring Elasticsearch JVM settings</span><br><span class="line">log4j2.properties for configuring Elasticsearch logging</span><br></pre></td></tr></table></figure></p><h1 id="ES-Server-配置"><a href="#ES-Server-配置" class="headerlink" title="ES Server 配置"></a>ES Server 配置</h1><h2 id="ES-配置"><a href="#ES-配置" class="headerlink" title="ES 配置"></a>ES 配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#自动创建索引</span><br><span class="line">action.auto_create_index: .monitoring*,.watches,.triggered_watches,.watcher-history*,.ml*</span><br></pre></td></tr></table></figure><blockquote><p>可重新加载配置<br> Just like the settings values in elasticsearch.yml, changes to the keystore contents are not automatically applied to the running Elasticsearch node. Re-reading settings requires a node restart. However, certain secure settings are marked as reloadable. </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST _nodes/reload_secure_settings</span><br><span class="line">POST _nodes/&lt;node_id&gt;/reload_secure_settings</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST &quot;localhost:9200/_nodes/reload_secure_settings?pretty&quot; -H &apos;Content-Type: application/json&apos; -d&apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;secure_settings_password&quot;: &quot;s3cr3t&quot; </span><br><span class="line">&#125;</span><br><span class="line">&apos;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="jvm配置"><a href="#jvm配置" class="headerlink" title="jvm配置"></a>jvm配置</h2><p>  可以通过配置 <code>jvm.options文件 或</code>ES_JAVA_OPTS`环境变量配置es jvm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-Xmx16g</span><br><span class="line">8-9:-Xmx20g</span><br></pre></td></tr></table></figure><h2 id="ES日志配置"><a href="#ES日志配置" class="headerlink" title="ES日志配置"></a>ES日志配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">######## Server JSON ############################</span><br><span class="line">appender.rolling.type = RollingFile </span><br><span class="line">appender.rolling.name = rolling</span><br><span class="line">appender.rolling.fileName = $&#123;sys:es.logs.base_path&#125;$&#123;sys:file.separator&#125;$&#123;sys:es.logs.cluster_name&#125;_server.json </span><br><span class="line">appender.rolling.layout.type = ESJsonLayout </span><br><span class="line">appender.rolling.layout.type_name = server </span><br><span class="line">appender.rolling.filePattern = $&#123;sys:es.logs.base_path&#125;$&#123;sys:file.separator&#125;$&#123;sys:es.logs.cluster_name&#125;-%d&#123;yyyy-MM-dd&#125;-%i.json.gz </span><br><span class="line">appender.rolling.policies.type = Policies</span><br><span class="line">appender.rolling.policies.time.type = TimeBasedTriggeringPolicy </span><br><span class="line">appender.rolling.policies.time.interval = 1 </span><br><span class="line">appender.rolling.policies.time.modulate = true </span><br><span class="line">appender.rolling.policies.size.type = SizeBasedTriggeringPolicy </span><br><span class="line">appender.rolling.policies.size.size = 256MB </span><br><span class="line">appender.rolling.strategy.type = DefaultRolloverStrategy</span><br><span class="line">appender.rolling.strategy.fileIndex = nomax</span><br><span class="line">appender.rolling.strategy.action.type = Delete </span><br><span class="line">appender.rolling.strategy.action.basepath = $&#123;sys:es.logs.base_path&#125;</span><br><span class="line">appender.rolling.strategy.action.condition.type = IfFileName </span><br><span class="line">appender.rolling.strategy.action.condition.glob = $&#123;sys:es.logs.cluster_name&#125;-* </span><br><span class="line">appender.rolling.strategy.action.condition.nested_condition.type = IfAccumulatedFileSize </span><br><span class="line">appender.rolling.strategy.action.condition.nested_condition.exceeds = 2GB </span><br><span class="line">################################################</span><br></pre></td></tr></table></figure><blockquote><p> 设置ES log级别</p><ol><li><code>-E logger.org.elasticsearch.transport=trace</code>  debug in single node </li><li>修改 <code>elasticsearch.yml</code>  <code>logger.org.elasticsearch.transport: info</code>  es未启动时配置</li><li>动态修改日志级别  dynamically need to adjust a logging level on an actively-running cluster.</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT /_cluster/settings</span><br><span class="line">&#123;</span><br><span class="line">  &quot;transient&quot;: &#123;</span><br><span class="line">    &quot;logger.org.elasticsearch.transport&quot;: &quot;trace&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ol start="4"><li>修改 <code>log4j2.properties</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">logger.transport.name = org.elasticsearch.transport</span><br><span class="line">logger.transport.level = trace</span><br></pre></td></tr></table></figure></li></ol></blockquote><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/setup.html</a><br>  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/targz.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/targz.html</a><br>  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/settings.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/settings.html</a><br>  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/jvm-options.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/jvm-options.html</a><br>  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/secure-settings.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/secure-settings.html</a><br>  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/logging.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/logging.html</a><br>  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/auditing-settings.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/auditing-settings.html</a><br>  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-settings.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-settings.html</a><br>  <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-settings.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-settings.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  elasticsearch 配置笔记&lt;/p&gt;
&lt;p&gt;Elasticsearch has three configuration files:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;elasticsearch.yml for configuring Elasticsearch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;jvm.options for configuring Elasticsearch JVM settings&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;log4j2.properties for configuring Elasticsearch logging&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;ES-Server-配置&quot;&gt;&lt;a href=&quot;#ES-Server-配置&quot; class=&quot;headerlink&quot; title=&quot;ES Server 配置&quot;&gt;&lt;/a&gt;ES Server 配置&lt;/h1&gt;&lt;h2 id=&quot;ES-配置&quot;&gt;&lt;a href=&quot;#ES-配置&quot; class=&quot;headerlink&quot; title=&quot;ES 配置&quot;&gt;&lt;/a&gt;ES 配置&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#自动创建索引&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;action.auto_create_index: .monitoring*,.watches,.triggered_watches,.watcher-history*,.ml*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;可重新加载配置&lt;br&gt; Just like the settings values in elasticsearch.yml, changes to the keystore contents are not automatically applied to the running Elasticsearch node. Re-reading settings requires a node restart. However, certain secure settings are marked as reloadable. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;POST _nodes/reload_secure_settings&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POST _nodes/&amp;lt;node_id&amp;gt;/reload_secure_settings&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X POST &amp;quot;localhost:9200/_nodes/reload_secure_settings?pretty&amp;quot; -H &amp;apos;Content-Type: application/json&amp;apos; -d&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;secure_settings_password&amp;quot;: &amp;quot;s3cr3t&amp;quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://weikeqin.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://weikeqin.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch Logstash Kibana 笔记</title>
    <link href="http://weikeqin.com/2020/05/16/elk-notes/"/>
    <id>http://weikeqin.com/2020/05/16/elk-notes/</id>
    <published>2020-05-16T08:21:23.000Z</published>
    <updated>2020-05-17T15:31:40.565Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> Elastic Stack 是适用于数据采集、充实、存储、分析和可视化的一组开源工具。人们通常将 Elastic Stack 称为 ELK Stack（代指 Elasticsearch、Logstash 和 Kibana）</p></blockquote><blockquote><p> Elasticsearch 是一个分布式的开源搜索和分析引擎，适用于所有类型的数据，包括文本、数字、地理空间、结构化和非结构化数据。  类似于MySQL，用来存储和分析数据。<br> Logstash可用来对数据进行聚合和处理，并将数据发送到 Elasticsearch。Logstash 是一个开源的服务器端数据处理管道，允许您在将数据索引到 Elasticsearch 之前同时从多个来源采集数据，并对数据进行充实和转换。 类似于程序，抽取解析数据并储存到ES<br> Kibana 是一款适用于 Elasticsearch 的数据可视化和管理工具。类似于使用MySQL时用的Navicat</p></blockquote><blockquote><p> 简单的说，LogStash用来收取解析日志并发消息写入ES，Elasticsearch用来存储和分析查询，Kibana用来查看</p></blockquote><p>  es下载地址 <a href="https://www.elastic.co/cn/downloads/elasticsearch" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/elasticsearch</a><br>  logstash下载地址 <a href="https://www.elastic.co/cn/downloads/logstash" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/logstash</a><br>  kibana下载地址  <a href="https://www.elastic.co/cn/downloads/kibana" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/kibana</a><br>  filebeats</p><a id="more"></a>  <!--    es下载 https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.7.0-linux-x86_64.tar.gz  logstash下载  https://artifacts.elastic.co/downloads/logstash/logstash-7.7.0.tar.gz  kibana下载 https://artifacts.elastic.co/downloads/kibana/kibana-7.7.0-linux-x86_64.tar.gz--><p> elasticsearch-7.x 要求JDK版本大于等于11<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ZBMAC-C02PGMT0F:~ weikeqin1$ java -version</span><br><span class="line">java version &quot;14&quot; 2020-03-17</span><br><span class="line">Java(TM) SE Runtime Environment (build 14+36-1461)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 14+36-1461, mixed mode, sharing)</span><br><span class="line">ZBMAC-C02PGMT0F:~ weikeqin1$</span><br></pre></td></tr></table></figure></p><h1 id="elasticsearch安装配置启动"><a href="#elasticsearch安装配置启动" class="headerlink" title="elasticsearch安装配置启动"></a>elasticsearch安装配置启动</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.7.0-linux-x86_64.tar.gz</span><br><span class="line">tar -xzf elasticsearch-7.7.0-linux-x86_64.tar.gz</span><br><span class="line">cd elasticsearch-7.7.0/</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><blockquote><p> 修改 <code>elasticsearch-7.7.0/config/elasticsearch.yml</code> </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">action.destructive_requires_name: true</span><br><span class="line">xpack.ml.enabled: true</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd elasticsearch-7.7.0/</span><br><span class="line">./bin/elasticsearch</span><br></pre></td></tr></table></figure><blockquote><p> 后台启动可以用 <code>./bin/elasticsearch -d</code></p></blockquote><h2 id="验证是否启动成功"><a href="#验证是否启动成功" class="headerlink" title="验证是否启动成功"></a>验证是否启动成功</h2><blockquote><p> 在浏览器里输入  <a href="http://localhost:9200/?pretty" target="_blank" rel="noopener">http://localhost:9200/?pretty</a>  或者用 <code>curl &#39;http://localhost:9200/?pretty&#39;</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;: &quot;192.168.0.110&quot;,</span><br><span class="line">    &quot;cluster_name&quot;: &quot;elasticsearch&quot;,</span><br><span class="line">    &quot;cluster_uuid&quot;: &quot;aHsnglvYQvSrJeoFR70mCQ&quot;,</span><br><span class="line">    &quot;version&quot;: &#123;</span><br><span class="line">        &quot;number&quot;: &quot;7.7.0&quot;,</span><br><span class="line">        &quot;build_flavor&quot;: &quot;default&quot;,</span><br><span class="line">        &quot;build_type&quot;: &quot;tar&quot;,</span><br><span class="line">        &quot;build_hash&quot;: &quot;81a1e9eda8e6183f5237786246f6dced26a10eaf&quot;,</span><br><span class="line">        &quot;build_date&quot;: &quot;2020-05-16T02:01:37.602180Z&quot;,</span><br><span class="line">        &quot;build_snapshot&quot;: false,</span><br><span class="line">        &quot;lucene_version&quot;: &quot;8.5.1&quot;,</span><br><span class="line">        &quot;minimum_wire_compatibility_version&quot;: &quot;6.8.0&quot;,</span><br><span class="line">        &quot;minimum_index_compatibility_version&quot;: &quot;6.0.0-beta1&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;tagline&quot;: &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 看到类似以上结果说明es启动成功。  </p></blockquote><p><br></p><h1 id="kibana安装配置启动"><a href="#kibana安装配置启动" class="headerlink" title="kibana安装配置启动"></a>kibana安装配置启动</h1><h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-7.7.0-linux-x86_64.tar.gz </span><br><span class="line">tar -zxf kibana-7.7.0-linux-x86_64.tar.gz </span><br><span class="line">cd kibana-7.7.0-linux-x86_64</span><br></pre></td></tr></table></figure><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><blockquote><p> 修改 <code>kibana-7.7.0-darwin-x86_64/config/kibana.yml</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Kibana is served by a back end server. This setting specifies the port to use.</span><br><span class="line">server.port: 5601</span><br><span class="line"></span><br><span class="line"># Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.</span><br><span class="line"># The default is &apos;localhost&apos;, which usually means remote machines will not be able to connect.</span><br><span class="line"># To allow connections from remote users, set this parameter to a non-loopback address.</span><br><span class="line">server.host: &quot;localhost&quot;</span><br><span class="line"></span><br><span class="line"># The URLs of the Elasticsearch instances to use for all your queries.</span><br><span class="line">elasticsearch.hosts: [&quot;http://localhost:9200&quot;]</span><br></pre></td></tr></table></figure><h2 id="启动-1"><a href="#启动-1" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd kibana-7.7.0-linux-x86_64/</span><br><span class="line">./bin/kinana</span><br></pre></td></tr></table></figure><blockquote><p>后台运行可以用 <code>./bin/kinana &amp;</code></p></blockquote><h2 id="验证是否启动成功-1"><a href="#验证是否启动成功-1" class="headerlink" title="验证是否启动成功"></a>验证是否启动成功</h2><blockquote><p> 浏览器里输入 <a href="http://127.0.0.1:5601/" target="_blank" rel="noopener">http://127.0.0.1:5601/</a> 如果可以打开页面说明启动成功</p></blockquote><p><br></p><h1 id="logstash安装配置启动"><a href="#logstash安装配置启动" class="headerlink" title="logstash安装配置启动"></a>logstash安装配置启动</h1><h2 id="下载-2"><a href="#下载-2" class="headerlink" title="下载"></a>下载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/logstash/logstash-7.7.0.tar.gz</span><br><span class="line">tar -zxf logstash-7.7.0.tar.gz</span><br><span class="line">cd logstash-7.7.0</span><br></pre></td></tr></table></figure><h2 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h2><blockquote><p>在 config 目录下新建配置 <code>logstash-wkq-test.conf</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># Sample Logstash configuration for creating a simple</span><br><span class="line"># file -&gt; Logstash -&gt; Elasticsearch pipeline.</span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; [ &quot;/Users/weikeqin1/WorkSpaces/java/springboot-test/logs/entrance.log&quot;, &quot;/Users/weikeqin1/WorkSpaces/java/springboot-test/logs/*.log&quot; ]</span><br><span class="line">    type =&gt; &quot;entrance&quot;</span><br><span class="line">    start_position =&gt; &quot;beginning&quot;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; [ &quot;/Users/weikeqin1/WorkSpaces/java/springboot-test/logs/error*.log&quot; ]</span><br><span class="line">    type =&gt; &quot;error&quot;</span><br><span class="line">    start_position =&gt; &quot;beginning&quot;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; &quot;/var/log/apache/access.log&quot;</span><br><span class="line">    type =&gt; &quot;apache&quot;</span><br><span class="line">    start_position =&gt; &quot;beginning&quot;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  if [path] =~ &quot;entrance&quot; &#123;</span><br><span class="line">    mutate &#123; replace =&gt; &#123; &quot;type&quot; =&gt; &quot;entrance_log&quot; &#125; &#125;</span><br><span class="line">    grok &#123;</span><br><span class="line">      match =&gt; &#123; &quot;msg&quot; =&gt; &quot;%&#123;COMBINEDAPACHELOG&#125;&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; else if [path] =~ &quot;error&quot; &#123;</span><br><span class="line">    mutate &#123; replace =&gt; &#123; type =&gt; &quot;error_log&quot; &#125; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  date &#123;</span><br><span class="line">    match =&gt; [ &quot;timestamp&quot; , &quot;yyyy-MM-dd HH:mm:ss&quot; ]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [&quot;http://localhost:9200&quot;]</span><br><span class="line">    index =&gt; &quot;log-%&#123;+YYYY.MM.dd&#125;&quot;</span><br><span class="line">    #user =&gt; &quot;elastic&quot;</span><br><span class="line">    #password =&gt; &quot;changeme&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 配置文件中的 grok 对应解析日志的字段<br> 日志样例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2020-05-17 11:14:22.887 INFO [XNIO-1 task-9] cn.wkq.controller.TestController.test|&#123;&quot;_traceId&quot;:&quot;1589685262886CY74&quot;,&quot;_method&quot;:&quot;test&quot;,&quot;param&quot;:&#123;&quot;appKey&quot;:&quot;wkq&quot;&#125;&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>解析规则<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%&#123;DATA:logDate&#125; %&#123;DATA:logTime&#125; %&#123;DATA:logLevel&#125; \[%&#123;DATA:thread&#125;\]%&#123;DATA:classnameMethod&#125;\|\&#123;%&#123;DATA:msg&#125;\&#125; </span><br><span class="line"></span><br><span class="line">%&#123;DATA:logDate&#125; %&#123;DATA:logTime&#125; %&#123;DATA:logLevel&#125; \[%&#123;DATA:thread&#125;\] %&#123;DATA:classnameMethod&#125;\|\&#123;\&quot;_traceId\&quot;:\&quot;%&#123;DATA:traceId&#125;\&quot;\,\&quot;_method\&quot;:\&quot;%&#123;DATA:method&#125;\&quot;,\&quot;param\&quot;\:\&#123;%&#123;DATA:param&#125;\&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p> 可以在kibana <a href="http://127.0.0.1:5601/app/kibana#/dev_tools/grokdebugger" target="_blank" rel="noopener">http://127.0.0.1:5601/app/kibana#/dev_tools/grokdebugger</a> 调试  </p></blockquote><h2 id="启动-2"><a href="#启动-2" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/logstash -f ./config/logstash-wkq-test.conf</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><blockquote><p> 用压测工具压测程序，会生成很多日志，压测的时候看监控，程序才占用75M内存，logstash就占1000m内存，实际使用500m左右，elasticsearch用的默认配置，也占1000m内存，实际使用750m左右<br> logstash太占内存了 </p></blockquote><h1 id="filebeat"><a href="#filebeat" class="headerlink" title="filebeat"></a>filebeat</h1><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.7.0-linux-x86_64.tar.gz</span><br><span class="line">tar xzvf filebeat-7.7.0-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#=========================== Filebeat inputs =============================</span><br><span class="line"></span><br><span class="line">filebeat.inputs:</span><br><span class="line"></span><br><span class="line"># Each - is an input. Most options can be set at the input level, so</span><br><span class="line"># you can use different inputs for various configurations.</span><br><span class="line"># Below are the input specific configurations.</span><br><span class="line"></span><br><span class="line">- type: log</span><br><span class="line"></span><br><span class="line">  # Change to true to enable this input configuration.</span><br><span class="line">  enabled: true</span><br><span class="line"></span><br><span class="line">  # Paths that should be crawled and fetched. Glob based paths.</span><br><span class="line">  paths:</span><br><span class="line">    - /Users/weikeqin1/WorkSpaces/java/springboot-test/logs/*.log</span><br><span class="line">    #- c:\programdata\elasticsearch\logs\*</span><br><span class="line"></span><br><span class="line">#-------------------------- Elasticsearch output ------------------------------</span><br><span class="line">#output.elasticsearch:</span><br><span class="line">  # Array of hosts to connect to.</span><br><span class="line">  #hosts: [&quot;localhost:9200&quot;]</span><br><span class="line"></span><br><span class="line">  # Protocol - either `http` (default) or `https`.</span><br><span class="line">  #protocol: &quot;https&quot;</span><br><span class="line"></span><br><span class="line">  # Authentication credentials - either API key or username/password.</span><br><span class="line">  #api_key: &quot;id:api_key&quot;</span><br><span class="line">  #username: &quot;elastic&quot;</span><br><span class="line">  #password: &quot;changeme&quot;</span><br><span class="line"></span><br><span class="line">#----------------------------- Logstash output --------------------------------</span><br><span class="line">output.logstash:</span><br><span class="line">  # The Logstash hosts</span><br><span class="line">  hosts: [&quot;localhost:5044&quot;]</span><br><span class="line"></span><br><span class="line">  # Optional SSL. By default is off.</span><br><span class="line">  # List of root certificates for HTTPS server verifications</span><br><span class="line">  #ssl.certificate_authorities: [&quot;/etc/pki/root/ca.pem&quot;]</span><br><span class="line"></span><br><span class="line">  # Certificate for SSL client authentication</span><br><span class="line">  #ssl.certificate: &quot;/etc/pki/client/cert.pem&quot;</span><br><span class="line"></span><br><span class="line">  # Client Certificate Key</span><br><span class="line">  #ssl.key: &quot;/etc/pki/client/cert.key&quot;</span><br></pre></td></tr></table></figure><h2 id="启动-3"><a href="#启动-3" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd filebeat-7.7.0-linux-x86_64</span><br><span class="line">sudo ./filebeat -e</span><br></pre></td></tr></table></figure><h1 id="在kibana查看日志"><a href="#在kibana查看日志" class="headerlink" title="在kibana查看日志"></a>在kibana查看日志</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;filebeat-7.7.0-2020.05.17&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;y42gIHIBU4Je81Q8Jaun&quot;,</span><br><span class="line">  &quot;_score&quot; : null,</span><br><span class="line">  &quot;_source&quot; : &#123;</span><br><span class="line">    &quot;log&quot; : &#123;</span><br><span class="line">      &quot;file&quot; : &#123;</span><br><span class="line">        &quot;path&quot; : &quot;/Users/weikeqin1/WorkSpaces/java/springboot-test/logs/springboot-test.2020-05-17_0.log&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;offset&quot; : 371432</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;tags&quot; : [</span><br><span class="line">      &quot;beats_input_codec_plain_applied&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;host&quot; : &#123;</span><br><span class="line">      &quot;architecture&quot; : &quot;x86_64&quot;,</span><br><span class="line">      &quot;id&quot; : &quot;DAA105AB-C93E-5E37-AFBF-A747032048AF&quot;,</span><br><span class="line">      &quot;ip&quot; : [</span><br><span class="line">        &quot;xx::xx:xx:xx:xx&quot;,</span><br><span class="line">        &quot;192.168.0.110&quot;,</span><br><span class="line">        &quot;xx::xx:xx:xx:xx&quot;,</span><br><span class="line">        &quot;xx::xx:xx:xx:xx&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;name&quot; : &quot;192.168.0.110&quot;,</span><br><span class="line">      &quot;mac&quot; : [</span><br><span class="line">        &quot;xx:xx:xx:xx:xx:xx&quot;,</span><br><span class="line">        &quot;xx:xx:xx:xx:xx:xx&quot;,</span><br><span class="line">        &quot;xx:xx:xx:xx:xx:xx&quot;,</span><br><span class="line">        &quot;xx:xx:xx:xx:xx:xx&quot;,</span><br><span class="line">        &quot;xx:xx:xx:xx:xx:xx&quot;,</span><br><span class="line">        &quot;xx:xx:xx:xx:xx:xx&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;os&quot; : &#123;</span><br><span class="line">        &quot;version&quot; : &quot;10.13.6&quot;,</span><br><span class="line">        &quot;build&quot; : &quot;17G8030&quot;,</span><br><span class="line">        &quot;kernel&quot; : &quot;17.7.0&quot;,</span><br><span class="line">        &quot;name&quot; : &quot;Mac OS X&quot;,</span><br><span class="line">        &quot;family&quot; : &quot;darwin&quot;,</span><br><span class="line">        &quot;platform&quot; : &quot;darwin&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;hostname&quot; : &quot;192.168.0.110&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;ecs&quot; : &#123;</span><br><span class="line">      &quot;version&quot; : &quot;1.5.0&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;agent&quot; : &#123;</span><br><span class="line">      &quot;id&quot; : &quot;1dcf526f-dc97-4a59-bccc-4751954962e6&quot;,</span><br><span class="line">      &quot;type&quot; : &quot;filebeat&quot;,</span><br><span class="line">      &quot;version&quot; : &quot;7.7.0&quot;,</span><br><span class="line">      &quot;ephemeral_id&quot; : &quot;810f6da6-b38a-4071-8d2f-9c45dee14440&quot;,</span><br><span class="line">      &quot;hostname&quot; : &quot;192.168.0.110&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;@version&quot; : &quot;1&quot;,</span><br><span class="line">    &quot;@timestamp&quot; : &quot;2020-05-17T03:14:23.865Z&quot;,</span><br><span class="line">    &quot;input&quot; : &#123;</span><br><span class="line">      &quot;type&quot; : &quot;log&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;message&quot; : &quot;&quot;&quot;2020-05-17 11:14:22.879 [http-nio-11011-exec-20] INFO  [cn.wkq.controller.TestController] [32] - &#123;&quot;_traceId&quot;:&quot;15896852628794XZ3&quot;,&quot;_method&quot;:&quot;TestController#test#1589685262879#&quot;&#125;&quot;&quot;&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot; : [</span><br><span class="line">    1589685263865</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://www.elastic.co/" target="_blank" rel="noopener">elastic官网</a><br>[2] <a href="https://www.elastic.co/cn/elasticsearch" target="_blank" rel="noopener">elasticsearch官网中文简介</a><br>[3] <a href="https://www.elastic.co/cn/logstash" target="_blank" rel="noopener">elasticsearch官网logstash中文简介</a><br>[4] <a href="https://www.elastic.co/cn/kibana" target="_blank" rel="noopener">elasticsearch官网kibana中文简介</a><br>[5] <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup.html" target="_blank" rel="noopener">elasticsearch下载安装启动及配置</a><br>[6] <a href="https://www.elastic.co/guide/en/logstash/current/configuration.html" target="_blank" rel="noopener">logstash-configuration</a><br>[7] <a href="https://www.elastic.co/guide/en/kibana/current/getting-started.html" target="_blank" rel="noopener">kibana-getting-started</a><br>[8] <a href="https://www.elastic.co/guide/en/beats/libbeat/current/getting-started.html" target="_blank" rel="noopener">beats-getting-started</a><br>[9] <a href="https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns" target="_blank" rel="noopener">logstash-patterns</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; Elastic Stack 是适用于数据采集、充实、存储、分析和可视化的一组开源工具。人们通常将 Elastic Stack 称为 ELK Stack（代指 Elasticsearch、Logstash 和 Kibana）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt; Elasticsearch 是一个分布式的开源搜索和分析引擎，适用于所有类型的数据，包括文本、数字、地理空间、结构化和非结构化数据。  类似于MySQL，用来存储和分析数据。&lt;br&gt; Logstash可用来对数据进行聚合和处理，并将数据发送到 Elasticsearch。Logstash 是一个开源的服务器端数据处理管道，允许您在将数据索引到 Elasticsearch 之前同时从多个来源采集数据，并对数据进行充实和转换。 类似于程序，抽取解析数据并储存到ES&lt;br&gt; Kibana 是一款适用于 Elasticsearch 的数据可视化和管理工具。类似于使用MySQL时用的Navicat&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt; 简单的说，LogStash用来收取解析日志并发消息写入ES，Elasticsearch用来存储和分析查询，Kibana用来查看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  es下载地址 &lt;a href=&quot;https://www.elastic.co/cn/downloads/elasticsearch&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.elastic.co/cn/downloads/elasticsearch&lt;/a&gt;&lt;br&gt;  logstash下载地址 &lt;a href=&quot;https://www.elastic.co/cn/downloads/logstash&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.elastic.co/cn/downloads/logstash&lt;/a&gt;&lt;br&gt;  kibana下载地址  &lt;a href=&quot;https://www.elastic.co/cn/downloads/kibana&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.elastic.co/cn/downloads/kibana&lt;/a&gt;&lt;br&gt;  filebeats&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://weikeqin.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://weikeqin.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>jdk javac 使用笔记</title>
    <link href="http://weikeqin.com/2020/05/14/javac-notes/"/>
    <id>http://weikeqin.com/2020/05/14/javac-notes/</id>
    <published>2020-05-14T02:27:20.000Z</published>
    <updated>2020-05-17T15:31:53.614Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 最近有一个需求，需要测试一下新数据库(mysql优化版)某个表的写入速度和查询速度，需要从我们的测试环境数据库查数据，插入到新的测试环境的新数据库。<br> 本地连不上测试的数据库<br> 有很多应用服务器，但是所有的服务器不能连外网，只能访问公司内网。<br> 测试环境的应用可以连测试的数据库<br> 想写个python脚本，但是服务器上python是2.7的，而且很多包没有。<br> 想了想，应用服务器部署了java程序，java的包都有，想写一个java脚本来测试。(没错是java脚本)</p></blockquote><blockquote><p> 测试环境数据库     db_test_old  192.168.1.10<br> 新测试环境新数据库  db_test_new  192.168.2.11<br> 测试环境应用       test-java    192.168.3.12</p></blockquote><blockquote><p> 在idea里写完脚本，运行没问题，然后在 terminal 运行，被啪啪的打脸</p></blockquote><a id="more"></a><h1 id="1-想象中运行java文件的样子"><a href="#1-想象中运行java文件的样子" class="headerlink" title="(1) 想象中运行java文件的样子"></a>(1) 想象中运行java文件的样子</h1><h2 id="1-1-查看jdk版本"><a href="#1-1-查看jdk版本" class="headerlink" title="(1.1) 查看jdk版本"></a>(1.1) 查看jdk版本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ java -version</span><br><span class="line">java version &quot;1.8.0_172&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_172-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.172-b11, mixed mode)</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h2 id="1-2-新建一个HelloWord-java文件测试"><a href="#1-2-新建一个HelloWord-java文件测试" class="headerlink" title="(1.2) 新建一个HelloWord.java文件测试"></a>(1.2) 新建一个HelloWord.java文件测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos java_test]$ pwd</span><br><span class="line">/home/wkq/workspaces/java_test</span><br><span class="line">vi HelloWorld.java</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public class HelloWorld&#123;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">System.out.println(&quot;Hello, World!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-3-编译HelloWorld-java"><a href="#1-3-编译HelloWorld-java" class="headerlink" title="(1.3) 编译HelloWorld.java"></a>(1.3) 编译HelloWorld.java</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos java_test]$ javac HelloWorld.java</span><br><span class="line"></span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br></pre></td></tr></table></figure><h2 id="1-4-运行HelloWorld"><a href="#1-4-运行HelloWorld" class="headerlink" title="(1.4) 运行HelloWorld"></a>(1.4) 运行HelloWorld</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos java_test]$ pwd</span><br><span class="line">/home/wkq/workspaces/java_test</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ ll</span><br><span class="line">total 8</span><br><span class="line">-rw-rw-r-- 1 wkq wkq 427 May 17 18:48 HelloWorld.class</span><br><span class="line">-rw-rw-r-- 1 wkq wkq 112 May 17 18:47 HelloWorld.java</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ java HelloWorld</span><br><span class="line">Hello, World!</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br></pre></td></tr></table></figure><blockquote><p> 没问题，很完美</p></blockquote><h2 id="1-5-被打脸的一幕"><a href="#1-5-被打脸的一幕" class="headerlink" title="(1.5) 被打脸的一幕"></a>(1.5) 被打脸的一幕</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos java_test]$ java HelloWorld.class</span><br><span class="line">Error: Could not find or load main class HelloWorld.class</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br></pre></td></tr></table></figure><blockquote><p> 竟然不能运行 class文件<br> 被打脸后才明白，java的参数，传入的是main函数所在的类的名字，而不是class文件；java会根据类名自动去找class文件。</p></blockquote><p><br></p><h1 id="2-复盘"><a href="#2-复盘" class="headerlink" title="(2) 复盘"></a>(2) 复盘</h1><h2 id="2-1-查看jdk版本"><a href="#2-1-查看jdk版本" class="headerlink" title="(2.1) 查看jdk版本"></a>(2.1) 查看jdk版本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ java -version</span><br><span class="line">java version &quot;1.8.0_172&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_172-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.172-b11, mixed mode)</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h2 id="2-2-新建MysqlLoadDataTest-java"><a href="#2-2-新建MysqlLoadDataTest-java" class="headerlink" title="(2.2) 新建MysqlLoadDataTest.java"></a>(2.2) 新建MysqlLoadDataTest.java</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi MySqlLoadDataTest.java</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">package cn.wkq.java.test;</span><br><span class="line"></span><br><span class="line">import java.sql.*;</span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * MySqlLoadDataTest</span><br><span class="line"> *</span><br><span class="line"> * @author: weikeqin.cn@gmail.com</span><br><span class="line"> * @date: 2020-05-13 20:06</span><br><span class="line"> **/</span><br><span class="line">public class MySqlLoadDataTest &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @param args</span><br><span class="line">     */</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        MySqlLoadDataTest t = new MySqlLoadDataTest();</span><br><span class="line">        t.loadData();</span><br><span class="line">        System.out.println(&quot;执行完了。&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    public void loadData() &#123;</span><br><span class="line"></span><br><span class="line">        int batchSize = 100;</span><br><span class="line">        // </span><br><span class="line">        String driverClassName = &quot;com.mysql.jdbc.Driver&quot;;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            Class.forName(driverClassName);</span><br><span class="line">        &#125; catch (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 省略其它逻辑</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-编译"><a href="#2-3-编译" class="headerlink" title="(2.3) 编译"></a>(2.3) 编译</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos java_test]$ pwd</span><br><span class="line">/home/wkq/workspaces/java_test</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ javac -encoding &quot;utf-8&quot; MySqlLoadDataTest.java</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br></pre></td></tr></table></figure><h2 id="2-4-运行"><a href="#2-4-运行" class="headerlink" title="(2.4) 运行"></a>(2.4) 运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos java_test]$ java MySqlLoadDataTest</span><br><span class="line">Error: Could not find or load main class MySqlLoadDataTest</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ java cn.wkq.java.test.MySqlLoadDataTest</span><br><span class="line">Error: Could not find or load main class cn.wkq.java.test.MySqlLoadDataTest</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br></pre></td></tr></table></figure><h2 id="2-5-注释掉第一行包名重新运行"><a href="#2-5-注释掉第一行包名重新运行" class="headerlink" title="(2.5) 注释掉第一行包名重新运行"></a>(2.5) 注释掉第一行包名重新运行</h2><blockquote><p> 如果把 文件的第一行注释掉，重新编译运行会出现 </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos java_test]$ vi MySqlLoadDataTest.java</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ </span><br><span class="line">[wkq@VM_77_25_centos java_test]$ javac -encoding &quot;utf-8&quot; MySqlLoadDataTest.java</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ java MySqlLoadDataTest</span><br><span class="line">java.lang.ClassNotFoundException: com.mysql.jdbc.Driver</span><br><span class="line">at java.net.URLClassLoader.findClass(URLClassLoader.java:381)</span><br><span class="line">at java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class="line">at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span><br><span class="line">at java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class="line">at java.lang.Class.forName0(Native Method)</span><br><span class="line">at java.lang.Class.forName(Class.java:264)</span><br><span class="line">at MySqlLoadDataTest.loadData(MySqlLoadDataTest.java:35)</span><br><span class="line">at MySqlLoadDataTest.main(MySqlLoadDataTest.java:20)</span><br><span class="line">?????</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos java_test]$ pwd</span><br><span class="line">/home/wkq/workspaces/java_test</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ cd /home/wkq/lib/</span><br><span class="line">[wkq@VM_77_25_centos lib]$ wget &quot;https://repo1.maven.org/maven2/mysql/mysql-connector-java/5.1.47/mysql-connector-java-5.1.47.jar&quot;</span><br><span class="line">--2020-05-17 21:59:08--  https://repo1.maven.org/maven2/mysql/mysql-connector-java/5.1.47/mysql-connector-java-5.1.47.jar</span><br><span class="line">Resolving repo1.maven.org (repo1.maven.org)... 151.101.24.209</span><br><span class="line">Connecting to repo1.maven.org (repo1.maven.org)|151.101.24.209|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 1007502 (984K) [application/java-archive]</span><br><span class="line">Saving to: &apos;mysql-connector-java-5.1.47.jar&apos;</span><br><span class="line"></span><br><span class="line">100%[=====================================================================================&gt;] 1,007,502   10.1KB/s   in 85s</span><br><span class="line"></span><br><span class="line">2020-05-17 22:00:34 (11.6 KB/s) - &apos;mysql-connector-java-5.1.47.jar&apos; saved [1007502/1007502]</span><br><span class="line"></span><br><span class="line">[wkq@VM_77_25_centos lib]$</span><br><span class="line">[wkq@VM_77_25_centos lib]$ ll</span><br><span class="line">total 988</span><br><span class="line">-rw-rw-r-- 1 wkq wkq 1007502 Aug  7  2018 mysql-connector-java-5.1.47.jar</span><br><span class="line">[wkq@VM_77_25_centos lib]$ pwd</span><br><span class="line">/home/wkq/lib</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ java -Dfile.encoding=UTF-8 -classpath /home/wkq/lib/mysql-connector-java-5.1.47.jar:/home/wkq/workspaces/java_test MySqlLoadDataTest</span><br><span class="line">执行完了。</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br></pre></td></tr></table></figure><blockquote><p> 在注释了第一行包路径后，重新编译<br> 指定了classpath后就可以运行成功。<br> 但是现在还有一个问题，测试的时候可以写一个java文件，但是实际开发的时候肯定不能不带包名</p></blockquote><h2 id="2-6-不注释第一行包名，把MySqlLoadDataTest-class换个目录"><a href="#2-6-不注释第一行包名，把MySqlLoadDataTest-class换个目录" class="headerlink" title="(2.6) 不注释第一行包名，把MySqlLoadDataTest.class换个目录"></a>(2.6) 不注释第一行包名，把MySqlLoadDataTest.class换个目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos java_test]$ ll</span><br><span class="line">total 16</span><br><span class="line">-rw-rw-r-- 1 wkq wkq  427 May 17 18:48 HelloWorld.class</span><br><span class="line">-rw-rw-r-- 1 wkq wkq  112 May 17 18:47 HelloWorld.java</span><br><span class="line">-rw-rw-r-- 1 wkq wkq  752 May 17 22:17 MySqlLoadDataTest.java</span><br><span class="line">drwxrwxr-x 3 wkq wkq 4096 May 17 22:17 cn</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ pwd</span><br><span class="line">/home/wkq/workspaces/java_test</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ java cn.wkq.java.test.MySqlLoadDataTest</span><br><span class="line">java.lang.ClassNotFoundException: com.mysql.jdbc.Driver</span><br><span class="line">at java.net.URLClassLoader.findClass(URLClassLoader.java:381)</span><br><span class="line">at java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class="line">at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span><br><span class="line">at java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class="line">at java.lang.Class.forName0(Native Method)</span><br><span class="line">at java.lang.Class.forName(Class.java:264)</span><br><span class="line">at cn.wkq.java.test.MySqlLoadDataTest.loadData(MySqlLoadDataTest.java:35)</span><br><span class="line">at cn.wkq.java.test.MySqlLoadDataTest.main(MySqlLoadDataTest.java:20)</span><br><span class="line">?????</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ java -Dfile.encoding=UTF-8 -classpath /home/wkq/lib/mysql-connector-java-5.1.47.jar cn.wkq.java.test.MySqlLoadDataTest</span><br><span class="line">Error: Could not find or load main class cn.wkq.java.test.MySqlLoadDataTest</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ java -Dfile.encoding=UTF-8 -classpath /home/wkq/lib/mysql-connector-java-5.1.47.jar:/home/wkq/workspaces/java_test cn.wkq.java.test.MySqlLoadDataTest</span><br><span class="line">执行完了。</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">&gt;  可以看到，运行成功了，果然是加了包名以后，编译的main方法放到了对应目录下。</span><br><span class="line">&gt;  终于用教训理解了全限定类名</span><br><span class="line">&gt;  用教训理解了 Java 会根据包名对应出目录结构，并从class path搜索该目录去找class文件。 (默认是当前目录，如果运行时不在当前目录需要指定 classpath)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## (2.7) 不注释第一行包名，不换目录 </span><br><span class="line"></span><br><span class="line">&gt;  正常情况下，我们写完java代码，直接编译后就可以运行，不可能再对每个文件创建目录。所以得换个办法。</span><br><span class="line"></span><br><span class="line">```log</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ rm -rf cn/</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ javac -Dfile.encoding=UTF-8 -d MySqlLoadDataTest.java</span><br><span class="line">javac: invalid flag: -Dfile.encoding=UTF-8</span><br><span class="line">Usage: javac &lt;options&gt; &lt;source files&gt;</span><br><span class="line">use -help for a list of possible options</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ javac -Dfile.encoding=UTF-8 -d . MySqlLoadDataTest.java</span><br><span class="line">javac: invalid flag: -Dfile.encoding=UTF-8</span><br><span class="line">Usage: javac &lt;options&gt; &lt;source files&gt;</span><br><span class="line">use -help for a list of possible options</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ javac -encoding &quot;utf-8&quot; -d . MySqlLoadDataTest.java</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ ll</span><br><span class="line">total 16</span><br><span class="line">-rw-rw-r-- 1 wkq wkq  427 May 17 18:48 HelloWorld.class</span><br><span class="line">-rw-rw-r-- 1 wkq wkq  112 May 17 18:47 HelloWorld.java</span><br><span class="line">-rw-rw-r-- 1 wkq wkq  752 May 17 22:17 MySqlLoadDataTest.java</span><br><span class="line">drwxrwxr-x 3 wkq wkq 4096 May 17 22:29 cn</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ java -Dfile.encoding=UTF-8 -classpath /home/wkq/lib/mysql-connector-java-5.1.47.jar:/home/wkq/workspaces/java_test cn.wkq.java.test.MySqlLoadDataTest</span><br><span class="line">执行完了。</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br></pre></td></tr></table></figure><blockquote><p> 果然可以运行</p></blockquote><h2 id="编译java文件到指定目录"><a href="#编译java文件到指定目录" class="headerlink" title="编译java文件到指定目录"></a>编译java文件到指定目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos java_test]$ javac -encoding &quot;utf-8&quot; -d /home/wkq/workspaces/test_target/ MySqlLoadDataTest.java</span><br><span class="line">[wkq@VM_77_25_centos java_test]$</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ ll</span><br><span class="line">total 16</span><br><span class="line">-rw-rw-r-- 1 wkq wkq  427 May 17 18:48 HelloWorld.class</span><br><span class="line">-rw-rw-r-- 1 wkq wkq  112 May 17 18:47 HelloWorld.java</span><br><span class="line">-rw-rw-r-- 1 wkq wkq  752 May 17 22:17 MySqlLoadDataTest.java</span><br><span class="line">drwxrwxr-x 3 wkq wkq 4096 May 17 22:29 cn</span><br><span class="line">[wkq@VM_77_25_centos java_test]$ cd /home/wkq/workspaces/test_target/</span><br><span class="line">[wkq@VM_77_25_centos test_target]$ ll</span><br><span class="line">total 4</span><br><span class="line">drwxrwxr-x 3 wkq wkq 4096 May 17 22:32 cn</span><br><span class="line">[wkq@VM_77_25_centos test_target]$</span><br><span class="line">[wkq@VM_77_25_centos test_target]$ java -Dfile.encoding=UTF-8 -classpath /home/wkq/lib/mysql-connector-java-5.1.47.jar:/home/wkq/workspaces/java_test cn.wkq.java.test.MySqlLoadDataTest</span><br><span class="line">执行完了。</span><br><span class="line">[wkq@VM_77_25_centos test_target]$</span><br></pre></td></tr></table></figure><h2 id="开发工具idea是怎么编译代码的"><a href="#开发工具idea是怎么编译代码的" class="headerlink" title="开发工具idea是怎么编译代码的"></a>开发工具idea是怎么编译代码的</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac -d target src/cn/wkq/java/test/*.java</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/wkq/software/jdk1.8.0_172/bin/javac -encoding &quot;utf-8&quot; -d /home/wkq/workspaces/java_test/target/ /home/wkq/workspaces/java_test/src/*.java</span><br></pre></td></tr></table></figure><blockquote><p>jdk目录 /home/wkq/software/jdk1.8.0_172/bin/<br>java代码目录  /home/wkq/workspaces/java_test/src/<br>编译后存放目录 /home/wkq/workspaces/java_test/target/</p></blockquote><h2 id="开发工具idea是怎么运行代码的"><a href="#开发工具idea是怎么运行代码的" class="headerlink" title="开发工具idea是怎么运行代码的"></a>开发工具idea是怎么运行代码的</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/wkq/software/jdk1.8.0_172/bin/java -Dfile.encoding=UTF-8 -classpath /home/wkq/lib/mysql-connector-java-5.1.47.jar:/home/wkq/workspaces/java_test cn.wkq.java.test.MySqlLoadDataTest</span><br></pre></td></tr></table></figure><blockquote><p>jdk目录 /home/wkq/software/jdk1.8.0_172/bin/<br>指定 classpath目录 -classpath /home/wkq/lib/mysql-connector-java-5.1.47.jar:/home/wkq/workspaces/java_test<br>运行main方法 cn.wkq.java.test.MySqlLoadDataTest</p></blockquote><h1 id="javac命令"><a href="#javac命令" class="headerlink" title="javac命令"></a>javac命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ /home/wkq/software/jdk1.8.0_172/bin/javac</span><br><span class="line">Usage: javac &lt;options&gt; &lt;source files&gt;</span><br><span class="line">where possible options include:</span><br><span class="line">  -g                         Generate all debugging info</span><br><span class="line">  -g:none                    Generate no debugging info</span><br><span class="line">  -g:&#123;lines,vars,source&#125;     Generate only some debugging info</span><br><span class="line">  -nowarn                    Generate no warnings</span><br><span class="line">  -verbose                   Output messages about what the compiler is doing</span><br><span class="line">  -deprecation               Output source locations where deprecated APIs are used</span><br><span class="line">  -classpath &lt;path&gt;          Specify where to find user class files and annotation processors</span><br><span class="line">  -cp &lt;path&gt;                 Specify where to find user class files and annotation processors</span><br><span class="line">  -sourcepath &lt;path&gt;         Specify where to find input source files</span><br><span class="line">  -bootclasspath &lt;path&gt;      Override location of bootstrap class files</span><br><span class="line">  -extdirs &lt;dirs&gt;            Override location of installed extensions</span><br><span class="line">  -endorseddirs &lt;dirs&gt;       Override location of endorsed standards path</span><br><span class="line">  -proc:&#123;none,only&#125;          Control whether annotation processing and/or compilation is done.</span><br><span class="line">  -processor &lt;class1&gt;[,&lt;class2&gt;,&lt;class3&gt;...] Names of the annotation processors to run; bypasses default discovery process</span><br><span class="line">  -processorpath &lt;path&gt;      Specify where to find annotation processors</span><br><span class="line">  -parameters                Generate metadata for reflection on method parameters</span><br><span class="line">  -d &lt;directory&gt;             Specify where to place generated class files</span><br><span class="line">  -s &lt;directory&gt;             Specify where to place generated source files</span><br><span class="line">  -h &lt;directory&gt;             Specify where to place generated native header files</span><br><span class="line">  -implicit:&#123;none,class&#125;     Specify whether or not to generate class files for implicitly referenced files</span><br><span class="line">  -encoding &lt;encoding&gt;       Specify character encoding used by source files</span><br><span class="line">  -source &lt;release&gt;          Provide source compatibility with specified release</span><br><span class="line">  -target &lt;release&gt;          Generate class files for specific VM version</span><br><span class="line">  -profile &lt;profile&gt;         Check that API used is available in the specified profile</span><br><span class="line">  -version                   Version information</span><br><span class="line">  -help                      Print a synopsis of standard options</span><br><span class="line">  -Akey[=value]              Options to pass to annotation processors</span><br><span class="line">  -X                         Print a synopsis of nonstandard options</span><br><span class="line">  -J&lt;flag&gt;                   Pass &lt;flag&gt; directly to the runtime system</span><br><span class="line">  -Werror                    Terminate compilation if warnings occur</span><br><span class="line">  @&lt;filename&gt;                Read options and filenames from file</span><br><span class="line"></span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h1 id="java命令"><a href="#java命令" class="headerlink" title="java命令"></a>java命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ /home/wkq/software/jdk1.8.0_172/bin/java</span><br><span class="line">Usage: java [-options] class [args...]</span><br><span class="line">           (to execute a class)</span><br><span class="line">   or  java [-options] -jar jarfile [args...]</span><br><span class="line">           (to execute a jar file)</span><br><span class="line">where options include:</span><br><span class="line">    -d32  use a 32-bit data model if available</span><br><span class="line">    -d64  use a 64-bit data model if available</span><br><span class="line">    -server  to select the &quot;server&quot; VM</span><br><span class="line">                  The default VM is server.</span><br><span class="line"></span><br><span class="line">    -cp &lt;class search path of directories and zip/jar files&gt;</span><br><span class="line">    -classpath &lt;class search path of directories and zip/jar files&gt;</span><br><span class="line">                  A : separated list of directories, JAR archives,</span><br><span class="line">                  and ZIP archives to search for class files.</span><br><span class="line">    -D&lt;name&gt;=&lt;value&gt;</span><br><span class="line">                  set a system property</span><br><span class="line">    -verbose:[class|gc|jni]</span><br><span class="line">                  enable verbose output</span><br><span class="line">    -version      print product version and exit</span><br><span class="line">    -version:&lt;value&gt;</span><br><span class="line">                  Warning: this feature is deprecated and will be removed</span><br><span class="line">                  in a future release.</span><br><span class="line">                  require the specified version to run</span><br><span class="line">    -showversion  print product version and continue</span><br><span class="line">    -jre-restrict-search | -no-jre-restrict-search</span><br><span class="line">                  Warning: this feature is deprecated and will be removed</span><br><span class="line">                  in a future release.</span><br><span class="line">                  include/exclude user private JREs in the version search</span><br><span class="line">    -? -help      print this help message</span><br><span class="line">    -X            print help on non-standard options</span><br><span class="line">    -ea[:&lt;packagename&gt;...|:&lt;classname&gt;]</span><br><span class="line">    -enableassertions[:&lt;packagename&gt;...|:&lt;classname&gt;]</span><br><span class="line">                  enable assertions with specified granularity</span><br><span class="line">    -da[:&lt;packagename&gt;...|:&lt;classname&gt;]</span><br><span class="line">    -disableassertions[:&lt;packagename&gt;...|:&lt;classname&gt;]</span><br><span class="line">                  disable assertions with specified granularity</span><br><span class="line">    -esa | -enablesystemassertions</span><br><span class="line">                  enable system assertions</span><br><span class="line">    -dsa | -disablesystemassertions</span><br><span class="line">                  disable system assertions</span><br><span class="line">    -agentlib:&lt;libname&gt;[=&lt;options&gt;]</span><br><span class="line">                  load native agent library &lt;libname&gt;, e.g. -agentlib:hprof</span><br><span class="line">                  see also, -agentlib:jdwp=help and -agentlib:hprof=help</span><br><span class="line">    -agentpath:&lt;pathname&gt;[=&lt;options&gt;]</span><br><span class="line">                  load native agent library by full pathname</span><br><span class="line">    -javaagent:&lt;jarpath&gt;[=&lt;options&gt;]</span><br><span class="line">                  load Java programming language agent, see java.lang.instrument</span><br><span class="line">    -splash:&lt;imagepath&gt;</span><br><span class="line">                  show splash screen with specified image</span><br><span class="line">See http://www.oracle.com/technetwork/java/javase/documentation/index.html for more details.</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javac.html" target="_blank" rel="noopener">javac</a><br>[2] <a href="https://imshuai.com/using-javac" target="_blank" rel="noopener">第1期：抛开IDE，了解一下javac如何编译</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 最近有一个需求，需要测试一下新数据库(mysql优化版)某个表的写入速度和查询速度，需要从我们的测试环境数据库查数据，插入到新的测试环境的新数据库。&lt;br&gt; 本地连不上测试的数据库&lt;br&gt; 有很多应用服务器，但是所有的服务器不能连外网，只能访问公司内网。&lt;br&gt; 测试环境的应用可以连测试的数据库&lt;br&gt; 想写个python脚本，但是服务器上python是2.7的，而且很多包没有。&lt;br&gt; 想了想，应用服务器部署了java程序，java的包都有，想写一个java脚本来测试。(没错是java脚本)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt; 测试环境数据库     db_test_old  192.168.1.10&lt;br&gt; 新测试环境新数据库  db_test_new  192.168.2.11&lt;br&gt; 测试环境应用       test-java    192.168.3.12&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt; 在idea里写完脚本，运行没问题，然后在 terminal 运行，被啪啪的打脸&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="java" scheme="http://weikeqin.com/categories/java/"/>
    
    
      <category term="java" scheme="http://weikeqin.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>guava-cache</title>
    <link href="http://weikeqin.com/2020/05/13/guava-cache/"/>
    <id>http://weikeqin.com/2020/05/13/guava-cache/</id>
    <published>2020-05-13T01:19:36.000Z</published>
    <updated>2020-05-17T15:30:53.332Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> google guava-cache</p></blockquote><a id="more"></a><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://github.com/google/guava/wiki/CachesExplained" target="_blank" rel="noopener">google/guava/wiki/CachesExplained</a><br>[2] <a href="http://ifeve.com/google-guava-cachesexplained/" target="_blank" rel="noopener">[Google Guava] 3-缓存 并发编程网 - ifeve.com</a><br>[3] <a href="https://zhuanlan.zhihu.com/p/44380897" target="_blank" rel="noopener">缓存篇 : Guava cache 之全面剖析</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; google guava-cache&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="cache" scheme="http://weikeqin.com/categories/cache/"/>
    
    
      <category term="cache" scheme="http://weikeqin.com/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>vim-notes</title>
    <link href="http://weikeqin.com/2020/04/18/vim-notes/"/>
    <id>http://weikeqin.com/2020/04/18/vim-notes/</id>
    <published>2020-04-18T06:49:16.000Z</published>
    <updated>2020-05-24T15:18:51.914Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> vim有三种模式，一般模式、编辑模式、命令模式。<br> 一般模式下只能 查看文件。  (输入 <code>ESC</code> 可以进入一般模式。)<br> 编辑模式下可以对文件进行 新增、修改、删除。  (输入 <code>i</code> 可以进入编辑模式。进入后左下角可以看到 <code>INSERT</code> 标识)<br> 命令模式下可以对文件进行 保存、退出 等操作。  (输入 <code>ESC</code> + <code>:</code> 可以进入命令模式。)</p></blockquote><blockquote><p> 输入<code>ESC</code>+<code>:</code>进入命令模式后，输入<code>q!</code>可以退出文件并且不保存修改。<br> 输入<code>ESC</code>+<code>:</code>进入命令模式后，输入<code>qw</code>可以退出文件并且保存修改。</p></blockquote><a id="more"></a><p> <img src="/img/linux/vim/vim_cheatsheat.jpeg" alt="vin_charset"></p><h1 id="1-一般模式"><a href="#1-一般模式" class="headerlink" title="(1) 一般模式"></a>(1) 一般模式</h1><blockquote><p> 一般模式下只能查看。</p></blockquote><h2 id="1-1-移动光标"><a href="#1-1-移动光标" class="headerlink" title="(1.1) 移动光标"></a>(1.1) 移动光标</h2><table><thead><tr><th>命令</th><th>对应结果</th></tr></thead><tbody><tr><td>← 或 h</td><td>光标向左移动一个字符</td></tr><tr><td>↓ 或 j</td><td>光标向下移动一个字符</td></tr><tr><td>↑ 或 k</td><td>光标向上移动一个字符</td></tr><tr><td>→ 或 l</td><td>光标向右移动一个字符</td></tr><tr><td>Ctrl + f</td><td>屏幕 向下 移动一页，相当于 Page Down按键</td></tr><tr><td>Ctrl + b</td><td>屏幕 向上 移动一页，相当于 Page Up 按键</td></tr><tr><td>Ctrl + d</td><td>屏幕 向下 移动半页 (常用)</td></tr><tr><td>Ctrl + u</td><td>屏幕 向上 移动半页 (常用)</td></tr><tr><td>+</td><td>光标移动到非空格符的下一行</td></tr><tr><td>-</td><td>光标移动到非空格符的上一行</td></tr><tr><td>n<space></space></td><td>那个 n 表示数字，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。 <br> 例如 20n 则光标会向后面移动 20 个字符距离。</td></tr><tr><td>0 或 功能键Home</td><td>这是数字 0 ：移动到这一行的最前面字符处 (常用)</td></tr><tr><td>$ 或 功能键End</td><td>移动到这一行的最后面字符处(常用)</td></tr><tr><td>H</td><td>光标移动到这个屏幕的最上方那一行的第一个字符</td></tr><tr><td>M</td><td>光标移动到这个屏幕的中央那一行的第一个字符</td></tr><tr><td>L</td><td>光标移动到这个屏幕的最下方那一行的第一个字符</td></tr><tr><td>G</td><td>移动到这个档案的最后一行(常用)</td></tr><tr><td>nG</td><td>n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)</td></tr><tr><td>gg</td><td>移动到这个档案的第一行，相当于 1G 啊！ (常用)</td></tr><tr><td>n<enter></enter></td><td>n 为数字。光标向下移动 n 行(常用)</td></tr></tbody></table><p><br></p><h2 id="1-2-搜索替换"><a href="#1-2-搜索替换" class="headerlink" title="(1.2) 搜索替换"></a>(1.2) 搜索替换</h2><table><thead><tr><th>命令</th><th>对应结果</th></tr></thead><tbody><tr><td>/word</td><td>向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)</td></tr><tr><td>?word</td><td>向光标之上寻找一个字符串名称为 word 的字符串。</td></tr><tr><td>n</td><td>这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td></tr><tr><td>N</td><td>这个 N 是英文按键。与 n 刚好相反，为反向进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示向上搜寻 vbird 。</td></tr><tr><td>使用 /word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！</td><td></td></tr><tr><td>:n1,n2s/word1/word2/g</td><td>n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！(常用) <br> 　　例如，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD ： :100,200s/vbird/VBIRD/g</td></tr><tr><td>:1,$s/word1/word2/g 或 :%s/word1/word2/g</td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)</td></tr><tr><td>:1,$s/word1/word2/gc 或 :%s/word1/word2/gc</td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td></tr></tbody></table><p><br></p><h2 id="1-3-复制、粘贴、删除"><a href="#1-3-复制、粘贴、删除" class="headerlink" title="(1.3) 复制、粘贴、删除"></a>(1.3) 复制、粘贴、删除</h2><table><thead><tr><th>命令</th><th>对应结果</th></tr></thead><tbody><tr><td>yy</td><td>复制游标所在的那一行(常用)</td></tr><tr><td>nyy</td><td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td>y1G</td><td>复制游标所在行到第一行的所有数据</td></tr><tr><td>yG</td><td>复制游标所在行到最后一行的所有数据</td></tr><tr><td>y0</td><td>复制光标所在的那个字符到该行行首的所有数据</td></tr><tr><td>y$</td><td>复制光标所在的那个字符到该行行尾的所有数据</td></tr><tr><td>p, P</td><td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)</td></tr><tr><td>J</td><td>将光标所在行与下一行的数据结合成同一行</td></tr><tr><td>x, X</td><td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)</td></tr><tr><td>nx</td><td>n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 10x。</td></tr><tr><td>dd</td><td>删除游标所在的那一整行(常用)</td></tr><tr><td>ndd</td><td>n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行 (常用)</td></tr><tr><td>d1G</td><td>删除光标所在到第一行的所有数据</td></tr><tr><td>dG</td><td>删除光标所在到最后一行的所有数据</td></tr><tr><td>d$</td><td>删除游标所在处，到该行的最后一个字符</td></tr><tr><td>d0</td><td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td></tr><tr><td>c</td><td>重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td></tr><tr><td>u</td><td>复原前一个动作。(常用)</td></tr><tr><td>[Ctrl]+r</td><td>重做上一个动作。(常用)</td></tr><tr><td>.</td><td>不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点.就好了！ (常用)</td></tr></tbody></table><p><br></p><h1 id="2-编辑模式"><a href="#2-编辑模式" class="headerlink" title="(2) 编辑模式"></a>(2) 编辑模式</h1><blockquote><p> 从一般模式进入编辑模式的方式。</p></blockquote><table><thead><tr><th>命令</th><th>对应结果</th></tr></thead><tbody><tr><td>i, I</td><td>进入输入模式(Insert mode)：  <br>　　i 为从目前光标所在处输入， I 为在目前所在行的第一个非空格符处开始输入。 (常用)</td></tr><tr><td>a, A</td><td>进入输入模式(Insert mode)：  <br>　　a 为从目前光标所在的下一个字符处开始输入， A 为从光标所在行的最后一个字符处开始输入。(常用)</td></tr><tr><td>o, O</td><td>进入输入模式(Insert mode)：  <br>　　o 为在目前光标所在的下一行处输入新的一行； O 为在目前光标所在处的上一行输入新的一行！(常用)</td></tr><tr><td>r, R</td><td>进入取代模式(Replace mode)： <br>　　r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td></tr><tr><td>[Esc]</td><td>退出编辑模式，回到一般模式中(常用)</td></tr></tbody></table><h1 id="3-命令模式"><a href="#3-命令模式" class="headerlink" title="(3) 命令模式"></a>(3) 命令模式</h1><table><thead><tr><th>命令</th><th>对应结果</th></tr></thead><tbody><tr><td>:w</td><td>将编辑的数据写入硬盘档案中(常用)</td></tr><tr><td>:w!</td><td>若文件属性为只读时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td></tr><tr><td>:q</td><td>离开 vi (常用)</td></tr><tr><td>:q!</td><td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td>注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有强制的意思</td><td></td></tr><tr><td>:wq</td><td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td></tr><tr><td>ZZ</td><td>这是大写的 Z 喔！若档案没有更动，则不储存离开，若档案已经被更动过，则储存后离开！</td></tr><tr><td>:w [filename]</td><td>将编辑的数据储存成另一个档案（类似另存新档）</td></tr><tr><td>:r [filename]</td><td>在编辑的数据中，读入另一个档案的数据。亦即将 filename 这个档案内容加到游标所在行后面</td></tr><tr><td>:n1,n2 w [filename]</td><td>将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr><tr><td>:! command</td><td>暂时离开 vi 到指令行模式下执行 command 的显示结果！<br> 例如 :! ls /home即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！</td></tr></tbody></table><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://www.runoob.com/linux/linux-vim.html" target="_blank" rel="noopener">Linux vi/vim</a><br>[2] <a href="https://www.jianshu.com/p/ba8adedf1e00" target="_blank" rel="noopener">vim 命令详解</a><br>[3] <a href="http://www.vim.org/" target="_blank" rel="noopener">vim.org</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; vim有三种模式，一般模式、编辑模式、命令模式。&lt;br&gt; 一般模式下只能 查看文件。  (输入 &lt;code&gt;ESC&lt;/code&gt; 可以进入一般模式。)&lt;br&gt; 编辑模式下可以对文件进行 新增、修改、删除。  (输入 &lt;code&gt;i&lt;/code&gt; 可以进入编辑模式。进入后左下角可以看到 &lt;code&gt;INSERT&lt;/code&gt; 标识)&lt;br&gt; 命令模式下可以对文件进行 保存、退出 等操作。  (输入 &lt;code&gt;ESC&lt;/code&gt; + &lt;code&gt;:&lt;/code&gt; 可以进入命令模式。)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt; 输入&lt;code&gt;ESC&lt;/code&gt;+&lt;code&gt;:&lt;/code&gt;进入命令模式后，输入&lt;code&gt;q!&lt;/code&gt;可以退出文件并且不保存修改。&lt;br&gt; 输入&lt;code&gt;ESC&lt;/code&gt;+&lt;code&gt;:&lt;/code&gt;进入命令模式后，输入&lt;code&gt;qw&lt;/code&gt;可以退出文件并且保存修改。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="tools" scheme="http://weikeqin.com/categories/tools/"/>
    
    
      <category term="tools" scheme="http://weikeqin.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>vs-code-notes</title>
    <link href="http://weikeqin.com/2020/04/18/vs-code-notes/"/>
    <id>http://weikeqin.com/2020/04/18/vs-code-notes/</id>
    <published>2020-04-18T06:49:06.000Z</published>
    <updated>2020-05-29T06:14:59.961Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-vs-code-设置语言"><a href="#1-vs-code-设置语言" class="headerlink" title="(1) vs-code 设置语言"></a>(1) vs-code 设置语言</h1><p>  打开命令面板 ，输入 <code>configure display language</code>，设置语言为 <code>zh-cn</code> </p><p>  备注：打开命令面板快捷键  mac <code>Shift + Command + P</code>    Windows <code>Ctrl + Shift + p</code></p><h1 id="2-vs-code-设置背景豆沙绿"><a href="#2-vs-code-设置背景豆沙绿" class="headerlink" title="(2) vs-code 设置背景豆沙绿"></a>(2) vs-code 设置背景豆沙绿</h1><p>  修改配置文件 <code>~/Library/Application Support/Code/User/settings.json</code><br>  把  <code>&quot;editor.background&quot;</code> 设置成 <code>&quot;#C7EDCC&quot;</code>，具体如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"workbench.colorTheme"</span>: <span class="string">"Default Light+"</span>,</span><br><span class="line">    <span class="attr">"workbench.colorCustomizations"</span>: &#123;</span><br><span class="line">        <span class="attr">"editor.background"</span>: <span class="string">"#C7EDCC"</span></span><br><span class="line">        //设置用户选中代码段的颜色 </span><br><span class="line">        //<span class="string">"editor.selectionBackground"</span>: <span class="string">"#2f00ff"</span>,</span><br><span class="line">        //搜索匹配的背景色</span><br><span class="line">        //"editor.findMatchBackground": "#ff0000",</span><br><span class="line">        //"editor.findMatchHighlightBackground": "#ff00ff",</span><br><span class="line">        //"editor.findRangeHighlightBackground": "#ff9900"</span><br><span class="line">    </span><br><span class="line">    &#125;,</span><br><span class="line">    "editor.fontSize": 16,</span><br><span class="line">    "window.openFoldersInNewWindow": "off",</span><br><span class="line">    "window.openWithoutArgumentsInNewWindow": "on",</span><br><span class="line">    "editor.largeFileOptimizations": false,</span><br><span class="line">    "editor.suggestSelection": "first",</span><br><span class="line">    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",</span><br><span class="line">    "java.configuration.checkProjectSettingsExclusions": false,</span><br><span class="line">    "extensions.autoUpdate": false,</span><br><span class="line">    "window.zoomLevel": 0,</span><br><span class="line">    "update.mode": "none"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://code.visualstudio.com/docs" target="_blank" rel="noopener">vscode-docs</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-vs-code-设置语言&quot;&gt;&lt;a href=&quot;#1-vs-code-设置语言&quot; class=&quot;headerlink&quot; title=&quot;(1) vs-code 设置语言&quot;&gt;&lt;/a&gt;(1) vs-code 设置语言&lt;/h1&gt;&lt;p&gt;  打开命令面板 ，输入 &lt;code&gt;configure display language&lt;/code&gt;，设置语言为 &lt;code&gt;zh-cn&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;  备注：打开命令面板快捷键  mac &lt;code&gt;Shift + Command + P&lt;/code&gt;    Windows &lt;code&gt;Ctrl + Shift + p&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;2-vs-code-设置背景豆沙绿&quot;&gt;&lt;a href=&quot;#2-vs-code-设置背景豆沙绿&quot; class=&quot;headerlink&quot; title=&quot;(2) vs-code 设置背景豆沙绿&quot;&gt;&lt;/a&gt;(2) vs-code 设置背景豆沙绿&lt;/h1&gt;&lt;p&gt;  修改配置文件 &lt;code&gt;~/Library/Application Support/Code/User/settings.json&lt;/code&gt;&lt;br&gt;  把  &lt;code&gt;&amp;quot;editor.background&amp;quot;&lt;/code&gt; 设置成 &lt;code&gt;&amp;quot;#C7EDCC&amp;quot;&lt;/code&gt;，具体如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;workbench.colorTheme&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Default Light+&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;workbench.colorCustomizations&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;editor.background&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;#C7EDCC&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //设置用户选中代码段的颜色 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&lt;span class=&quot;string&quot;&gt;&quot;editor.selectionBackground&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;#2f00ff&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //搜索匹配的背景色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&quot;editor.findMatchBackground&quot;: &quot;#ff0000&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&quot;editor.findMatchHighlightBackground&quot;: &quot;#ff00ff&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&quot;editor.findRangeHighlightBackground&quot;: &quot;#ff9900&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;editor.fontSize&quot;: 16,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;window.openFoldersInNewWindow&quot;: &quot;off&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;window.openWithoutArgumentsInNewWindow&quot;: &quot;on&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;editor.largeFileOptimizations&quot;: false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;editor.suggestSelection&quot;: &quot;first&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;vsintellicode.modify.editor.suggestSelection&quot;: &quot;automaticallyOverrodeDefaultValue&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;java.configuration.checkProjectSettingsExclusions&quot;: false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;extensions.autoUpdate&quot;: false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;window.zoomLevel&quot;: 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;update.mode&quot;: &quot;none&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="tools" scheme="http://weikeqin.com/categories/tools/"/>
    
    
      <category term="tools" scheme="http://weikeqin.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>cache-notes</title>
    <link href="http://weikeqin.com/2020/04/06/cache-notes/"/>
    <id>http://weikeqin.com/2020/04/06/cache-notes/</id>
    <published>2020-04-06T01:22:49.000Z</published>
    <updated>2020-04-06T01:24:14.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://blog.csdn.net/zeb_perfect/article/details/54135506" target="_blank" rel="noopener">缓存穿透，缓存击穿，缓存雪崩解决方案分析</a><br>[2] <a href="https://blog.csdn.net/xlgen157387/article/details/79530877" target="_blank" rel="noopener">缓存雪崩、缓存穿透、缓存预热、缓存更新、缓存降级等问题</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h1&gt;&lt;p&gt;[1] &lt;a href=&quot;https://blog.csdn.net/zeb
      
    
    </summary>
    
      <category term="cache" scheme="http://weikeqin.com/categories/cache/"/>
    
    
      <category term="cache" scheme="http://weikeqin.com/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>JVM性能调优监控工具 jps jstat jinfo jmap jhat jstack</title>
    <link href="http://weikeqin.com/2020/03/28/jvm-performance-tuning-monitoring-tool/"/>
    <id>http://weikeqin.com/2020/03/28/jvm-performance-tuning-monitoring-tool/</id>
    <published>2020-03-28T02:16:25.000Z</published>
    <updated>2020-03-30T15:37:10.124Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 最近测试环境总是莫名的出问题，然后部署服务的容器里除了服务打印的日志，没有其它信息，想看看是什么原因导致服务很卡，是不是有哪块代码占用内存高。<br> 代码执行缓慢、OutOfMemoryError，内存不足、内存泄露、线程死锁、锁争用（Lock Contention）、Java进程消耗CPU过高 都可以使用JDK的命令行工具排查。</p></blockquote><p><br></p><h1 id="1-JDK的命令行工具"><a href="#1-JDK的命令行工具" class="headerlink" title="(1) JDK的命令行工具"></a>(1) JDK的命令行工具</h1><blockquote><p> jps、jstat、jinfo、jmap、jhat、jstack、hprof<br>jps : 虚拟机进程状况工具<br>jstat : 虚拟机统计信息监视工具<br>jinfo : Java 配置信息工具<br>jmap : Java 内存映像工具<br>jhat : 虚拟机堆转储快照分析工具<br>jstack : Java 堆栈跟踪工具</p></blockquote><blockquote><p> jps将打印所有正在运行的 Java 进程。<br> jstat允许用户查看目标 Java 进程的类加载、即时编译以及垃圾回收相关的信息。它常用于检测垃圾回收问题以及内存泄漏问题。<br> jmap允许用户统计目标 Java 进程的堆中存放的 Java 对象，并将它们导出成二进制文件。<br> jinfo将打印目标 Java 进程的配置参数，并能够改动其中 manageabe 的参数。<br> jstack将打印目标 Java 进程中各个线程的栈轨迹、线程状态、锁状况等信息。它还将自动检测死锁。<br> jcmd则是一把瑞士军刀，可以用来实现前面除了jstat之外所有命令的功能。</p></blockquote><p>Java虚拟机的监控及诊断工具-GUI</p><blockquote><p>JConsole : Java 监视与管理控制台<br>VisualVM : 多合一故障处理工具<br>eclipse MAT<br>JMC<br>JITWatch</p></blockquote><p><br></p><h1 id="2-虚拟机进程状况工具-jps-JVM-Process-Status-Tool"><a href="#2-虚拟机进程状况工具-jps-JVM-Process-Status-Tool" class="headerlink" title="(2) 虚拟机进程状况工具 jps (JVM Process Status Tool)"></a>(2) 虚拟机进程状况工具 jps (JVM Process Status Tool)</h1><blockquote><p> jps主要用来输出JVM中运行的进程状态信息。<br> jps命令使用Java启动器来查找传递给main方法的类名和参数。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -help</span><br><span class="line">usage: jps [-help]</span><br><span class="line">       jps [-q] [-mlvV] [&lt;hostid&gt;]</span><br><span class="line"></span><br><span class="line">Definitions:</span><br><span class="line">    &lt;hostid&gt;:      &lt;hostname&gt;[:&lt;port&gt;]</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h2 id="2-1-jps命令"><a href="#2-1-jps命令" class="headerlink" title="(2.1) jps命令"></a>(2.1) jps命令</h2><blockquote><p>jps命令用于输出JVM中运行的进程状态信息。可以获取到进程的pid、全限定名、传入main方法的参数、传入JVM的参数 等。</p></blockquote><blockquote><p>语法格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jps [ options ] [ hostid ]</span><br></pre></td></tr></table></figure></p></blockquote><p>  如果不指定hostid就默认为当前主机或服务器。</p><p>  详细信息见 <code>man jps</code></p><h3 id="2-1-1-jps-不加参数"><a href="#2-1-1-jps-不加参数" class="headerlink" title="(2.1.1) jps 不加参数"></a>(2.1.1) jps 不加参数</h3><blockquote><p> 在本地主机上搜索检测到的JVM。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps</span><br><span class="line">14916 Jps</span><br><span class="line">13050 Elasticsearch</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2-1-2-jps-q"><a href="#2-1-2-jps-q" class="headerlink" title="(2.1.2) jps -q"></a>(2.1.2) jps -q</h3><blockquote><p>不输出类名、Jar名和传入main方法的参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -q</span><br><span class="line">15059</span><br><span class="line">13050</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="2-1-3-jps-m"><a href="#2-1-3-jps-m" class="headerlink" title="(2.1.3) jps -m"></a>(2.1.3) jps -m</h3><blockquote><p>显示传递给main方法的参数。对于嵌入式JVM，输出可能为null。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -m</span><br><span class="line">15092 Jps -m</span><br><span class="line">13050 Elasticsearch -d</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="2-1-4-jps-l"><a href="#2-1-4-jps-l" class="headerlink" title="(2.1.4) jps -l"></a>(2.1.4) jps -l</h3><blockquote><p>输出main类或Jar的全限定名</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -l</span><br><span class="line">15139 sun.tools.jps.Jps</span><br><span class="line">13050 org.elasticsearch.bootstrap.Elasticsearch</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="2-1-5-jps-v"><a href="#2-1-5-jps-v" class="headerlink" title="(2.1.5) jps -v"></a>(2.1.5) jps -v</h3><blockquote><p>显示传递给JVM的参数。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -v</span><br><span class="line">15157 Jps -Denv.class.path=.:/home/wkq/software/jdk1.8.0_172/lib/dt.jar:/home/wkq/software/jdk1.8.0_172/lib/tools.jar -Dapplication.home=/home/wkq/software/jdk1.8.0_172 -Xms8m</span><br><span class="line">13050 Elasticsearch -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch-5035355569386013893 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/home/wkq/software/elasticsearch-6.6.2 -Des.path.conf=/home/wkq/software/elasticsearch-6.6.2/config -Des.distribution.flavor=default -Des.distribution.type=tar</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="2-1-6-jps-V"><a href="#2-1-6-jps-V" class="headerlink" title="(2.1.6) jps -V"></a>(2.1.6) jps -V</h3><blockquote><p>禁止输出类名，JAR全限定名和传递给main方法的参数的输出，从而产生仅本地JVM标识符的列表。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -V</span><br><span class="line">15204 Jps</span><br><span class="line">13050 Elasticsearch</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h2 id="2-2-常用jps命令"><a href="#2-2-常用jps命令" class="headerlink" title="(2.2) 常用jps命令"></a>(2.2) 常用jps命令</h2><h3 id="2-2-1-jps-lm"><a href="#2-2-1-jps-lm" class="headerlink" title="(2.2.1) jps -lm"></a>(2.2.1) jps -lm</h3><blockquote><p>显示 pid、全限定名、传递给main方法的参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -lm</span><br><span class="line">17539 sun.tools.jps.Jps -lm</span><br><span class="line">13050 org.elasticsearch.bootstrap.Elasticsearch -d</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="2-2-2-jps-lvm"><a href="#2-2-2-jps-lvm" class="headerlink" title="(2.2.2) jps -lvm"></a>(2.2.2) jps -lvm</h3><blockquote><p>显示 pid、全限定名、传递给main方法的参数、传递给JVM的参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -lvm</span><br><span class="line">13050 org.elasticsearch.bootstrap.Elasticsearch -d -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch-5035355569386013893 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/home/wkq/software/elasticsearch-6.6.2 -Des.path.conf=/home/wkq/software/elasticsearch-6.6.2/config -Des.distribution.flavor=default -Des.distribution.type=tar</span><br><span class="line">17567 sun.tools.jps.Jps -lvm -Denv.class.path=.:/home/wkq/software/jdk1.8.0_172/lib/dt.jar:/home/wkq/software/jdk1.8.0_172/lib/tools.jar -Dapplication.home=/home/wkq/software/jdk1.8.0_172 -Xms8m</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p><br></p><h1 id="3-虚拟机统计信息监视工具-jstat-JVM-Statics-Monitoring-Tool"><a href="#3-虚拟机统计信息监视工具-jstat-JVM-Statics-Monitoring-Tool" class="headerlink" title="(3) 虚拟机统计信息监视工具 jstat (JVM Statics Monitoring Tool)"></a>(3) 虚拟机统计信息监视工具 jstat (JVM Statics Monitoring Tool)</h1><blockquote><p> jstat是用于监视虚拟机各种运行状态信息的命令行工具。</p></blockquote><h2 id="3-1-jstat命令"><a href="#3-1-jstat命令" class="headerlink" title="(3.1) jstat命令"></a>(3.1) jstat命令</h2><blockquote><p> 语法格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat [ generalOption | outputOptions vmid [ interval[s|ms] [ count ] ]</span><br></pre></td></tr></table></figure></p></blockquote><p>  详细信息见 <code>man jstat</code></p><h3 id="3-1-1-jstat命令"><a href="#3-1-1-jstat命令" class="headerlink" title="(3.1.1) jstat命令"></a>(3.1.1) jstat命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -help</span><br><span class="line">Usage: jstat -help|-options</span><br><span class="line">       jstat -&lt;option&gt; [-t] [-h&lt;lines&gt;] &lt;vmid&gt; [&lt;interval&gt; [&lt;count&gt;]]</span><br><span class="line"></span><br><span class="line">Definitions:</span><br><span class="line">  &lt;option&gt;      An option reported by the -options option</span><br><span class="line">  &lt;vmid&gt;        Virtual Machine Identifier. A vmid takes the following form:</span><br><span class="line">                     &lt;lvmid&gt;[@&lt;hostname&gt;[:&lt;port&gt;]]</span><br><span class="line">                Where &lt;lvmid&gt; is the local vm identifier for the target</span><br><span class="line">                Java virtual machine, typically a process id; &lt;hostname&gt; is</span><br><span class="line">                the name of the host running the target Java virtual machine;</span><br><span class="line">                and &lt;port&gt; is the port number for the rmiregistry on the</span><br><span class="line">                target host. See the jvmstat documentation for a more complete</span><br><span class="line">                description of the Virtual Machine Identifier.</span><br><span class="line">  &lt;lines&gt;       Number of samples between header lines.</span><br><span class="line">  &lt;interval&gt;    Sampling interval. The following forms are allowed:</span><br><span class="line">                    &lt;n&gt;[&quot;ms&quot;|&quot;s&quot;]</span><br><span class="line">                Where &lt;n&gt; is an integer and the suffix specifies the units as</span><br><span class="line">                milliseconds(&quot;ms&quot;) or seconds(&quot;s&quot;). The default units are &quot;ms&quot;.</span><br><span class="line">  &lt;count&gt;       Number of samples to take before terminating.</span><br><span class="line">  -J&lt;flag&gt;      Pass &lt;flag&gt; directly to the runtime system.</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -options</span><br><span class="line">-class</span><br><span class="line">-compiler</span><br><span class="line">-gc</span><br><span class="line">-gccapacity</span><br><span class="line">-gccause</span><br><span class="line">-gcmetacapacity</span><br><span class="line">-gcnew</span><br><span class="line">-gcnewcapacity</span><br><span class="line">-gcold</span><br><span class="line">-gcoldcapacity</span><br><span class="line">-gcutil</span><br><span class="line">-printcompilation</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p><br></p><h3 id="3-1-1-jstat-class-13050"><a href="#3-1-1-jstat-class-13050" class="headerlink" title="(3.1.1) jstat -class 13050"></a>(3.1.1) jstat -class 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -class 13050</span><br><span class="line">Loaded  Bytes  Unloaded  Bytes     Time</span><br><span class="line"> 15177 27005.8       41    49.7      24.44</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-2-jstat-compiler-13050"><a href="#3-1-2-jstat-compiler-13050" class="headerlink" title="(3.1.2) jstat -compiler 13050"></a>(3.1.2) jstat -compiler 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$  jstat -compiler 13050</span><br><span class="line">Compiled Failed Invalid   Time   FailedType FailedMethod</span><br><span class="line">    7469      0       0    43.18          0</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-3-jstat-gc-13050"><a href="#3-1-3-jstat-gc-13050" class="headerlink" title="(3.1.3) jstat -gc 13050"></a>(3.1.3) jstat -gc 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gc 13050</span><br><span class="line"> S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">8512.0 8512.0  0.0    24.5  68160.0   6380.0   963392.0   61694.4   77732.0 71385.7 11984.0 9862.8     69    2.112   6      0.286    2.397</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th><th>原文</th></tr></thead><tbody><tr><td>S0C</td><td>年轻代中第一个survivor 的容量  (kB)</td><td>Current survivor space 0 capacity (kB).</td></tr><tr><td>S1C</td><td>年轻代中第二个survivor 的容量  (kB)</td><td>Current survivor space 1 capacity (kB).</td></tr><tr><td>S0U</td><td>年轻代中第一个survivor 已使用空间   (kB)</td><td>Survivor space 0 utilization (kB).</td></tr><tr><td>S1U</td><td>年轻代中第二个survivor已使用空间   (kB)</td><td>Survivor space 1 utilization (kB).</td></tr><tr><td>EC</td><td>年轻代中 Eden space 的容量  (kB)</td><td>Current eden space capacity (kB).</td></tr><tr><td>EU</td><td>年轻代中Eden space 目前已使用空间  (kB)</td><td>Eden space utilization (kB).</td></tr><tr><td>OC</td><td>Old space的容量  (kB)</td><td>Current old space capacity (kB).</td></tr><tr><td>OU</td><td>Old space 已使用空间  (kB)</td><td>Old space utilization (kB).</td></tr><tr><td>MC</td><td>Metaspace 的容量  (kB)</td><td>Metaspace capacity (kB).</td></tr><tr><td>MU</td><td>Metaspace 已使用空间  (kB)</td><td>Metacspace utilization (kB).</td></tr><tr><td>CCSC</td><td>Compressed class spcage 容量 (kB)</td><td>Compressed class space capacity (kB).</td></tr><tr><td>CCSU</td><td>Compressed class spcage 已使用空间 (kB)</td><td>Compressed class space used (kB).</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时年轻代中gc次数</td><td>Number of young generation garbage collection events.</td></tr><tr><td>YGCT</td><td>从应用程序启动到采样时年轻代中gc所用时间 (s)</td><td>Young generation garbage collection time.</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时old代 (全gc) gc次数</td><td>Number of full GC events.</td></tr><tr><td>FGCT</td><td>从应用程序启动到采样时old代 (全gc) gc所用时间 (s)</td><td>Full garbage collection time.</td></tr><tr><td>GCT</td><td>从应用程序启动到采样时gc用的总时间 (s)</td><td>Total garbage collection time.</td></tr></tbody></table><h3 id="3-1-4-jstat-gccapacity-13050"><a href="#3-1-4-jstat-gccapacity-13050" class="headerlink" title="(3.1.4) jstat -gccapacity 13050"></a>(3.1.4) jstat -gccapacity 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gccapacity 13050</span><br><span class="line"> NGCMN    NGCMX     NGC     S0C   S1C       EC      OGCMN      OGCMX       OGC         OC       MCMN     MCMX      MC     CCSMN    CCSMX     CCSC    YGC    FGC</span><br><span class="line"> 85184.0  85184.0  85184.0 8512.0 8512.0  68160.0   963392.0   963392.0   963392.0   963392.0      0.0 1116160.0  77732.0      0.0 1048576.0  11984.0     69     6</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-5-jstat-gccause-13050"><a href="#3-1-5-jstat-gccause-13050" class="headerlink" title="(3.1.5) jstat -gccause 13050"></a>(3.1.5) jstat -gccause 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gccause 13050</span><br><span class="line">  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT    LGCC                 GCC</span><br><span class="line">  0.00   0.29  11.90   6.40  91.84  82.30     69    2.112     6    0.286    2.397 Allocation Failure   No GC</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-6-jstat-gcmetacapacity-13050"><a href="#3-1-6-jstat-gcmetacapacity-13050" class="headerlink" title="(3.1.6) jstat -gcmetacapacity 13050"></a>(3.1.6) jstat -gcmetacapacity 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcmetacapacity 13050</span><br><span class="line">   MCMN       MCMX        MC       CCSMN      CCSMX       CCSC     YGC   FGC    FGCT     GCT</span><br><span class="line">       0.0  1116160.0    77732.0        0.0  1048576.0    11984.0    69     6    0.286    2.397</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-7-jstat-gcnew-13050"><a href="#3-1-7-jstat-gcnew-13050" class="headerlink" title="(3.1.7) jstat -gcnew 13050"></a>(3.1.7) jstat -gcnew 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcnew 13050</span><br><span class="line"> S0C    S1C    S0U    S1U   TT MTT  DSS      EC       EU     YGC     YGCT</span><br><span class="line">8512.0 8512.0    0.0   24.5  6   6 4256.0  68160.0  13229.3     69    2.112</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-8-jstat-gcnewcapacity-13050"><a href="#3-1-8-jstat-gcnewcapacity-13050" class="headerlink" title="(3.1.8) jstat -gcnewcapacity 13050"></a>(3.1.8) jstat -gcnewcapacity 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcnewcapacity 13050</span><br><span class="line">  NGCMN      NGCMX       NGC      S0CMX     S0C     S1CMX     S1C       ECMX        EC      YGC   FGC</span><br><span class="line">   85184.0    85184.0    85184.0   8512.0   8512.0   8512.0   8512.0    68160.0    68160.0    69     6</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-9-jstat-gcold-13050"><a href="#3-1-9-jstat-gcold-13050" class="headerlink" title="(3.1.9) jstat -gcold 13050"></a>(3.1.9) jstat -gcold 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcold 13050</span><br><span class="line">   MC       MU      CCSC     CCSU       OC          OU       YGC    FGC    FGCT     GCT</span><br><span class="line"> 77732.0  71385.7  11984.0   9862.8    963392.0     61694.4     69     6    0.286    2.397</span><br></pre></td></tr></table></figure><h3 id="3-1-10-jstat-gcoldcapacity-13050"><a href="#3-1-10-jstat-gcoldcapacity-13050" class="headerlink" title="(3.1.10) jstat -gcoldcapacity 13050"></a>(3.1.10) jstat -gcoldcapacity 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcoldcapacity 13050</span><br><span class="line">   OGCMN       OGCMX        OGC         OC       YGC   FGC    FGCT     GCT</span><br><span class="line">   963392.0    963392.0    963392.0    963392.0    69     6    0.286    2.397</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-11-jstat-gcutil-13050"><a href="#3-1-11-jstat-gcutil-13050" class="headerlink" title="(3.1.11) jstat -gcutil 13050"></a>(3.1.11) jstat -gcutil 13050</h3><blockquote><p>垃圾回收状态摘要</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcutil 13050</span><br><span class="line">  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">  0.00   0.29  24.37   6.40  91.84  82.30     69    2.112     6    0.286    2.397</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th><th>原文</th></tr></thead><tbody><tr><td>S0</td><td>年轻代中第一个survivor 已使用的占当前容量百分比</td><td>Survivor space 0 utilization as a percentage of the space’s current capacity.</td></tr><tr><td>S1</td><td>年轻代中第二个survivor 已使用的占当前容量百分比</td><td>Survivor space 1 utilization as a percentage of the space’s current capacity.</td></tr><tr><td>E</td><td>Eden space 中Eden 已使用的占当前容量百分比</td><td>Eden space utilization as a percentage of the space’s current capacity.</td></tr><tr><td>O</td><td>Old space  已使用的占当前容量百分比</td><td>Old space utilization as a percentage of the space’s current capacity.</td></tr><tr><td>M</td><td>Metaspace 已使用的占当前容量百分比</td><td>Metaspace utilization as a percentage of the space’s current capacity.</td></tr><tr><td>CCS</td><td>Compressed class  空间利用率</td><td>Compressed class space utilization as a percentage.</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时 young generation gc次数</td><td>Number of young generation GC events.</td></tr><tr><td>YGCT</td><td>从应用程序启动到采样时Young gc所用时间(s)</td><td>Young generation garbage collection time.</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时Full gc次数</td><td>Number of full GC events.</td></tr><tr><td>FGCT</td><td>从应用程序启动到采样时Full gc所用时间(s)</td><td>Full garbage collection time.</td></tr><tr><td>GCT</td><td>从应用程序启动到采样时gc用的总时间(s)</td><td>Total garbage collection time.</td></tr></tbody></table><h3 id="3-1-12-jstat-printcompilation-13050"><a href="#3-1-12-jstat-printcompilation-13050" class="headerlink" title="(3.1.12) jstat -printcompilation 13050"></a>(3.1.12) jstat -printcompilation 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -printcompilation 13050</span><br><span class="line">Compiled  Size  Type Method</span><br><span class="line">    7469     63    1 org/apache/logging/log4j/spi/AbstractLogger trace</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p><br></p><h2 id="3-2-常用jstat命令"><a href="#3-2-常用jstat命令" class="headerlink" title="(3.2) 常用jstat命令"></a>(3.2) 常用jstat命令</h2><h3 id="3-2-1-jstat-gc-h5-t-13050-1000-10"><a href="#3-2-1-jstat-gc-h5-t-13050-1000-10" class="headerlink" title="(3.2.1) jstat -gc -h5 -t 13050  1000 10"></a>(3.2.1) jstat -gc -h5 -t 13050  1000 10</h3><blockquote><p>分析进程id为13050的gc情况，每隔1000ms打印一次记录，打印10次停止，每5行后打印指标头部<br>-gc 查看gc情况<br>-h5 每5行后打印指标头部<br>-t 进程启动时间<br>13050 进程id 也就是linux的pid<br>1000 每隔1000ms打印一次<br>10 共打印10行</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gc -h5 -t 13050  1000 10</span><br><span class="line">Timestamp        S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">       217492.5 8512.0 8512.0  0.0    77.3  68160.0  13154.8   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217493.7 8512.0 8512.0  0.0    77.3  68160.0  13154.8   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217494.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217495.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217496.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">Timestamp        S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">       217497.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217498.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217499.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217500.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217501.7 8512.0 8512.0  0.0    77.3  68160.0  14068.0   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><blockquote><p> 我们可以比较 Java 进程的启动时间以及总 GC 时间（GCT 列），或者两次测量的间隔时间以及总 GC 时间的增量，来得出 GC 时间占运行时间的比例。如果该比例超过 20%，则说明目前堆的压力较大；如果该比例超过 90%，则说明堆里几乎没有可用空间，随时都可能抛出 OOM 异常。</p></blockquote><h3 id="3-2-2-jstat-gcutil-h5-t-13050-1000-10"><a href="#3-2-2-jstat-gcutil-h5-t-13050-1000-10" class="headerlink" title="(3.2.2) jstat -gcutil -h5 -t 13050  1000 10"></a>(3.2.2) jstat -gcutil -h5 -t 13050  1000 10</h3><blockquote><p>分析进程id为13050的gcutil情况，每隔1000ms打印一次记录，打印15次停止，每5行后打印指标头部<br>-gcutil 查看gcutil情况<br>-h5 每5行后打印指标头部<br>-t 进程启动时间<br>13050 进程id 也就是linux的pid<br>1000 每隔1000ms打印一次<br>10 共打印10行</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcutil -h5 -t 13050  1000 10</span><br><span class="line">Timestamp         S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">       217569.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217570.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217571.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217572.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217573.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">Timestamp         S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">       217574.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217575.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217576.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217577.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217578.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="4-Java配置信息工具-jinfo-Java-Configuration-Info"><a href="#4-Java配置信息工具-jinfo-Java-Configuration-Info" class="headerlink" title="(4) Java配置信息工具 jinfo (Java Configuration Info )"></a>(4) Java配置信息工具 jinfo (Java Configuration Info )</h1><blockquote><p>jinfo是实时查看和调整虚拟机各项参数的工具</p></blockquote><h2 id="4-1-jinfo命令"><a href="#4-1-jinfo命令" class="headerlink" title="(4.1) jinfo命令"></a>(4.1) jinfo命令</h2><p>语法格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jinfo [ option ] pid</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -help</span><br><span class="line">Usage:</span><br><span class="line">    jinfo [option] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jinfo [option] &lt;executable &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jinfo [option] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to remote debug server)</span><br><span class="line"></span><br><span class="line">where &lt;option&gt; is one of:</span><br><span class="line">    -flag &lt;name&gt;         to print the value of the named VM flag</span><br><span class="line">    -flag [+|-]&lt;name&gt;    to enable or disable the named VM flag</span><br><span class="line">    -flag &lt;name&gt;=&lt;value&gt; to set the named VM flag to the given value</span><br><span class="line">    -flags               to print VM flags</span><br><span class="line">    -sysprops            to print Java system properties</span><br><span class="line">    &lt;no option&gt;          to print both of the above</span><br><span class="line">    -h | -help           to print this help message</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -option</span><br><span class="line">Usage:</span><br><span class="line">    jinfo [option] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jinfo [option] &lt;executable &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jinfo [option] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to remote debug server)</span><br><span class="line"></span><br><span class="line">where &lt;option&gt; is one of:</span><br><span class="line">    -flag &lt;name&gt;         to print the value of the named VM flag</span><br><span class="line">    -flag [+|-]&lt;name&gt;    to enable or disable the named VM flag</span><br><span class="line">    -flag &lt;name&gt;=&lt;value&gt; to set the named VM flag to the given value</span><br><span class="line">    -flags               to print VM flags</span><br><span class="line">    -sysprops            to print Java system properties</span><br><span class="line">    &lt;no option&gt;          to print both of the above</span><br><span class="line">    -h | -help           to print this help message</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p>  如果遇到 <code>Error attaching to process: sun.jvm.hotspot.debugger.DebuggerException: Can&#39;t attach to the process: ptrace(PTRACE_ATTACH, ..) failed for : Operation not permitted</code>，执行 <code>echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope</code>命令即可</p><h3 id="4-1-1-jinfo-pid"><a href="#4-1-1-jinfo-pid" class="headerlink" title="(4.1.1) jinfo pid"></a>(4.1.1) jinfo pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line">Java System Properties:</span><br><span class="line"></span><br><span class="line">jna.platform.library.path = /usr/lib64:/lib64:/usr/lib:/lib:/usr/lib64/dyninst:/usr/lib64/mysql</span><br><span class="line">java.runtime.name = Java(TM) SE Runtime Environment</span><br><span class="line">sun.boot.library.path = /home/wkq/software/jdk1.8.0_172/jre/lib/amd64</span><br><span class="line">java.vm.version = 25.172-b11</span><br><span class="line">es.path.home = /home/wkq/software/elasticsearch-6.6.2</span><br><span class="line">log4j.shutdownHookEnabled = false</span><br><span class="line">java.vendor.url = http://java.oracle.com/</span><br><span class="line">java.vm.vendor = Oracle Corporation</span><br><span class="line">path.separator = :</span><br><span class="line">file.encoding.pkg = sun.io</span><br><span class="line">java.vm.name = Java HotSpot(TM) 64-Bit Server VM</span><br><span class="line">jna.loaded = true</span><br><span class="line">sun.os.patch.level = unknown</span><br><span class="line">user.country = US</span><br><span class="line">sun.java.launcher = SUN_STANDARD</span><br><span class="line">es.networkaddress.cache.negative.ttl = 10</span><br><span class="line">jna.nosys = true</span><br><span class="line">java.vm.specification.name = Java Virtual Machine Specification</span><br><span class="line">user.dir = /home/wkq/software/elasticsearch-6.6.2</span><br><span class="line">java.runtime.version = 1.8.0_172-b11</span><br><span class="line">java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment</span><br><span class="line">java.endorsed.dirs = /home/wkq/software/jdk1.8.0_172/jre/lib/endorsed</span><br><span class="line">os.arch = amd64</span><br><span class="line">java.io.tmpdir = /tmp/elasticsearch-5035355569386013893</span><br><span class="line">line.separator =</span><br><span class="line"></span><br><span class="line">es.networkaddress.cache.ttl = 60</span><br><span class="line">es.logs.node_name = elasticsearch_001_data</span><br><span class="line">java.vm.specification.vendor = Oracle Corporation</span><br><span class="line">os.name = Linux</span><br><span class="line">io.netty.noKeySetOptimization = true</span><br><span class="line">sun.jnu.encoding = ANSI_X3.4-1968</span><br><span class="line">jnidispatch.path = /tmp/elasticsearch-5035355569386013893/jna-117789/jna8829728915470247279.tmp</span><br><span class="line">java.library.path = /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib</span><br><span class="line">sun.nio.ch.bugLevel =</span><br><span class="line">es.logs.cluster_name = elasticsearch_test</span><br><span class="line">java.specification.name = Java Platform API Specification</span><br><span class="line">java.class.version = 52.0</span><br><span class="line">sun.management.compiler = HotSpot 64-Bit Tiered Compilers</span><br><span class="line">os.version = 3.10.0-957.21.3.el7.x86_64</span><br><span class="line">user.home = /home/wkq</span><br><span class="line">user.timezone = Asia/Shanghai</span><br><span class="line">java.awt.printerjob = sun.print.PSPrinterJob</span><br><span class="line">file.encoding = UTF-8</span><br><span class="line">java.specification.version = 1.8</span><br><span class="line">es.distribution.type = tar</span><br><span class="line">io.netty.recycler.maxCapacityPerThread = 0</span><br><span class="line">user.name = wkq</span><br><span class="line">es.logs.base_path = /home/wkq/software/elasticsearch-6.6.2/logs</span><br><span class="line">java.class.path =  </span><br><span class="line">es.path.conf = /home/wkq/software/elasticsearch-6.6.2/config</span><br><span class="line">java.vm.specification.version = 1.8</span><br><span class="line">java.home = /home/wkq/software/jdk1.8.0_172/jre</span><br><span class="line">sun.java.command = org.elasticsearch.bootstrap.Elasticsearch -d</span><br><span class="line">sun.arch.data.model = 64</span><br><span class="line">io.netty.noUnsafe = true</span><br><span class="line">user.language = en</span><br><span class="line">java.specification.vendor = Oracle Corporation</span><br><span class="line">awt.toolkit = sun.awt.X11.XToolkit</span><br><span class="line">java.vm.info = mixed mode</span><br><span class="line">java.version = 1.8.0_172</span><br><span class="line">java.ext.dirs = /home/wkq/software/jdk1.8.0_172/jre/lib/ext:/usr/java/packages/lib/ext</span><br><span class="line">sun.boot.class.path =  </span><br><span class="line">java.awt.headless = true</span><br><span class="line">java.vendor = Oracle Corporation</span><br><span class="line">file.separator = /</span><br><span class="line">java.vendor.url.bug = http://bugreport.sun.com/bugreport/</span><br><span class="line">es.distribution.flavor = default</span><br><span class="line">sun.io.unicode.encoding = UnicodeLittle</span><br><span class="line">sun.cpu.endian = little</span><br><span class="line">log4j2.disable.jmx = true</span><br><span class="line">sun.cpu.isalist =</span><br><span class="line"></span><br><span class="line">VM Flags:</span><br><span class="line">Non-default VM flags: -XX:+AlwaysPreTouch -XX:CICompilerCount=2 -XX:CMSInitiatingOccupancyFraction=75 -XX:ErrorFile=null -XX:GCLogFileSize=67108864 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=null -XX:InitialHeapSize=1073741824 -XX:MaxHeapSize=1073741824 -XX:MaxNewSize=87228416 -XX:MaxTenuringThreshold=6 -XX:MinHeapDeltaBytes=196608 -XX:NewSize=87228416 -XX:NumberOfGCLogFiles=32 -XX:OldPLABSize=16 -XX:OldSize=986513408 -XX:-OmitStackTraceInFastThrow -XX:+PrintGC -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:ThreadStackSize=1024 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseGCLogFileRotation -XX:+UseParNewGC</span><br><span class="line">Command line:  -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch-5035355569386013893 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/home/wkq/software/elasticsearch-6.6.2 -Des.path.conf=/home/wkq/software/elasticsearch-6.6.2/config -Des.distribution.flavor=default -Des.distribution.type=tar</span><br><span class="line"></span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-2-jinfo-flag-MaxMetaspaceSize-pid"><a href="#4-1-2-jinfo-flag-MaxMetaspaceSize-pid" class="headerlink" title="(4.1.2) jinfo -flag MaxMetaspaceSize pid"></a>(4.1.2) jinfo -flag MaxMetaspaceSize pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag MaxMetaspaceSize 13050</span><br><span class="line">-XX:MaxMetaspaceSize=18446744073709547520</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-3-jinfo-flag-ThreadStackSize-pid"><a href="#4-1-3-jinfo-flag-ThreadStackSize-pid" class="headerlink" title="(4.1.3) jinfo -flag ThreadStackSize pid"></a>(4.1.3) jinfo -flag ThreadStackSize pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag ThreadStackSize 13050</span><br><span class="line">-XX:ThreadStackSize=1024</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-4-jinfo-flag-MaxNewSize-pid"><a href="#4-1-4-jinfo-flag-MaxNewSize-pid" class="headerlink" title="(4.1.4) jinfo -flag MaxNewSize pid"></a>(4.1.4) jinfo -flag MaxNewSize pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag MaxNewSize 13050</span><br><span class="line">-XX:MaxNewSize=87228416</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-5-jinfo-flag-CMSInitiatingOccupancyFraction-pid"><a href="#4-1-5-jinfo-flag-CMSInitiatingOccupancyFraction-pid" class="headerlink" title="(4.1.5) jinfo -flag CMSInitiatingOccupancyFraction pid"></a>(4.1.5) jinfo -flag CMSInitiatingOccupancyFraction pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag CMSInitiatingOccupancyFraction 13050</span><br><span class="line">-XX:CMSInitiatingOccupancyFraction=75</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-6-查看所有JVM参数-java-XX-PrintFlagsInitial"><a href="#4-1-6-查看所有JVM参数-java-XX-PrintFlagsInitial" class="headerlink" title="(4.1.6) 查看所有JVM参数 java -XX:+PrintFlagsInitial"></a>(4.1.6) 查看所有JVM参数 java -XX:+PrintFlagsInitial</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ java -XX:+PrintFlagsInitial</span><br><span class="line">[Global flags]</span><br><span class="line">    uintx AdaptiveSizeDecrementScaleFactor          = 4                                   &#123;product&#125;</span><br><span class="line">    uintx AdaptiveSizeMajorGCDecayTimeScale         = 10                                  &#123;product&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">     intx WorkAroundNPTLTimedWaitHang               = 1                                   &#123;product&#125;</span><br><span class="line">    uintx YoungGenerationSizeIncrement              = 20                                  &#123;product&#125;</span><br><span class="line">    uintx YoungGenerationSizeSupplement             = 80                                  &#123;product&#125;</span><br><span class="line">    uintx YoungGenerationSizeSupplementDecay        = 8                                   &#123;product&#125;</span><br><span class="line">    uintx YoungPLABSize                             = 4096                                &#123;product&#125;</span><br><span class="line">     bool ZeroTLAB                                  = false                               &#123;product&#125;</span><br><span class="line">     intx hashCode                                  = 5                                   &#123;product&#125;</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-7-查看所有支持动态修改的JVM参数-java-XX-PrintFlagsInitial-grep-manageable"><a href="#4-1-7-查看所有支持动态修改的JVM参数-java-XX-PrintFlagsInitial-grep-manageable" class="headerlink" title="(4.1.7) 查看所有支持动态修改的JVM参数 java -XX:+PrintFlagsInitial | grep manageable"></a>(4.1.7) 查看所有支持动态修改的JVM参数 java -XX:+PrintFlagsInitial | grep manageable</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ java -XX:+PrintFlagsInitial | grep manageable</span><br><span class="line">     intx CMSAbortablePrecleanWaitMillis            = 100                                 &#123;manageable&#125;</span><br><span class="line">     intx CMSTriggerInterval                        = -1                                  &#123;manageable&#125;</span><br><span class="line">     intx CMSWaitDuration                           = 2000                                &#123;manageable&#125;</span><br><span class="line">     bool HeapDumpAfterFullGC                       = false                               &#123;manageable&#125;</span><br><span class="line">     bool HeapDumpBeforeFullGC                      = false                               &#123;manageable&#125;</span><br><span class="line">     bool HeapDumpOnOutOfMemoryError                = false                               &#123;manageable&#125;</span><br><span class="line">    ccstr HeapDumpPath                              =                                     &#123;manageable&#125;</span><br><span class="line">    uintx MaxHeapFreeRatio                          = 70                                  &#123;manageable&#125;</span><br><span class="line">    uintx MinHeapFreeRatio                          = 40                                  &#123;manageable&#125;</span><br><span class="line">     bool PrintClassHistogram                       = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintClassHistogramAfterFullGC            = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintClassHistogramBeforeFullGC           = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintConcurrentLocks                      = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintGC                                   = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintGCDateStamps                         = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintGCDetails                            = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintGCID                                 = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintGCTimeStamps                         = false                               &#123;manageable&#125;</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-7-调整JVM参数-布尔类型"><a href="#4-1-7-调整JVM参数-布尔类型" class="headerlink" title="(4.1.7) 调整JVM参数-布尔类型"></a>(4.1.7) 调整JVM参数-布尔类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jinfo -flag [+|-]&lt;name&gt; PID</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag +PrintGC 13050</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag +PrintGCDetails 13050</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><blockquote><p>如果没报错则代表生效，加完以后可以通过 <code>jinfo -flags 13050</code> 验证</p></blockquote><h3 id="4-1-8-调整JVM参数-数字-字符串类型"><a href="#4-1-8-调整JVM参数-数字-字符串类型" class="headerlink" title="(4.1.8) 调整JVM参数-数字/字符串类型"></a>(4.1.8) 调整JVM参数-数字/字符串类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jinfo -flag &lt;name&gt;=&lt;value&gt; PID</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag MaxHeapFreeRatio=65 13050</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><blockquote><p>没报错相当于修改成功，但是怎么验证是否生效，可以通过 <code>jinfo -flags 13050</code> 验证  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flags 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line">Non-default VM flags: -XX:+AlwaysPreTouch -XX:CICompilerCount=2 -XX:CMSInitiatingOccupancyFraction=75 -XX:ErrorFile=null -XX:GCLogFileSize=67108864 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=null -XX:InitialHeapSize=1073741824 -XX:MaxHeapFreeRatio=65 -XX:MaxHeapSize=1073741824 -XX:MaxNewSize=87228416 -XX:MaxTenuringThreshold=6 -XX:MinHeapDeltaBytes=196608 -XX:NewSize=87228416 -XX:NumberOfGCLogFiles=32 -XX:OldPLABSize=16 -XX:OldSize=986513408 -XX:-OmitStackTraceInFastThrow -XX:+PrintGC -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:ThreadStackSize=1024 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseGCLogFileRotation -XX:+UseParNewGC</span><br><span class="line">Command line:  -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch-5035355569386013893 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/home/wkq/software/elasticsearch-6.6.2 -Des.path.conf=/home/wkq/software/elasticsearch-6.6.2/config -Des.distribution.flavor=default -Des.distribution.type=tar</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p>  通过 <code>jinfo -flags 13050</code> 获取的结果可以看到 </p><blockquote><p>出现 Command failed in target VM 则表示这个flag参数不支持<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag ErrorFile=/home/wkq/es_error_file 13050</span><br><span class="line">Exception in thread &quot;main&quot; com.sun.tools.attach.AttachOperationFailedException: flag &apos;ErrorFile&apos; cannot be changed</span><br><span class="line"></span><br><span class="line">at sun.tools.attach.LinuxVirtualMachine.execute(LinuxVirtualMachine.java:229)</span><br><span class="line">at sun.tools.attach.HotSpotVirtualMachine.executeCommand(HotSpotVirtualMachine.java:261)</span><br><span class="line">at sun.tools.attach.HotSpotVirtualMachine.setFlag(HotSpotVirtualMachine.java:234)</span><br><span class="line">at sun.tools.jinfo.JInfo.flag(JInfo.java:134)</span><br><span class="line">at sun.tools.jinfo.JInfo.main(JInfo.java:81)</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure></p></blockquote><p><br><br><br></p><h1 id="5-Java内存映像工具-jmap"><a href="#5-Java内存映像工具-jmap" class="headerlink" title="(5) Java内存映像工具 jmap"></a>(5) Java内存映像工具 jmap</h1><blockquote><p> Jmap是一个可以输出所有内存中对象的工具，甚至可以将VM 中的heap，以二进制输出成文本。打印出某个java进程（使用pid）内存内的，所有‘对象’的情况（如：产生那些对象，及其数量）。</p></blockquote><h2 id="5-1-jmap命令"><a href="#5-1-jmap命令" class="headerlink" title="(5.1) jmap命令"></a>(5.1) jmap命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -help</span><br><span class="line">Usage:</span><br><span class="line">    jmap [option] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jmap [option] &lt;executable &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jmap [option] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to remote debug server)</span><br><span class="line"></span><br><span class="line">where &lt;option&gt; is one of:</span><br><span class="line">    &lt;none&gt;               to print same info as Solaris pmap</span><br><span class="line">    -heap                to print java heap summary</span><br><span class="line">    -histo[:live]        to print histogram of java object heap; if the &quot;live&quot;</span><br><span class="line">                         suboption is specified, only count live objects</span><br><span class="line">    -clstats             to print class loader statistics</span><br><span class="line">    -finalizerinfo       to print information on objects awaiting finalization</span><br><span class="line">    -dump:&lt;dump-options&gt; to dump java heap in hprof binary format</span><br><span class="line">                         dump-options:</span><br><span class="line">                           live         dump only live objects; if not specified,</span><br><span class="line">                                        all objects in the heap are dumped.</span><br><span class="line">                           format=b     binary format</span><br><span class="line">                           file=&lt;file&gt;  dump heap to &lt;file&gt;</span><br><span class="line">                         Example: jmap -dump:live,format=b,file=heap.bin &lt;pid&gt;</span><br><span class="line">    -F                   force. Use with -dump:&lt;dump-options&gt; &lt;pid&gt; or -histo</span><br><span class="line">                         to force a heap dump or histogram when &lt;pid&gt; does not</span><br><span class="line">                         respond. The &quot;live&quot; suboption is not supported</span><br><span class="line">                         in this mode.</span><br><span class="line">    -h | -help           to print this help message</span><br><span class="line">    -J&lt;flag&gt;             to pass &lt;flag&gt; directly to the runtime system</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -options</span><br><span class="line">Usage:</span><br><span class="line">    jmap [option] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jmap [option] &lt;executable &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jmap [option] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to remote debug server)</span><br><span class="line"></span><br><span class="line">where &lt;option&gt; is one of:</span><br><span class="line">    &lt;none&gt;               to print same info as Solaris pmap</span><br><span class="line">    -heap                to print java heap summary</span><br><span class="line">    -histo[:live]        to print histogram of java object heap; if the &quot;live&quot;</span><br><span class="line">                         suboption is specified, only count live objects</span><br><span class="line">    -clstats             to print class loader statistics</span><br><span class="line">    -finalizerinfo       to print information on objects awaiting finalization</span><br><span class="line">    -dump:&lt;dump-options&gt; to dump java heap in hprof binary format</span><br><span class="line">                         dump-options:</span><br><span class="line">                           live         dump only live objects; if not specified,</span><br><span class="line">                                        all objects in the heap are dumped.</span><br><span class="line">                           format=b     binary format</span><br><span class="line">                           file=&lt;file&gt;  dump heap to &lt;file&gt;</span><br><span class="line">                         Example: jmap -dump:live,format=b,file=heap.bin &lt;pid&gt;</span><br><span class="line">    -F                   force. Use with -dump:&lt;dump-options&gt; &lt;pid&gt; or -histo</span><br><span class="line">                         to force a heap dump or histogram when &lt;pid&gt; does not</span><br><span class="line">                         respond. The &quot;live&quot; suboption is not supported</span><br><span class="line">                         in this mode.</span><br><span class="line">    -h | -help           to print this help message</span><br><span class="line">    -J&lt;flag&gt;             to pass &lt;flag&gt; directly to the runtime system</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><blockquote><p> 更多详细信息参考 <code>man jmap</code></p></blockquote><h3 id="5-1-1-jmap-pid"><a href="#5-1-1-jmap-pid" class="headerlink" title="(5.1.1) jmap pid"></a>(5.1.1) jmap pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line">0x00000000004000007K/home/wkq/software/jdk1.8.0_172/bin/java</span><br><span class="line">0x00007fb91127100049K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libmanagement.so</span><br><span class="line">0x00007fb91167a00086K/usr/lib64/libgcc_s-4.8.5-20150702.so.1</span><br><span class="line">0x00007fb911890000251K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libsunec.so</span><br><span class="line">0x00007fb9242c2000112K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libnet.so</span><br><span class="line">0x00007fb9244d900091K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libnio.so</span><br><span class="line">0x00007fb94065d000125K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libzip.so</span><br><span class="line">0x00007fb94087900060K/usr/lib64/libnss_files-2.17.so</span><br><span class="line">0x00007fb940a8c000221K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libjava.so</span><br><span class="line">0x00007fb940cb800064K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libverify.so</span><br><span class="line">0x00007fb940ec700043K/usr/lib64/librt-2.17.so</span><br><span class="line">0x00007fb9410cf0001115K/usr/lib64/libm-2.17.so</span><br><span class="line">0x00007fb9413d100016667K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/server/libjvm.so</span><br><span class="line">0x00007fb9423d20002068K/usr/lib64/libc-2.17.so</span><br><span class="line">0x00007fb94279300019K/usr/lib64/libdl-2.17.so</span><br><span class="line">0x00007fb942997000101K/home/wkq/software/jdk1.8.0_172/lib/amd64/jli/libjli.so</span><br><span class="line">0x00007fb942bad000140K/usr/lib64/libpthread-2.17.so</span><br><span class="line">0x00007fb942dc9000155K/usr/lib64/ld-2.17.so</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="5-1-2-jmap-dump-live-format-b-file-file-path"><a href="#5-1-2-jmap-dump-live-format-b-file-file-path" class="headerlink" title="(5.1.2) jmap -dump:[live,] format=b, file=file_path"></a>(5.1.2) jmap -dump:[live,] format=b, file=file_path</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -dump:live,format=b,file=13050.log 13050</span><br><span class="line">Dumping heap to /home/wkq/13050.log ...</span><br><span class="line">Heap dump file created</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="5-1-3-jmap-finalizerinfo-pid"><a href="#5-1-3-jmap-finalizerinfo-pid" class="headerlink" title="(5.1.3) jmap -finalizerinfo pid"></a>(5.1.3) jmap -finalizerinfo pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -finalizerinfo 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line">Number of objects pending for finalization: 0</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="5-1-4-jmap-heap-pid"><a href="#5-1-4-jmap-heap-pid" class="headerlink" title="(5.1.4) jmap -heap pid"></a>(5.1.4) jmap -heap pid</h3><blockquote><p> jmap -heap pid<br> jmap-J-d64 -heap pid</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -heap 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line"></span><br><span class="line">using parallel threads in the new generation.</span><br><span class="line">using thread-local object allocation.</span><br><span class="line">Concurrent Mark-Sweep GC</span><br><span class="line"></span><br><span class="line">Heap Configuration:</span><br><span class="line">   MinHeapFreeRatio         = 40</span><br><span class="line">   MaxHeapFreeRatio         = 70</span><br><span class="line">   MaxHeapSize              = 1073741824 (1024.0MB)</span><br><span class="line">   NewSize                  = 87228416 (83.1875MB)</span><br><span class="line">   MaxNewSize               = 87228416 (83.1875MB)</span><br><span class="line">   OldSize                  = 986513408 (940.8125MB)</span><br><span class="line">   NewRatio                 = 2</span><br><span class="line">   SurvivorRatio            = 8</span><br><span class="line">   MetaspaceSize            = 21807104 (20.796875MB)</span><br><span class="line">   CompressedClassSpaceSize = 1073741824 (1024.0MB)</span><br><span class="line">   MaxMetaspaceSize         = 17592186044415 MB</span><br><span class="line">   G1HeapRegionSize         = 0 (0.0MB)</span><br><span class="line"></span><br><span class="line">Heap Usage:</span><br><span class="line">New Generation (Eden + 1 Survivor Space):</span><br><span class="line">   capacity = 78512128 (74.875MB)</span><br><span class="line">   used     = 7022576 (6.6972503662109375MB)</span><br><span class="line">   free     = 71489552 (68.17774963378906MB)</span><br><span class="line">   8.94457477958055% used</span><br><span class="line">Eden Space:</span><br><span class="line">   capacity = 69795840 (66.5625MB)</span><br><span class="line">   used     = 7022576 (6.6972503662109375MB)</span><br><span class="line">   free     = 62773264 (59.86524963378906MB)</span><br><span class="line">   10.061596794307512% used</span><br><span class="line">From Space:</span><br><span class="line">   capacity = 8716288 (8.3125MB)</span><br><span class="line">   used     = 0 (0.0MB)</span><br><span class="line">   free     = 8716288 (8.3125MB)</span><br><span class="line">   0.0% used</span><br><span class="line">To Space:</span><br><span class="line">   capacity = 8716288 (8.3125MB)</span><br><span class="line">   used     = 0 (0.0MB)</span><br><span class="line">   free     = 8716288 (8.3125MB)</span><br><span class="line">   0.0% used</span><br><span class="line">concurrent mark-sweep generation:</span><br><span class="line">   capacity = 986513408 (940.8125MB)</span><br><span class="line">   used     = 62168384 (59.28839111328125MB)</span><br><span class="line">   free     = 924345024 (881.5241088867188MB)</span><br><span class="line">   6.301828591061582% used</span><br><span class="line"></span><br><span class="line">22982 interned Strings occupying 3212304 bytes.</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="5-1-5-jmap-histo-pid"><a href="#5-1-5-jmap-histo-pid" class="headerlink" title="(5.1.5) jmap -histo pid"></a>(5.1.5) jmap -histo pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -histo 13050 | more</span><br><span class="line"></span><br><span class="line"> num     #instances         #bytes  class name</span><br><span class="line">----------------------------------------------</span><br><span class="line">   1:        258021       20550728  [C</span><br><span class="line">   2:        432469       13839008  java.util.HashMap$Node</span><br><span class="line">   3:        228108        5474592  java.lang.String</span><br><span class="line">   4:         38596        4839800  [Ljava.util.HashMap$Node;</span><br><span class="line">   5:         86202        4137696  java.util.HashMap</span><br><span class="line">   6:         21464        2574920  [B</span><br><span class="line">   7:         74456        2382592  java.util.Collections$UnmodifiableMap</span><br><span class="line">   8:         12306        2118456  [I</span><br><span class="line">   9:         30839        1957320  [Ljava.lang.Object;</span><br><span class="line">  10:         15798        1730136  java.lang.Class</span><br><span class="line">  11:         52294        1673408  java.util.concurrent.ConcurrentHashMap$Node</span><br><span class="line">  12:         24594         787008  java.util.AbstractList$Itr</span><br><span class="line">  13:         49038         784608  org.elasticsearch.common.lucene.LoggerInfoStream$$Lambda$3048/931367447</span><br><span class="line">  14:         24519         784608  org.elasticsearch.index.engine.Engine$$Lambda$3100/1060530393</span><br><span class="line">  15:         23576         754432  java.lang.ref.WeakReference</span><br><span class="line">  16:         30639         735336  java.util.Arrays$ArrayList</span><br><span class="line">  17:         24519         588456  [Lorg.elasticsearch.common.lease.Releasable;</span><br><span class="line">  18:         24519         588456  org.elasticsearch.index.engine.Engine$Searcher</span><br><span class="line">  19:          8132         585504  java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask</span><br><span class="line">  20:          9564         535584  java.lang.invoke.MemberName</span><br><span class="line">  21:          6052         532576  java.lang.reflect.Method</span><br><span class="line">  22:         33099         529584  java.lang.Object</span><br></pre></td></tr></table></figure><h3 id="5-1-6-jmap-clstats-pid"><a href="#5-1-6-jmap-clstats-pid" class="headerlink" title="(5.1.6) jmap -clstats pid"></a>(5.1.6) jmap -clstats pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -clstats 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line">finding class loader instances ..</span><br><span class="line">done.</span><br><span class="line">computing per loader stat ..done.</span><br><span class="line">please wait.. computing liveness.liveness analysis may be inaccurate ...</span><br><span class="line">class_loaderclassesbytesparent_loaderalive?type</span><br><span class="line"></span><br><span class="line">&lt;bootstrap&gt;23534122324  null  live&lt;internal&gt;</span><br><span class="line">0x00000000c5fa93781714  null  deadorg/elasticsearch/painless/lookup/PainlessLookupBuilder$BridgeLoader@0x00000001003f45d0</span><br><span class="line">0x00000000c5fa98781714  null  deadorg/elasticsearch/painless/lookup/PainlessLookupBuilder$BridgeLoader@0x00000001003f45d0</span><br><span class="line">0x00000000c58b8708000x00000000c544a3d0deadorg/elasticsearch/plugins/ExtendedPluginsClassLoader@0x0000000100263e90</span><br><span class="line">0x00000000c5ab86a8114710x00000000c544a3d0deadsun/reflect/DelegatingClassLoader@0x000000010000a028</span><br><span class="line">0x00000000c5ac4b2811201820x00000000c5c12600deadjava/net/FactoryURLClassLoader@0x0000000100259738</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">total = 861158219740221    N/A    alive=1, dead=85    N/A</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><blockquote><p> 省略部分详细信息</p></blockquote><p><br><br><br></p><h1 id="6-虚拟机堆转储快照分析工具-jhat"><a href="#6-虚拟机堆转储快照分析工具-jhat" class="headerlink" title="(6) 虚拟机堆转储快照分析工具 jhat"></a>(6) 虚拟机堆转储快照分析工具 jhat</h1><p><br><br><br></p><h1 id="7-Java堆栈跟踪工具-jstack-Java-Stack-Trace"><a href="#7-Java堆栈跟踪工具-jstack-Java-Stack-Trace" class="headerlink" title="(7) Java堆栈跟踪工具 jstack (Java Stack Trace)"></a>(7) Java堆栈跟踪工具 jstack (Java Stack Trace)</h1><blockquote><p> jstack主要用来查看某个Java进程内的线程堆栈信息。<br>在实际运行中，往往一次 dump的信息，还不足以确认问题。建议产生三次 dump信息，如果每次 dump都指向同一个问题，我们才确定问题的典型性。 </p></blockquote><h2 id="7-1-jstack命令"><a href="#7-1-jstack命令" class="headerlink" title="(7.1) jstack命令"></a>(7.1) jstack命令</h2><figure class="highlight plain"><figcaption><span>~]$ jstack -help</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">    jstack [-l] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jstack -F [-m] [-l] &lt;pid&gt;</span><br><span class="line">        (to connect to a hung process)</span><br><span class="line">    jstack [-m] [-l] &lt;executable&gt; &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jstack [-m] [-l] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to a remote debug server)</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">    -F  to force a thread dump. Use when jstack &lt;pid&gt; does not respond (process is hung)</span><br><span class="line">    -m  to print both java and native frames (mixed mode)</span><br><span class="line">    -l  long listing. Prints additional information about locks</span><br><span class="line">    -h or -help to print this help message</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstack -options</span><br><span class="line">Usage:</span><br><span class="line">    jstack [-l] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jstack -F [-m] [-l] &lt;pid&gt;</span><br><span class="line">        (to connect to a hung process)</span><br><span class="line">    jstack [-m] [-l] &lt;executable&gt; &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jstack [-m] [-l] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to a remote debug server)</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">    -F  to force a thread dump. Use when jstack &lt;pid&gt; does not respond (process is hung)</span><br><span class="line">    -m  to print both java and native frames (mixed mode)</span><br><span class="line">    -l  long listing. Prints additional information about locks</span><br><span class="line">    -h or -help to print this help message</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="7-1-1-jstack-pid"><a href="#7-1-1-jstack-pid" class="headerlink" title="(7.1.1) jstack pid"></a>(7.1.1) jstack pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstack  13050</span><br><span class="line">2020-03-29 08:55:30</span><br><span class="line">Full thread dump Java HotSpot(TM) 64-Bit Server VM (25.172-b11 mixed mode):</span><br><span class="line"></span><br><span class="line">&quot;Attach Listener&quot; #48 daemon prio=9 os_prio=0 tid=0x00007fb90805b800 nid=0x1c9f waiting on condition [0x0000000000000000]</span><br><span class="line">   java.lang.Thread.State: RUNNABLE</span><br><span class="line"></span><br><span class="line">&quot;elasticsearch[elasticsearch_001_data][flush][T#1]&quot; #47 daemon prio=5 os_prio=0 tid=0x00007fb93c693800 nid=0x376c waiting on condition [0x00007fb8fd520000]</span><br><span class="line">   java.lang.Thread.State: WAITING (parking)</span><br><span class="line">at sun.misc.Unsafe.park(Native Method)</span><br><span class="line">- parking to wait for  &lt;0x00000000c600d388&gt; (a org.elasticsearch.common.util.concurrent.EsExecutors$ExecutorScalingQueue)</span><br><span class="line">...</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="7-1-2-jstack-l-pid"><a href="#7-1-2-jstack-l-pid" class="headerlink" title="(7.1.2) jstack -l pid"></a>(7.1.2) jstack -l pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstack -l 13050</span><br><span class="line">2020-03-29 23:09:50</span><br><span class="line">Full thread dump Java HotSpot(TM) 64-Bit Server VM (25.172-b11 mixed mode):</span><br><span class="line"></span><br><span class="line">&quot;elasticsearch[elasticsearch_001_data][generic][T#8]&quot; #51 daemon prio=5 os_prio=0 tid=0x00007fb93df68000 nid=0x77cf waiting on condition [0x00007fb8ff934000]</span><br><span class="line">   java.lang.Thread.State: TIMED_WAITING (parking)</span><br><span class="line">at sun.misc.Unsafe.park(Native Method)</span><br><span class="line">- parking to wait for  &lt;0x00000000c5ed5f70&gt; (a org.elasticsearch.common.util.concurrent.EsExecutors$ExecutorScalingQueue)</span><br><span class="line">at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   Locked ownable synchronizers:</span><br><span class="line">- None</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&quot;Attach Listener&quot; #48 daemon prio=9 os_prio=0 tid=0x00007fb90805b800 nid=0x1c9f waiting on condition [0x0000000000000000]</span><br><span class="line">   java.lang.Thread.State: RUNNABLE</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&quot;VM Thread&quot; os_prio=0 tid=0x00007fb93c0b5000 nid=0x32ff runnable</span><br><span class="line"></span><br><span class="line">&quot;Gang worker#0 (Parallel GC Threads)&quot; os_prio=0 tid=0x00007fb93c01d000 nid=0x32fd runnable</span><br><span class="line"></span><br><span class="line">&quot;Concurrent Mark-Sweep GC Thread&quot; os_prio=0 tid=0x00007fb93c040000 nid=0x32fe runnable</span><br><span class="line"></span><br><span class="line">&quot;VM Periodic Task Thread&quot; os_prio=0 tid=0x00007fb93c103800 nid=0x3307 waiting on condition</span><br><span class="line"></span><br><span class="line">JNI global references: 8827</span><br><span class="line"></span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="8-Java监视与管理控制台-JConsole-Java-Monitoring-and-Managerment-Console"><a href="#8-Java监视与管理控制台-JConsole-Java-Monitoring-and-Managerment-Console" class="headerlink" title="(8) Java监视与管理控制台 JConsole (Java Monitoring and Managerment Console)"></a>(8) Java监视与管理控制台 JConsole (Java Monitoring and Managerment Console)</h1><p><br><br><br></p><h1 id="9-多合一故障处理工具-VisuaIVM-All-in-One-Java-Troubleshooting-Tool"><a href="#9-多合一故障处理工具-VisuaIVM-All-in-One-Java-Troubleshooting-Tool" class="headerlink" title="(9) 多合一故障处理工具 VisuaIVM (All-in-One Java Troubleshooting Tool)"></a>(9) 多合一故障处理工具 VisuaIVM (All-in-One Java Troubleshooting Tool)</h1><blockquote><p>VisuaIVM (All-in-One Java Troubleshooting Tool) 是到目前为止随JDK发布的功能最强大的运行监视和故障处理程序。</p></blockquote><p><br><br><br></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] 《深入理解JAVA虚拟机: JVM高级特性与最佳实践》 周志明<br>[2] <a href="https://my.oschina.net/feichexia/blog/196575" target="_blank" rel="noopener">JVM性能调优监控工具jps、jstack、jmap、jhat、jstat、hprof使用详解</a><br>[3] <a href="https://www.cnblogs.com/tulianghui/p/5914535.html" target="_blank" rel="noopener">JAVA JPS 命令详解</a><br>[4] <a href="https://blog.csdn.net/ouyang111222/article/details/53688986" target="_blank" rel="noopener">jstat使用详解（分析JVM的使用情况）</a><br>[5] <a href="https://www.cnblogs.com/duanxz/p/10240899.html" target="_blank" rel="noopener">使用Java监控工具出现 Can’t attach to the process</a><br>[6] <a href="https://my.oschina.net/javamaster/blog/1833908" target="_blank" rel="noopener">JVM系列：jinfo命令详解</a><br>[7] <a href="https://blog.csdn.net/zhaozheng7758/article/details/8623530" target="_blank" rel="noopener">jmap命令详解</a><br>[8] <a href="https://blog.csdn.net/zhaozheng7758/article/details/8623535" target="_blank" rel="noopener">jstack命令详解</a><br>[9] <a href="https://time.geekbang.org/column/article/40520" target="_blank" rel="noopener">深入拆解Java虚拟机 - 30 | Java虚拟机的监控及诊断工具（命令行篇）</a><br>[10] <a href="https://docs.oracle.com/en/java/javase/11/tools/monitoring-tools-and-commands.html" target="_blank" rel="noopener">oracle monitoring-tools-and-commands</a><br>[11] <a href="https://time.geekbang.org/column/article/40821" target="_blank" rel="noopener">深入拆解Java虚拟机 - 31 | Java虚拟机的监控及诊断工具（GUI篇）</a><br>[12] <a href="https://visualvm.github.io/index.html" target="_blank" rel="noopener">visualvm</a><br>[13] <a href="https://github.com/AdoptOpenJDK/jitwatch" target="_blank" rel="noopener">jitwatch</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 最近测试环境总是莫名的出问题，然后部署服务的容器里除了服务打印的日志，没有其它信息，想看看是什么原因导致服务很卡，是不是有哪块代码占用内存高。&lt;br&gt; 代码执行缓慢、OutOfMemoryError，内存不足、内存泄露、线程死锁、锁争用（Lock Contention）、Java进程消耗CPU过高 都可以使用JDK的命令行工具排查。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-JDK的命令行工具&quot;&gt;&lt;a href=&quot;#1-JDK的命令行工具&quot; class=&quot;headerlink&quot; title=&quot;(1) JDK的命令行工具&quot;&gt;&lt;/a&gt;(1) JDK的命令行工具&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; jps、jstat、jinfo、jmap、jhat、jstack、hprof&lt;br&gt;jps : 虚拟机进程状况工具&lt;br&gt;jstat : 虚拟机统计信息监视工具&lt;br&gt;jinfo : Java 配置信息工具&lt;br&gt;jmap : Java 内存映像工具&lt;br&gt;jhat : 虚拟机堆转储快照分析工具&lt;br&gt;jstack : Java 堆栈跟踪工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt; jps将打印所有正在运行的 Java 进程。&lt;br&gt; jstat允许用户查看目标 Java 进程的类加载、即时编译以及垃圾回收相关的信息。它常用于检测垃圾回收问题以及内存泄漏问题。&lt;br&gt; jmap允许用户统计目标 Java 进程的堆中存放的 Java 对象，并将它们导出成二进制文件。&lt;br&gt; jinfo将打印目标 Java 进程的配置参数，并能够改动其中 manageabe 的参数。&lt;br&gt; jstack将打印目标 Java 进程中各个线程的栈轨迹、线程状态、锁状况等信息。它还将自动检测死锁。&lt;br&gt; jcmd则是一把瑞士军刀，可以用来实现前面除了jstat之外所有命令的功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Java虚拟机的监控及诊断工具-GUI&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JConsole : Java 监视与管理控制台&lt;br&gt;VisualVM : 多合一故障处理工具&lt;br&gt;eclipse MAT&lt;br&gt;JMC&lt;br&gt;JITWatch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&quot;2-虚拟机进程状况工具-jps-JVM-Process-Status-Tool&quot;&gt;&lt;a href=&quot;#2-虚拟机进程状况工具-jps-JVM-Process-Status-Tool&quot; class=&quot;headerlink&quot; title=&quot;(2) 虚拟机进程状况工具 jps (JVM Process Status Tool)&quot;&gt;&lt;/a&gt;(2) 虚拟机进程状况工具 jps (JVM Process Status Tool)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; jps主要用来输出JVM中运行的进程状态信息。&lt;br&gt; jps命令使用Java启动器来查找传递给main方法的类名和参数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$ jps -help&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;usage: jps [-help]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       jps [-q] [-mlvV] [&amp;lt;hostid&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Definitions:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;hostid&amp;gt;:      &amp;lt;hostname&amp;gt;[:&amp;lt;port&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-1-jps命令&quot;&gt;&lt;a href=&quot;#2-1-jps命令&quot; class=&quot;headerlink&quot; title=&quot;(2.1) jps命令&quot;&gt;&lt;/a&gt;(2.1) jps命令&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;jps命令用于输出JVM中运行的进程状态信息。可以获取到进程的pid、全限定名、传入main方法的参数、传入JVM的参数 等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;语法格式&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jps [ options ] [ hostid ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  如果不指定hostid就默认为当前主机或服务器。&lt;/p&gt;
&lt;p&gt;  详细信息见 &lt;code&gt;man jps&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-1-1-jps-不加参数&quot;&gt;&lt;a href=&quot;#2-1-1-jps-不加参数&quot; class=&quot;headerlink&quot; title=&quot;(2.1.1) jps 不加参数&quot;&gt;&lt;/a&gt;(2.1.1) jps 不加参数&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; 在本地主机上搜索检测到的JVM。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$ jps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14916 Jps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13050 Elasticsearch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="java" scheme="http://weikeqin.com/categories/java/"/>
    
    
      <category term="java" scheme="http://weikeqin.com/tags/java/"/>
    
      <category term="jvm" scheme="http://weikeqin.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>chrome-notes</title>
    <link href="http://weikeqin.com/2020/03/20/chrome-notes/"/>
    <id>http://weikeqin.com/2020/03/20/chrome-notes/</id>
    <published>2020-03-20T02:29:03.000Z</published>
    <updated>2020-03-20T02:36:24.087Z</updated>
    
    <content type="html"><![CDATA[<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://developers.google.com/web/tools/chrome-devtools/" target="_blank" rel="noopener">chrome-devtools</a><br>[] <a href="https://chrome.google.com/webstore/category/extensions" target="_blank" rel="noopener">chrome extensions</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h1&gt;&lt;p&gt;[1] &lt;a href=&quot;https://developers.google
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="http://weikeqin.com/2020/03/14/design-pattern/"/>
    <id>http://weikeqin.com/2020/03/14/design-pattern/</id>
    <published>2020-03-14T08:55:56.000Z</published>
    <updated>2020-05-24T13:29:13.426Z</updated>
    
    <content type="html"><![CDATA[<p>  其实，很多东西都是经历过，遇到问题，解决了，然后才知道。大学时候学过设计模式，但是没有实践过，很快就忘了。后来开发的时候遇到一些问题，解决了，然后感觉像哪个设计模式，回过头去看设计模式，感觉挺有用的。</p><p>  学完设计模式以后，建议用简单、高效、易维护的态度去设计开发。</p><h1 id="1-什么是设计模式"><a href="#1-什么是设计模式" class="headerlink" title="(1) 什么是设计模式"></a>(1) 什么是设计模式</h1><blockquote><p> 软件设计模式（Design pattern），又称设计模式，是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。 使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性、程序的重用性。</p></blockquote><h1 id="2-设计模式的分类"><a href="#2-设计模式的分类" class="headerlink" title="(2)  设计模式的分类"></a>(2)  设计模式的分类</h1><blockquote><p> 创建型模式：对象实例化的模式，创建型模式用于解耦对象的实例化过程。</p><p> 结构型模式：把类或对象结合在一起形成一个更大的结构。</p><p> 行为型模式：类和对象如何交互，及划分责任和算法。</p></blockquote><a id="more"></a><h1 id="3-各个模式的关键点"><a href="#3-各个模式的关键点" class="headerlink" title="(3) 各个模式的关键点"></a>(3) 各个模式的关键点</h1><blockquote><p> 单例模式：某个类只能有一个实例，提供一个全局的访问点。</p><p> 工厂模式：定义一个创建对象的接口，让子类决定实例化那个类。</p><p> 抽象工厂模式：创建相关或依赖对象的家族，而无需明确指定具体类。</p><p> 建造者模式：封装一个复杂对象的构建过程，并可以按步骤构造。</p><p> 原型模式：通过复制现有的实例来创建新的实例。</p><p> 适配器模式：将一个类的方法接口转换成客户希望的另外一个接口。</p><p> 组合模式：将对象组合成树形结构以表示“”部分-整体“”的层次结构。</p><p> 装饰模式：动态的给对象添加新的功能。</p><p> 代理模式：为其他对象提供一个代理以便控制这个对象的访问。</p><p> 亨元模式：通过共享技术来有效的支持大量细粒度的对象。</p><p> 外观模式：对外提供一个统一的方法，来访问子系统中的一群接口。</p><p> 桥接模式：将抽象部分和它的实现部分分离，使它们都可以独立的变化。</p><p> 模板模式：定义一个算法结构，而将一些步骤延迟到子类实现。</p><p> 解释器模式：给定一个语言，定义它的文法的一种表示，并定义一个解释器。</p><p> 策略模式：定义一系列算法，把他们封装起来，并且使它们可以相互替换。</p><p> 状态模式：允许一个对象在其对象内部状态改变时改变它的行为。</p><p> 观察者模式：对象间的一对多的依赖关系。</p><p> 备忘录模式：在不破坏封装的前提下，保持对象的内部状态。</p><p> 中介者模式：用一个中介对象来封装一系列的对象交互。</p><p> 命令模式：将命令请求封装为一个对象，使得可以用不同的请求来进行参数化。</p><p> 访问者模式：在不改变数据结构的前提下，增加作用于一组对象元素的新功能。</p><p> 责任链模式：将请求的发送者和接收者解耦，使的多个对象都有处理这个请求的机会。</p><p> 迭代器模式：一种遍历访问聚合对象中各个元素的方法，不暴露该对象的内部结构。</p></blockquote><blockquote><p>设计模式的六大原则 </p><ol><li>开闭原则（Open Close Principle）</li><li>里氏代换原则（Liskov Substitution Principle）</li><li>依赖倒转原则（Dependence Inversion Principle）</li><li>接口隔离原则（Interface Segregation Principle）</li><li>迪米特法则，又称最少知道原则（Demeter Principle）</li><li>合成复用原则（Composite Reuse Principle）</li></ol></blockquote><h1 id="4-概说23种设计模式"><a href="#4-概说23种设计模式" class="headerlink" title="(4) 概说23种设计模式"></a>(4) 概说23种设计模式</h1><h2 id="4-1-单例模式-Singleton-Pattern"><a href="#4-1-单例模式-Singleton-Pattern" class="headerlink" title="(4.1) 单例模式 (Singleton Pattern)"></a>(4.1) 单例模式 (Singleton Pattern)</h2><h3 id="4-1-1-什么是单例模式"><a href="#4-1-1-什么是单例模式" class="headerlink" title="(4.1.1) 什么是单例模式"></a>(4.1.1) 什么是单例模式</h3><blockquote><p> 单例模式是为确保一个类只有一个实例，并为整个系统提供一个全局访问点的一种模式方法。</p></blockquote><h3 id="4-1-2-单例模式的特点"><a href="#4-1-2-单例模式的特点" class="headerlink" title="(4.1.2) 单例模式的特点"></a>(4.1.2) 单例模式的特点</h3><blockquote><p>优点：<br> 1、在内存里只有一个实例，减少了内存的开销，尤其是频繁的创建和销毁实例。<br> 2、避免对资源的多重占用（比如写文件操作）。 </p></blockquote><blockquote><p>缺点：<br> 没有接口，不能继承，与单一职责原则冲突，一个类应该只关心内部逻辑，而不关心外面怎么样来实例化。</p></blockquote><h3 id="4-1-3-单例模式的应用"><a href="#4-1-3-单例模式的应用" class="headerlink" title="(4.1.3) 单例模式的应用"></a>(4.1.3) 单例模式的应用</h3><blockquote><p> 1、要求生产唯一序列号。<br> 2、WEB 中的计数器，不用每次刷新都在数据库里加一次，用单例先缓存起来。<br> 3、创建的一个对象需要消耗的资源过多，比如 I/O 与数据库的连接等。 例如: 在计算机系统中，线程池、缓存、日志对象、对话框、打印机、显卡的驱动程序对象常被设计成单例。</p></blockquote><h3 id="4-1-4-单例模式的实现"><a href="#4-1-4-单例模式的实现" class="headerlink" title="(4.1.4) 单例模式的实现"></a>(4.1.4) 单例模式的实现</h3><p>  单例模式的实现有很多种。以下是比较常用的几种。</p><h4 id="4-1-4-1-饿汉式单例"><a href="#4-1-4-1-饿汉式单例" class="headerlink" title="(4.1.4.1) 饿汉式单例"></a>(4.1.4.1) 饿汉式单例</h4><p>  饿汉式单例是指在方法调用前，实例就已经创建好了。</p><h4 id="4-1-4-2-懒汉式单例"><a href="#4-1-4-2-懒汉式单例" class="headerlink" title="(4.1.4.2) 懒汉式单例"></a>(4.1.4.2) 懒汉式单例</h4><h4 id="4-1-4-3-双检锁-双重校验锁（DCL，即-double-checked-locking）"><a href="#4-1-4-3-双检锁-双重校验锁（DCL，即-double-checked-locking）" class="headerlink" title="(4.1.4.3) 双检锁/双重校验锁（DCL，即 double-checked locking）"></a>(4.1.4.3) 双检锁/双重校验锁（DCL，即 double-checked locking）</h4><h2 id="4-2-工厂模式-Factory-Pattern"><a href="#4-2-工厂模式-Factory-Pattern" class="headerlink" title="(4.2) 工厂模式 (Factory Pattern)"></a>(4.2) 工厂模式 (Factory Pattern)</h2><h3 id="4-2-1-什么是工厂模式"><a href="#4-2-1-什么是工厂模式" class="headerlink" title="(4.2.1) 什么是工厂模式"></a>(4.2.1) 什么是工厂模式</h3><blockquote><p> 工厂模式<br> 工厂模式就好比房屋中介，你想租房，通过中介去租不同的房子。</p></blockquote><h3 id="4-2-2-工厂模式的特点"><a href="#4-2-2-工厂模式的特点" class="headerlink" title="(4.2.2) 工厂模式的特点"></a>(4.2.2) 工厂模式的特点</h3><blockquote><p>优点：<br> 1、一个调用者想创建一个对象，只要知道其名称就可以了。<br> 2、扩展性高，如果想增加一个产品，只要扩展一个工厂类就可以。<br> 3、屏蔽产品的具体实现，调用者只关心产品的接口。</p></blockquote><blockquote><p>缺点：<br> 每次增加一个产品时，都需要增加一个具体类和对象实现工厂，使得系统中类的个数成倍增加，在一定程度上增加了系统的复杂度，同时也增加了系统具体类的依赖。这并不是什么好事。</p></blockquote><h3 id="4-2-3-工厂模式的应用"><a href="#4-2-3-工厂模式的应用" class="headerlink" title="(4.2.3) 工厂模式的应用"></a>(4.2.3) 工厂模式的应用</h3><blockquote><p> 1、日志记录器：记录可能记录到本地硬盘、系统事件、远程服务器等，用户可以选择记录日志到什么地方。<br> 2、数据库访问，当用户不知道最后系统采用哪一类数据库，以及数据库可能有变化时。<br> 3、设计一个连接服务器的框架，需要三个协议，”POP3”、”IMAP”、”HTTP”，可以把这三个作为产品类，共同实现一个接口。 </p></blockquote><h3 id="4-2-4-实现"><a href="#4-2-4-实现" class="headerlink" title="(4.2.4) 实现"></a>(4.2.4) 实现</h3><h2 id="4-3-抽象工厂模式"><a href="#4-3-抽象工厂模式" class="headerlink" title="(4.3) 抽象工厂模式"></a>(4.3) 抽象工厂模式</h2><h3 id="4-3-1-什么是抽象工厂模式"><a href="#4-3-1-什么是抽象工厂模式" class="headerlink" title="(4.3.1) 什么是抽象工厂模式"></a>(4.3.1) 什么是抽象工厂模式</h3><blockquote><p> 抽象工厂模式（Abstract Factory Pattern）是围绕一个超级工厂创建其他工厂。该超级工厂又称为其他工厂的工厂。<br> 抽象工厂模式好比所有中介的中介，就行房屋中介、婚姻中介、买菜中介的中介管家一样，租房找中介管家，中介管家找房屋中介，然后租房。</p></blockquote><h3 id="4-3-2-抽象工厂模式的特点"><a href="#4-3-2-抽象工厂模式的特点" class="headerlink" title="(4.3.2) 抽象工厂模式的特点"></a>(4.3.2) 抽象工厂模式的特点</h3><blockquote><p> 特点</p></blockquote><h3 id="4-3-3-抽象工厂模式的应用"><a href="#4-3-3-抽象工厂模式的应用" class="headerlink" title="(4.3.3) 抽象工厂模式的应用"></a>(4.3.3) 抽象工厂模式的应用</h3><blockquote><ol><li>QQ 换皮肤，一整套一起换。 </li><li>生成不同操作系统的程序。</li></ol></blockquote><h3 id="4-3-4-抽象工厂模式的实现"><a href="#4-3-4-抽象工厂模式的实现" class="headerlink" title="(4.3.4) 抽象工厂模式的实现"></a>(4.3.4) 抽象工厂模式的实现</h3><h2 id="4-4-建造者模式-Builder-Pattern"><a href="#4-4-建造者模式-Builder-Pattern" class="headerlink" title="(4.4) 建造者模式 (Builder Pattern)"></a>(4.4) 建造者模式 (Builder Pattern)</h2><blockquote><p> 注意事项：与工厂模式的区别是：建造者模式更加关注与零件装配的顺序。</p></blockquote><h3 id="4-4-1-什么是建造者模式"><a href="#4-4-1-什么是建造者模式" class="headerlink" title="(4.4.1) 什么是建造者模式"></a>(4.4.1) 什么是建造者模式</h3><blockquote><p> 指将一个复杂对象的构造与它的表示分离，使同样的构建过程可以创建不同的表示，这样的设计模式被称为建造者模式。</p></blockquote><blockquote><p> 计算机是由 CPU、主板、内存、硬盘、显卡、机箱、显示器、键盘、鼠标等部件组装而成的，采购员不可能自己去组装计算机，而是将计算机的配置要求告诉计算机销售公司，计算机销售公司安排技术人员去组装计算机，然后再交给要买计算机的采购员。<br> 游戏中的不同角色，其性别、个性、能力、脸型、体型、服装、发型等特性都有所差异。<br> 汽车中的方向盘、发动机、车架、轮胎等部件也多种多样。<br> 每封电子邮件的发件人、收件人、主题、内容、附件等内容也各不相同。</p></blockquote><h3 id="4-4-2-建造者模式的特点"><a href="#4-4-2-建造者模式的特点" class="headerlink" title="(4.4.2) 建造者模式的特点"></a>(4.4.2) 建造者模式的特点</h3><blockquote><p>优点：<br> 1、建造者独立，易扩展。<br> 2、便于控制细节风险。</p></blockquote><blockquote><p>缺点：<br> 1、产品必须有共同点，范围有限制。<br> 2、如内部变化复杂，会有很多的建造类。</p></blockquote><h3 id="4-4-3-建造者模式的应用"><a href="#4-4-3-建造者模式的应用" class="headerlink" title="(4.4.3) 建造者模式的应用"></a>(4.4.3) 建造者模式的应用</h3><blockquote><p> 一些基本部件不会变，而其组合经常变化的时候。</p></blockquote><blockquote><p> 1、计算机是由 CPU、主板、内存、硬盘、显卡、机箱、显示器、键盘、鼠标等部件组装而成的，购买电脑时选取自己喜欢的CPU、主板、内存条、硬盘、显卡、机箱、显示器、键盘、鼠标等部件。<br> 2、JAVA 中的 StringBuilder，可以拼接不同的对象。 </p></blockquote><h3 id="4-4-4-建造者模式的实现"><a href="#4-4-4-建造者模式的实现" class="headerlink" title="(4.4.4) 建造者模式的实现"></a>(4.4.4) 建造者模式的实现</h3><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://www.cnblogs.com/pony1223/p/7608955.html" target="_blank" rel="noopener">23种设计模式</a><br>[2] <a href="http://c.biancheng.net/design_pattern/" target="_blank" rel="noopener">23种设计模式全面解析</a><br>[3] <a href="https://blog.csdn.net/WiKi_Su/article/details/80263967" target="_blank" rel="noopener">24种设计模式及案例</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  其实，很多东西都是经历过，遇到问题，解决了，然后才知道。大学时候学过设计模式，但是没有实践过，很快就忘了。后来开发的时候遇到一些问题，解决了，然后感觉像哪个设计模式，回过头去看设计模式，感觉挺有用的。&lt;/p&gt;
&lt;p&gt;  学完设计模式以后，建议用简单、高效、易维护的态度去设计开发。&lt;/p&gt;
&lt;h1 id=&quot;1-什么是设计模式&quot;&gt;&lt;a href=&quot;#1-什么是设计模式&quot; class=&quot;headerlink&quot; title=&quot;(1) 什么是设计模式&quot;&gt;&lt;/a&gt;(1) 什么是设计模式&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 软件设计模式（Design pattern），又称设计模式，是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。 使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性、程序的重用性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;2-设计模式的分类&quot;&gt;&lt;a href=&quot;#2-设计模式的分类&quot; class=&quot;headerlink&quot; title=&quot;(2)  设计模式的分类&quot;&gt;&lt;/a&gt;(2)  设计模式的分类&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 创建型模式：对象实例化的模式，创建型模式用于解耦对象的实例化过程。&lt;/p&gt;
&lt;p&gt; 结构型模式：把类或对象结合在一起形成一个更大的结构。&lt;/p&gt;
&lt;p&gt; 行为型模式：类和对象如何交互，及划分责任和算法。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="pattern" scheme="http://weikeqin.com/categories/pattern/"/>
    
    
      <category term="pattern" scheme="http://weikeqin.com/tags/pattern/"/>
    
  </entry>
  
  <entry>
    <title>域名重定向 hexo博客更换域名</title>
    <link href="http://weikeqin.com/2020/03/02/domain-redirection/"/>
    <id>http://weikeqin.com/2020/03/02/domain-redirection/</id>
    <published>2020-03-02T01:31:53.000Z</published>
    <updated>2020-05-21T13:06:30.009Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 在很长的一段时间里，使用的是多域名，主要有 weikeqin.cn  weikeqin.com，但是两个域名解析到的是同一个博客，想把 weikeqin.cn 的流量全部转到 weikeqin.com，因为有些时候 .cn 不如 .com 域名，在某个特殊的时候感觉特别明显。然后就有了这篇文章。<br> 在具体更换域名前的测试中，发现github.com还是比coding.net好用。<br><br></p></blockquote><h1 id="1-博客域名更换"><a href="#1-博客域名更换" class="headerlink" title="(1) 博客域名更换"></a>(1) 博客域名更换</h1><blockquote><p> 域名的重定向的方法有 1.域名转发    2.301重定向    3.JS跳转<br> 方法一，域名注册商支持域名转发功能才行！国内的绝大部分域名注册商不支持。<br> 方法二，是Web 服务器给访问老域名的请求返回一个 301 或者 302，然后跳转到新域名上。 如果转发前的域名和转发后的域名访问的都是中国大陆的服务器而且已经备案，可以直接通过域名解析配置 显性URL 301重定向。 由于使用的是 github.com coding.net 的page服务，解析到的不是中国大陆的服务器，这个方法也不可行。<br> 方法三，使用js跳转。具体方法如下。</p></blockquote><h2 id="1-1-index-html"><a href="#1-1-index-html" class="headerlink" title="(1.1) index.html"></a>(1.1) index.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>新域名 https://weikeqin.com<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span> 跳转中，访问新域名站点 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://weikeqin.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span> https://weikeqin.com <span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"index.html"</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"><span class="built_in">window</span>.location.href = <span class="string">"https://weikeqin.com"</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="1-2-404-html"><a href="#1-2-404-html" class="headerlink" title="(1.2) 404.html"></a>(1.2) 404.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/*! purl v2.3.1 | MIT */</span> </span></span><br><span class="line"><span class="javascript">    <span class="comment">/** http://cdn.bootcss.com/purl/2.3.1/purl.min.js */</span></span></span><br><span class="line"><span class="javascript">    (<span class="function"><span class="keyword">function</span> (<span class="params">factory</span>) </span>&#123; <span class="keyword">if</span> (<span class="keyword">typeof</span> define === <span class="string">"function"</span> &amp;&amp; define.amd) &#123; define(factory) &#125; <span class="keyword">else</span> &#123; <span class="built_in">window</span>.purl = factory() &#125; &#125;)(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="keyword">var</span> tag2attr = &#123; <span class="attr">a</span>: <span class="string">"href"</span>, <span class="attr">img</span>: <span class="string">"src"</span>, <span class="attr">form</span>: <span class="string">"action"</span>, <span class="attr">base</span>: <span class="string">"href"</span>, <span class="attr">script</span>: <span class="string">"src"</span>, <span class="attr">iframe</span>: <span class="string">"src"</span>, <span class="attr">link</span>: <span class="string">"href"</span> &#125;, key = [<span class="string">"source"</span>, <span class="string">"protocol"</span>, <span class="string">"authority"</span>, <span class="string">"userInfo"</span>, <span class="string">"user"</span>, <span class="string">"password"</span>, <span class="string">"host"</span>, <span class="string">"port"</span>, <span class="string">"relative"</span>, <span class="string">"path"</span>, <span class="string">"directory"</span>, <span class="string">"file"</span>, <span class="string">"query"</span>, <span class="string">"fragment"</span>], aliases = &#123; <span class="attr">anchor</span>: <span class="string">"fragment"</span> &#125;, parser = &#123; <span class="attr">strict</span>: <span class="regexp">/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/</span>, <span class="attr">loose</span>: <span class="regexp">/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/</span> &#125;, isint = <span class="regexp">/^[0-9]+$/</span>; <span class="function"><span class="keyword">function</span> <span class="title">parseUri</span>(<span class="params">url, strictMode</span>) </span>&#123; <span class="keyword">var</span> str = <span class="built_in">decodeURI</span>(url), res = parser[strictMode || <span class="literal">false</span> ? <span class="string">"strict"</span> : <span class="string">"loose"</span>].exec(str), uri = &#123; <span class="attr">attr</span>: &#123;&#125;, <span class="attr">param</span>: &#123;&#125;, <span class="attr">seg</span>: &#123;&#125; &#125;, i = <span class="number">14</span>; <span class="keyword">while</span> (i--) &#123; uri.attr[key[i]] = res[i] || <span class="string">""</span> &#125; uri.param[<span class="string">"query"</span>] = parseString(uri.attr[<span class="string">"query"</span>]); uri.param[<span class="string">"fragment"</span>] = parseString(uri.attr[<span class="string">"fragment"</span>]); uri.seg[<span class="string">"path"</span>] = uri.attr.path.replace(<span class="regexp">/^\/+|\/+$/g</span>, <span class="string">""</span>).split(<span class="string">"/"</span>); uri.seg[<span class="string">"fragment"</span>] = uri.attr.fragment.replace(<span class="regexp">/^\/+|\/+$/g</span>, <span class="string">""</span>).split(<span class="string">"/"</span>); uri.attr[<span class="string">"base"</span>] = uri.attr.host ? (uri.attr.protocol ? uri.attr.protocol + <span class="string">"://"</span> + uri.attr.host : uri.attr.host) + (uri.attr.port ? <span class="string">":"</span> + uri.attr.port : <span class="string">""</span>) : <span class="string">""</span>; <span class="keyword">return</span> uri &#125; <span class="function"><span class="keyword">function</span> <span class="title">getAttrName</span>(<span class="params">elm</span>) </span>&#123; <span class="keyword">var</span> tn = elm.tagName; <span class="keyword">if</span> (<span class="keyword">typeof</span> tn !== <span class="string">"undefined"</span>) <span class="keyword">return</span> tag2attr[tn.toLowerCase()]; <span class="keyword">return</span> tn &#125; <span class="function"><span class="keyword">function</span> <span class="title">promote</span>(<span class="params">parent, key</span>) </span>&#123; <span class="keyword">if</span> (parent[key].length === <span class="number">0</span>) <span class="keyword">return</span> parent[key] = &#123;&#125;; <span class="keyword">var</span> t = &#123;&#125;; <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> parent[key]) t[i] = parent[key][i]; parent[key] = t; <span class="keyword">return</span> t &#125; <span class="function"><span class="keyword">function</span> <span class="title">parse</span>(<span class="params">parts, parent, key, val</span>) </span>&#123; <span class="keyword">var</span> part = parts.shift(); <span class="keyword">if</span> (!part) &#123; <span class="keyword">if</span> (isArray(parent[key])) &#123; parent[key].push(val) &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"object"</span> == <span class="keyword">typeof</span> parent[key]) &#123; parent[key] = val &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"undefined"</span> == <span class="keyword">typeof</span> parent[key]) &#123; parent[key] = val &#125; <span class="keyword">else</span> &#123; parent[key] = [parent[key], val] &#125; &#125; <span class="keyword">else</span> &#123; <span class="keyword">var</span> obj = parent[key] = parent[key] || []; <span class="keyword">if</span> (<span class="string">"]"</span> == part) &#123; <span class="keyword">if</span> (isArray(obj)) &#123; <span class="keyword">if</span> (<span class="string">""</span> !== val) obj.push(val) &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"object"</span> == <span class="keyword">typeof</span> obj) &#123; obj[keys(obj).length] = val &#125; <span class="keyword">else</span> &#123; obj = parent[key] = [parent[key], val] &#125; &#125; <span class="keyword">else</span> <span class="keyword">if</span> (~part.indexOf(<span class="string">"]"</span>)) &#123; part = part.substr(<span class="number">0</span>, part.length - <span class="number">1</span>); <span class="keyword">if</span> (!isint.test(part) &amp;&amp; isArray(obj)) obj = promote(parent, key); parse(parts, obj, part, val) &#125; <span class="keyword">else</span> &#123; <span class="keyword">if</span> (!isint.test(part) &amp;&amp; isArray(obj)) obj = promote(parent, key); parse(parts, obj, part, val) &#125; &#125; &#125; <span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">parent, key, val</span>) </span>&#123; <span class="keyword">if</span> (~key.indexOf(<span class="string">"]"</span>)) &#123; <span class="keyword">var</span> parts = key.split(<span class="string">"["</span>); parse(parts, parent, <span class="string">"base"</span>, val) &#125; <span class="keyword">else</span> &#123; <span class="keyword">if</span> (!isint.test(key) &amp;&amp; isArray(parent.base)) &#123; <span class="keyword">var</span> t = &#123;&#125;; <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> parent.base) t[k] = parent.base[k]; parent.base = t &#125; <span class="keyword">if</span> (key !== <span class="string">""</span>) &#123; set(parent.base, key, val) &#125; &#125; <span class="keyword">return</span> parent &#125; <span class="function"><span class="keyword">function</span> <span class="title">parseString</span>(<span class="params">str</span>) </span>&#123; <span class="keyword">return</span> reduce(<span class="built_in">String</span>(str).split(<span class="regexp">/&amp;|;/</span>), <span class="function"><span class="keyword">function</span> (<span class="params">ret, pair</span>) </span>&#123; <span class="keyword">try</span> &#123; pair = <span class="built_in">decodeURIComponent</span>(pair.replace(<span class="regexp">/\+/g</span>, <span class="string">" "</span>)) &#125; <span class="keyword">catch</span> (e) &#123; &#125; <span class="keyword">var</span> eql = pair.indexOf(<span class="string">"="</span>), brace = lastBraceInKey(pair), key = pair.substr(<span class="number">0</span>, brace || eql), val = pair.substr(brace || eql, pair.length); val = val.substr(val.indexOf(<span class="string">"="</span>) + <span class="number">1</span>, val.length); <span class="keyword">if</span> (key === <span class="string">""</span>) &#123; key = pair; val = <span class="string">""</span> &#125; <span class="keyword">return</span> merge(ret, key, val) &#125;, &#123; <span class="attr">base</span>: &#123;&#125; &#125;).base &#125; <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">obj, key, val</span>) </span>&#123; <span class="keyword">var</span> v = obj[key]; <span class="keyword">if</span> (<span class="keyword">typeof</span> v === <span class="string">"undefined"</span>) &#123; obj[key] = val &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isArray(v)) &#123; v.push(val) &#125; <span class="keyword">else</span> &#123; obj[key] = [v, val] &#125; &#125; <span class="function"><span class="keyword">function</span> <span class="title">lastBraceInKey</span>(<span class="params">str</span>) </span>&#123; <span class="keyword">var</span> len = str.length, brace, c; <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; ++i) &#123; c = str[i]; <span class="keyword">if</span> (<span class="string">"]"</span> == c) brace = <span class="literal">false</span>; <span class="keyword">if</span> (<span class="string">"["</span> == c) brace = <span class="literal">true</span>; <span class="keyword">if</span> (<span class="string">"="</span> == c &amp;&amp; !brace) <span class="keyword">return</span> i &#125; &#125; <span class="function"><span class="keyword">function</span> <span class="title">reduce</span>(<span class="params">obj, accumulator</span>) </span>&#123; <span class="keyword">var</span> i = <span class="number">0</span>, l = obj.length &gt;&gt; <span class="number">0</span>, curr = <span class="built_in">arguments</span>[<span class="number">2</span>]; <span class="keyword">while</span> (i &lt; l) &#123; <span class="keyword">if</span> (i <span class="keyword">in</span> obj) curr = accumulator.call(<span class="literal">undefined</span>, curr, obj[i], i, obj); ++i &#125; <span class="keyword">return</span> curr &#125; <span class="function"><span class="keyword">function</span> <span class="title">isArray</span>(<span class="params">vArg</span>) </span>&#123; <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(vArg) === <span class="string">"[object Array]"</span> &#125; <span class="function"><span class="keyword">function</span> <span class="title">keys</span>(<span class="params">obj</span>) </span>&#123; <span class="keyword">var</span> key_array = []; <span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> obj) &#123; <span class="keyword">if</span> (obj.hasOwnProperty(prop)) key_array.push(prop) &#125; <span class="keyword">return</span> key_array &#125; <span class="function"><span class="keyword">function</span> <span class="title">purl</span>(<span class="params">url, strictMode</span>) </span>&#123; <span class="keyword">if</span> (<span class="built_in">arguments</span>.length === <span class="number">1</span> &amp;&amp; url === <span class="literal">true</span>) &#123; strictMode = <span class="literal">true</span>; url = <span class="literal">undefined</span> &#125; strictMode = strictMode || <span class="literal">false</span>; url = url || <span class="built_in">window</span>.location.toString(); <span class="keyword">return</span> &#123; <span class="attr">data</span>: parseUri(url, strictMode), <span class="attr">attr</span>: <span class="function"><span class="keyword">function</span> (<span class="params">attr</span>) </span>&#123; attr = aliases[attr] || attr; <span class="keyword">return</span> <span class="keyword">typeof</span> attr !== <span class="string">"undefined"</span> ? <span class="keyword">this</span>.data.attr[attr] : <span class="keyword">this</span>.data.attr &#125;, <span class="attr">param</span>: <span class="function"><span class="keyword">function</span> (<span class="params">param</span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">typeof</span> param !== <span class="string">"undefined"</span> ? <span class="keyword">this</span>.data.param.query[param] : <span class="keyword">this</span>.data.param.query &#125;, <span class="attr">fparam</span>: <span class="function"><span class="keyword">function</span> (<span class="params">param</span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">typeof</span> param !== <span class="string">"undefined"</span> ? <span class="keyword">this</span>.data.param.fragment[param] : <span class="keyword">this</span>.data.param.fragment &#125;, <span class="attr">segment</span>: <span class="function"><span class="keyword">function</span> (<span class="params">seg</span>) </span>&#123; <span class="keyword">if</span> (<span class="keyword">typeof</span> seg === <span class="string">"undefined"</span>) &#123; <span class="keyword">return</span> <span class="keyword">this</span>.data.seg.path &#125; <span class="keyword">else</span> &#123; seg = seg &lt; <span class="number">0</span> ? <span class="keyword">this</span>.data.seg.path.length + seg : seg - <span class="number">1</span>; <span class="keyword">return</span> <span class="keyword">this</span>.data.seg.path[seg] &#125; &#125;, <span class="attr">fsegment</span>: <span class="function"><span class="keyword">function</span> (<span class="params">seg</span>) </span>&#123; <span class="keyword">if</span> (<span class="keyword">typeof</span> seg === <span class="string">"undefined"</span>) &#123; <span class="keyword">return</span> <span class="keyword">this</span>.data.seg.fragment &#125; <span class="keyword">else</span> &#123; seg = seg &lt; <span class="number">0</span> ? <span class="keyword">this</span>.data.seg.fragment.length + seg : seg - <span class="number">1</span>; <span class="keyword">return</span> <span class="keyword">this</span>.data.seg.fragment[seg] &#125; &#125; &#125; &#125; purl.jQuery = <span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123; <span class="keyword">if</span> ($ != <span class="literal">null</span>) &#123; $.fn.url = <span class="function"><span class="keyword">function</span> (<span class="params">strictMode</span>) </span>&#123; <span class="keyword">var</span> url = <span class="string">""</span>; <span class="keyword">if</span> (<span class="keyword">this</span>.length) &#123; url = $(<span class="keyword">this</span>).attr(getAttrName(<span class="keyword">this</span>[<span class="number">0</span>])) || <span class="string">""</span> &#125; <span class="keyword">return</span> purl(url, strictMode) &#125;; $.url = purl &#125; &#125;; purl.jQuery(<span class="built_in">window</span>.jQuery); <span class="keyword">return</span> purl &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">"404.html"</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> url = purl();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'weikeqin.cn'</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'weikeqin.cn'</span>, <span class="string">"weikeqin.com"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"old_url = "</span> + old_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"new_url = "</span> + new_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.replace(new_url);</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'www.weikeqin.cn'</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'www.weikeqin.cn'</span>, <span class="string">"weikeqin.com"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"old_url = "</span> + old_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"new_url = "</span> + new_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.replace(new_url);</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'weikeqin.github.io'</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'weikeqin.github.io/weikeqin.cn.github.io'</span>, <span class="string">"weikeqin.com"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"old_url = "</span> + old_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"new_url = "</span> + new_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.replace(new_url);</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'www.weikeqin.github.io'</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'www.weikeqin.github.io/weikeqin.cn.github.io'</span>, <span class="string">"weikeqin.com"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"old_url = "</span> + old_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"new_url = "</span> + new_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.replace(new_url);</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.href = <span class="string">"http://weikeqin.com"</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br></p><h2 id="1-3-一些思考"><a href="#1-3-一些思考" class="headerlink" title="(1.3) 一些思考"></a>(1.3) 一些思考</h2><blockquote><p> 为什么要分成两个文件 index.html 和 404.html，放一个文件不是更好吗？<br> 其实可以放一个文件里。 但是当脚本有问题的时候或者非正常流程时，分成两个文件会比一个文件更好。<br> 如果脚本有问题，index.html出错的时候(测试的时候遇到了)，有404.html兜底。 (这种情况在开发的时候，或者部署前就可以发现。)<br> 遇到一些域外的情况，404.html文件可以兜底。<br> 分成两个文件是从架构和模块化的角度考虑。</p></blockquote><blockquote><p> js跳转脚本里为什么要加console.log日志<br> 为了排查问题方便 (一般情况下用不到)<br><br></p></blockquote><h1 id="2-具体实施"><a href="#2-具体实施" class="headerlink" title="(2) 具体实施"></a>(2) 具体实施</h1><blockquote><p> 用的是万网的域名，weikeqin.cn和weikeqin.com用的都是coding.net的page服务。(实际更复杂)<br> 修改后，weikeqin.cn会用github.com的pages服务，weikeqin.com会用coding.net的pages服务。<br> 准备重定向脚本，在github pages服务准备好。<br> 修改域名解析，在 <code>域名控制台-&gt;解析设置</code> 里 把weikeqin.cn 解析到coding.net改成github.com </p></blockquote><blockquote><p> 回滚方案，如果有问题，修改域名解析，把 weikeqin.cn域名解析重新修改成coding.net对应的配置即可。</p></blockquote><p>  其实在实施前准备了很多测试，具体步骤忽略。</p><h1 id="3-测试"><a href="#3-测试" class="headerlink" title="(3) 测试"></a>(3) 测试</h1><p>  <a href="http://weikeqin.cn/" target="_blank" rel="noopener">http://weikeqin.cn/</a><br>  <a href="https://weikeqin.cn/" target="_blank" rel="noopener">https://weikeqin.cn/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Navigated to http://weikeqin.cn/</span><br><span class="line">(index):12 index.html</span><br><span class="line">Navigated to https://weikeqin.com/</span><br></pre></td></tr></table></figure><p>  <a href="http://weikeqin.cn/2017/03/16/git-notes/" target="_blank" rel="noopener">http://weikeqin.cn/2017/03/16/git-notes/</a><br>  <a href="https://weikeqin.cn/2017/03/16/git-notes/" target="_blank" rel="noopener">https://weikeqin.cn/2017/03/16/git-notes/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET http://weikeqin.cn/2017/03/16/git-notes/ 404 (Not Found)</span><br><span class="line">/2017/03/16/git-notes/:1 A cookie associated with a cross-site resource at http://hm.baidu.com/ was set without the `SameSite` attribute. A future release of Chrome will only deliver cookies with cross-site requests if they are set with `SameSite=None` and `Secure`. You can review cookies in developer tools under Application&gt;Storage&gt;Cookies and see more details at https://www.chromestatus.com/feature/5088147346030592 and https://www.chromestatus.com/feature/5633521622188032.</span><br><span class="line">/2017/03/16/git-notes/:1 A cookie associated with a cross-site resource at http://baidu.com/ was set without the `SameSite` attribute. A future release of Chrome will only deliver cookies with cross-site requests if they are set with `SameSite=None` and `Secure`. You can review cookies in developer tools under Application&gt;Storage&gt;Cookies and see more details at https://www.chromestatus.com/feature/5088147346030592 and https://www.chromestatus.com/feature/5633521622188032.</span><br><span class="line">Navigated to http://weikeqin.cn/2017/03/16/git-notes/</span><br><span class="line">VM62:7 404.html</span><br><span class="line">VM62:12 old_url = http://weikeqin.cn/2017/03/16/git-notes/</span><br><span class="line">VM62:13 new_url = http://weikeqin.com/2017/03/16/git-notes/</span><br><span class="line">Navigated to http://weikeqin.com/2017/03/16/git-notes/</span><br></pre></td></tr></table></figure><p>  可以看到 weikeqin.cn 重定向到 weikeqin.com 了</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://www.jianshu.com/p/2c31cfb6c9b1" target="_blank" rel="noopener">Github Pages页面重定向到新网址，实现域名跳转</a><br>[2] <a href="https://github.com/HeTianCong/HeTianCong.github.io" target="_blank" rel="noopener">HeTianCong.github.io</a><br>[3] <a href="https://blog.meow.page/2019/04/08/setup-after-changing-my-hexo-blog-domain/" target="_blank" rel="noopener">在更换 hexo 博客的域名后需要做的配置工作</a><br>[4] <a href="https://github.com/weikeqin/weikeqin.cn.github.io" target="_blank" rel="noopener">weikeqin.cn.github.io</a><br>[5] <a href="https://stackoverflow.com/questions/9276817/301-redirect-for-site-hosted-at-github" target="_blank" rel="noopener">301-redirect-for-site-hosted-at-github</a><br>[6] <a href="https://stackoverflow.com/questions/5302663/permanent-redirect-from-github-gh-pages" target="_blank" rel="noopener">Permanent redirect from Github gh-pages</a><br>[7] <a href="https://www.diebaosoft.com/3113.html" target="_blank" rel="noopener">网站域名301重定向的五大别样方法</a><br>[8] <a href="https://help.aliyun.com/knowledge_detail/29725.html?spm=5176.8208715.110.6.6d3a3cdaFZDqKd#h2-url-6" target="_blank" rel="noopener">云解析 DNS &gt; 操作指南 &gt; 解析记录管理 &gt; 添加解析记录 &gt; 添加解析记录 </a><br>[9] <a href="https://help.aliyun.com/knowledge_detail/39834.html" target="_blank" rel="noopener">云解析 DNS &gt; 操作指南 &gt; 解析生效测试方法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 在很长的一段时间里，使用的是多域名，主要有 weikeqin.cn  weikeqin.com，但是两个域名解析到的是同一个博客，想把 weikeqin.cn 的流量全部转到 weikeqin.com，因为有些时候 .cn 不如 .com 域名，在某个特殊的时候感觉特别明显。然后就有了这篇文章。&lt;br&gt; 在具体更换域名前的测试中，发现github.com还是比coding.net好用。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-博客域名更换&quot;&gt;&lt;a href=&quot;#1-博客域名更换&quot; class=&quot;headerlink&quot; title=&quot;(1) 博客域名更换&quot;&gt;&lt;/a&gt;(1) 博客域名更换&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 域名的重定向的方法有 1.域名转发    2.301重定向    3.JS跳转&lt;br&gt; 方法一，域名注册商支持域名转发功能才行！国内的绝大部分域名注册商不支持。&lt;br&gt; 方法二，是Web 服务器给访问老域名的请求返回一个 301 或者 302，然后跳转到新域名上。 如果转发前的域名和转发后的域名访问的都是中国大陆的服务器而且已经备案，可以直接通过域名解析配置 显性URL 301重定向。 由于使用的是 github.com coding.net 的page服务，解析到的不是中国大陆的服务器，这个方法也不可行。&lt;br&gt; 方法三，使用js跳转。具体方法如下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-1-index-html&quot;&gt;&lt;a href=&quot;#1-1-index-html&quot; class=&quot;headerlink&quot; title=&quot;(1.1) index.html&quot;&gt;&lt;/a&gt;(1.1) index.html&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;新域名 https://weikeqin.com&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt; 跳转中，访问新域名站点 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://weikeqin.com&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;_blank&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; https://weikeqin.com &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;index.html&quot;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.href = &lt;span class=&quot;string&quot;&gt;&quot;https://weikeqin.com&quot;&lt;/span&gt;;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="network" scheme="http://weikeqin.com/categories/network/"/>
    
    
      <category term="network" scheme="http://weikeqin.com/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>github搜索</title>
    <link href="http://weikeqin.com/2020/02/23/github-search/"/>
    <id>http://weikeqin.com/2020/02/23/github-search/</id>
    <published>2020-02-23T08:17:57.000Z</published>
    <updated>2020-02-25T07:34:18.215Z</updated>
    
    <content type="html"><![CDATA[<p>  GitHub上搜索代码时，是怎么样操作的呢？是不是也是像普通人一样，直接在搜索框里输入要检索的内容，然后不断在列表里翻页找自己需要的内容？或者是简单筛选下，过滤一下。再或者改变一下列表的排序方式。这就是「全部」了吗？ </p><p>  一般的系统检索功能，都会有一个「高级搜索」的功能。需要在另外的界面里展开，进行二次搜索之类的。 GitHub 有没有类似的呢？</p><p>  答案是「肯定的」。做为一个为万千工程师提供服务的网站，不仅要有，而且还要技术范儿。</p><h1 id="1-github高级搜索"><a href="#1-github高级搜索" class="headerlink" title="(1) github高级搜索"></a>(1) github高级搜索</h1><p>  高级搜索时，特殊字符会进行转码<br>  %20 是 空格<br>  %3A 是 :<br>  %3E 是 &gt; </p><h2 id="1-1-明确搜索仓库标题、仓库描述、README"><a href="#1-1-明确搜索仓库标题、仓库描述、README" class="headerlink" title="(1.1) 明确搜索仓库标题、仓库描述、README"></a>(1.1) 明确搜索仓库标题、仓库描述、README</h2><p>  GitHub 提供了便捷的搜索方式，可以限定只搜索仓库的标题、或者描述、README等。</p><p>  以Spring Cloud 为例，一般一个仓库，大概是这样的</p><p>  红色箭头指的两个地方，分别是仓库的名称和描述。咱们可以直接限定关键字只查特定的地方。</p><p>  比如只想查找仓库名称包含 spring cloud 的仓库，可以使用 in:name 关键词<br>  <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=in%3Aname+spring+cloud&amp;type=" target="_blank" rel="noopener">https://github.com/search?utf8=%E2%9C%93&amp;q=in%3Aname+spring+cloud&amp;type=</a></p><p>  如果想查找描述的内容，可以使用 in:descripton 关键词<br>  <a href="https://github.com/search?q=in%3Adescripton+spring+cloud" target="_blank" rel="noopener">https://github.com/search?q=in%3Adescripton+spring+cloud</a><br>  <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=in%3Adescripton+spring+cloud&amp;type=" target="_blank" rel="noopener">https://github.com/search?utf8=%E2%9C%93&amp;q=in%3Adescripton+spring+cloud&amp;type=</a></p><a id="more"></a><h2 id="1-2-明确搜索-star、fork-数大于多少的"><a href="#1-2-明确搜索-star、fork-数大于多少的" class="headerlink" title="(1.2) 明确搜索 star、fork 数大于多少的"></a>(1.2) 明确搜索 star、fork 数大于多少的</h2><p>  一个项目 star 数的多少，一般代表该项目有受欢迎程度。 </p><p>  要找 star 数大于 3000 的Spring Cloud 仓库:  stars:&gt; 数字 关键字 </p><p>  stars:&gt;3000 spring cloud<br>  stars: &gt; 3000  spring bloud 会搜不到，不要加空格<br>  <a href="https://github.com/search?q=stars%3A%3E3000++spring+cloud" target="_blank" rel="noopener">https://github.com/search?q=stars%3A%3E3000++spring+cloud</a></p><p>  找star数在10到20之间的 spring cloud 仓库:   stars:10..20 关键词<br>  <a href="https://github.com/search?q=stars%3A10..20+spring+cloud" target="_blank" rel="noopener">https://github.com/search?q=stars%3A10..20+spring+cloud</a></p><p>  找fork数在10到20之间的 spring cloud 仓库:   <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=fork%3A+10..20+spring+cloud&amp;type=" target="_blank" rel="noopener">https://github.com/search?utf8=%E2%9C%93&amp;q=fork%3A+10..20+spring+cloud&amp;type=</a></p><h2 id="1-3-明确搜索仓库大小的"><a href="#1-3-明确搜索仓库大小的" class="headerlink" title="(1.3) 明确搜索仓库大小的"></a>(1.3) 明确搜索仓库大小的</h2><p>  比如你只想看个简单的 Demo，不想找特别复杂的且占用磁盘空间较多的，可以在搜索的时候直接限定仓库的 size 。</p><p>  这个数字代表K, 5000代表着5M。</p><h1 id="2-GitHub-可能提高日常效率的10个常用技巧"><a href="#2-GitHub-可能提高日常效率的10个常用技巧" class="headerlink" title="(2) GitHub 可能提高日常效率的10个常用技巧"></a>(2) GitHub 可能提高日常效率的10个常用技巧</h1><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://mp.weixin.qq.com/s/XqP4PBI8yx2Rgnn6aTL7OQ" target="_blank" rel="noopener">GitHub竟然还可以这样玩？涨知识了！</a><br>[2] <a href="https://www.cnblogs.com/iamzhanglei/p/6177961.html" target="_blank" rel="noopener">你必须收藏的Github技巧</a><br>[3] <a href="https://segmentfault.com/a/1190000003830252" target="_blank" rel="noopener">GitHub 可能提高日常效率的10个常用技巧</a><br>[4] <a href="https://mp.weixin.qq.com/s/XboOSKroF3Q7yYWTvx1DnQ" target="_blank" rel="noopener">浏览Github必备的5款神器级别的Chrome插件 </a><br>[5] <a href="https://crxdl.com/" target="_blank" rel="noopener">下载Chrome扩展插件Crx离线安装包</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  GitHub上搜索代码时，是怎么样操作的呢？是不是也是像普通人一样，直接在搜索框里输入要检索的内容，然后不断在列表里翻页找自己需要的内容？或者是简单筛选下，过滤一下。再或者改变一下列表的排序方式。这就是「全部」了吗？ &lt;/p&gt;
&lt;p&gt;  一般的系统检索功能，都会有一个「高级搜索」的功能。需要在另外的界面里展开，进行二次搜索之类的。 GitHub 有没有类似的呢？&lt;/p&gt;
&lt;p&gt;  答案是「肯定的」。做为一个为万千工程师提供服务的网站，不仅要有，而且还要技术范儿。&lt;/p&gt;
&lt;h1 id=&quot;1-github高级搜索&quot;&gt;&lt;a href=&quot;#1-github高级搜索&quot; class=&quot;headerlink&quot; title=&quot;(1) github高级搜索&quot;&gt;&lt;/a&gt;(1) github高级搜索&lt;/h1&gt;&lt;p&gt;  高级搜索时，特殊字符会进行转码&lt;br&gt;  %20 是 空格&lt;br&gt;  %3A 是 :&lt;br&gt;  %3E 是 &amp;gt; &lt;/p&gt;
&lt;h2 id=&quot;1-1-明确搜索仓库标题、仓库描述、README&quot;&gt;&lt;a href=&quot;#1-1-明确搜索仓库标题、仓库描述、README&quot; class=&quot;headerlink&quot; title=&quot;(1.1) 明确搜索仓库标题、仓库描述、README&quot;&gt;&lt;/a&gt;(1.1) 明确搜索仓库标题、仓库描述、README&lt;/h2&gt;&lt;p&gt;  GitHub 提供了便捷的搜索方式，可以限定只搜索仓库的标题、或者描述、README等。&lt;/p&gt;
&lt;p&gt;  以Spring Cloud 为例，一般一个仓库，大概是这样的&lt;/p&gt;
&lt;p&gt;  红色箭头指的两个地方，分别是仓库的名称和描述。咱们可以直接限定关键字只查特定的地方。&lt;/p&gt;
&lt;p&gt;  比如只想查找仓库名称包含 spring cloud 的仓库，可以使用 in:name 关键词&lt;br&gt;  &lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=in%3Aname+spring+cloud&amp;amp;type=&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=in%3Aname+spring+cloud&amp;amp;type=&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  如果想查找描述的内容，可以使用 in:descripton 关键词&lt;br&gt;  &lt;a href=&quot;https://github.com/search?q=in%3Adescripton+spring+cloud&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/search?q=in%3Adescripton+spring+cloud&lt;/a&gt;&lt;br&gt;  &lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=in%3Adescripton+spring+cloud&amp;amp;type=&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=in%3Adescripton+spring+cloud&amp;amp;type=&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tools" scheme="http://weikeqin.com/categories/tools/"/>
    
    
      <category term="tools" scheme="http://weikeqin.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>mysql explain 详解</title>
    <link href="http://weikeqin.com/2020/02/05/mysql-explain/"/>
    <id>http://weikeqin.com/2020/02/05/mysql-explain/</id>
    <published>2020-02-05T02:50:15.000Z</published>
    <updated>2020-02-11T04:17:34.982Z</updated>
    
    <content type="html"><![CDATA[<p>  在使用MySQL时，如果发现查询语句耗时，会进行排查及调优，其中常用的一个方法是用explain查看sql执行计划。</p><h1 id="1-explain示例"><a href="#1-explain示例" class="headerlink" title="(1) explain示例"></a>(1) explain示例</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; explain select * from user ;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | user  | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    5 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; EXPLAIN</span><br><span class="line">    -&gt; SELECT c.id, c.jid, c.tid, l.id</span><br><span class="line">    -&gt; FROM c1 c, l1 l</span><br><span class="line">    -&gt; WHERE c.tid = l.lid</span><br><span class="line">    -&gt; LIMIT 10 ;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+</span></span><br><span class="line">| id | select_type | table | partitions | type  | possible_keys | key          | key_len | ref                   | rows   | filtered | Extra                    |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | l     | NULL       | index | idx_lid       | idx_lid      | 515     | NULL                  | 185827 |   100.00 | Using where; Using index |</span><br><span class="line">|  1 | SIMPLE      | c     | NULL       | ref   | idx_tid       | idx_tid      | 67      | test.l.lid            |      1 |   100.00 | Using index condition    |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="2-explain参数详解"><a href="#2-explain参数详解" class="headerlink" title="(2) explain参数详解"></a>(2) explain参数详解</h1><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">Columns</th><th style="text-align:left">JSON Name</th><th style="text-align:left">Meaning</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">id</td><td style="text-align:left">select_id</td><td style="text-align:left">每个select子句的标识id</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">select_type</td><td style="text-align:left">None</td><td style="text-align:left">select语句的类型</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">table</td><td style="text-align:left">table_name</td><td style="text-align:left">当前表名</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">partitions</td><td style="text-align:left">partitions</td><td style="text-align:left">匹配的分区</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">type</td><td style="text-align:left">access_type</td><td style="text-align:left">当前表内访问方式  join type</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">possible_keys</td><td style="text-align:left">possible_keys</td><td style="text-align:left">可能使用到的索引</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">key</td><td style="text-align:left">key</td><td style="text-align:left">经过优化器评估最终使用的索引</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">key_len</td><td style="text-align:left">key_length</td><td style="text-align:left">使用到的索引长度</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">ref</td><td style="text-align:left">ref</td><td style="text-align:left">引用到的上一个表的列</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">rows</td><td style="text-align:left">rows</td><td style="text-align:left">rows_examined，要得到最终记录索要扫描经过的记录数</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">filtered</td><td style="text-align:left">filtered</td><td style="text-align:left">按表条件过滤行的百分比</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">Extra</td><td style="text-align:left">None</td><td style="text-align:left">额外的信息说明</td></tr></tbody></table><h2 id="2-1-id"><a href="#2-1-id" class="headerlink" title="(2.1) id"></a>(2.1) id</h2><p>  SELECT识别符。这是SELECT查询序列号。这个不重要,查询序号即为sql语句执行的顺序。</p><h2 id="2-2-select-type"><a href="#2-2-select-type" class="headerlink" title="(2.2) select_type"></a>(2.2) select_type</h2><p>  select_type语句类型有 </p><p>select类型，它有以下几种:</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">select_type value</th><th style="text-align:left">JSON name</th><th style="text-align:left">Meaning</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">SIMPLE</td><td style="text-align:left">None</td><td style="text-align:left">简单的SELECT语句（不包括UNION操作或子查询操作）</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">PRIMARY</td><td style="text-align:left">None</td><td style="text-align:left">PRIMARY：查询中最外层的SELECT（如两表做UNION或者存在子查询的外层的表操作为PRIMARY，内层的操作为UNION）</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">UNION</td><td style="text-align:left">None</td><td style="text-align:left">UNION：UNION操作中，查询中处于内层的SELECT（内层的SELECT语句与外层的SELECT语句没有依赖关系）</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">DEPENDENT UNION</td><td style="text-align:left">dependent(true)</td><td style="text-align:left">DEPENDENT UNION：UNION操作中，查询中处于内层的SELECT（内层的SELECT语句与外层的SELECT语句有依赖关系）</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">UNIOIN RESULT</td><td style="text-align:left">union_result</td><td style="text-align:left">UNION RESULT：UNION操作的结果，id值通常为NULL</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">SUBQUERY</td><td style="text-align:left">None</td><td style="text-align:left">SUBQUERY：子查询中首个SELECT（如果有多个子查询存在）</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">DEPENDENT SUBQUERY</td><td style="text-align:left">dependent(true)</td><td style="text-align:left">DEPENDENT SUBQUERY：子查询中首个SELECT，但依赖于外层的表（如果有多个子查询存在）</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">DERIVED</td><td style="text-align:left">None</td><td style="text-align:left">DERIVED：被驱动的SELECT子查询（子查询位于FROM子句）</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">MATERIALIZED</td><td style="text-align:left">materialized_form_subquery</td><td style="text-align:left">MATERIALIZED：被物化的子查询</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">UNCACHEABLE SUBQUERY</td><td style="text-align:left">cacheable(false)</td><td style="text-align:left">UNCACHEABLE SUBQUERY：对于外层的主表，子查询不可被物化，每次都需要计算（耗时操作）</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">UNCACHEABLE UNION</td><td style="text-align:left">cacheable(false)</td><td style="text-align:left">UNCACHEABLE UNION：UNION操作中，内层的不可被物化的子查询（类似于UNCACHEABLE SUBQUERY）</td></tr></tbody></table><h2 id="2-3-table"><a href="#2-3-table" class="headerlink" title="(2.3) table"></a>(2.3) table</h2><p> 当前表名</p><h2 id="2-4-partitions"><a href="#2-4-partitions" class="headerlink" title="(2.4) partitions"></a>(2.4) partitions</h2><p> 匹配的分区</p><h2 id="2-5-type"><a href="#2-5-type" class="headerlink" title="(2.5) type"></a>(2.5) type</h2><p> 当前表内访问方式</p><p>性能由好到坏排序：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">type value</th><th style="text-align:left">Meaning</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">system</td><td style="text-align:left">表中只有一行</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">const</td><td style="text-align:left">单表中最多有一个匹配行，primary key 或者 unique index的检索</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">eq_ref</td><td style="text-align:left">多表连接中被驱动表的连接列上有primary key或者unique index的检索</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">ref</td><td style="text-align:left">与eq_ref类似，但不是使用primary key或者unique index，而是普通索引。也可以是单表上non-unique索引检索</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">fulltext</td><td style="text-align:left">使用FULLTEXT索引执行连接</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">ref_or_null</td><td style="text-align:left">与ref类似，区别在于条件中包含对NULL的查询</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">index_merge</td><td style="text-align:left">索引合并优化，利用一个表里的N个索引查询,key_len表示这些索引键的和最长长度。</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">unique_subquery</td><td style="text-align:left">in的后面是一个查询primary key\unique字段的子查询</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">index_subquery</td><td style="text-align:left">in的后面是一个查询普通index字段的子查询</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">range</td><td style="text-align:left">单表索引中的范围查询,使用索引查询出单个表中的一些行数据。ref列会变为null</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">index</td><td style="text-align:left">等于ALL。它有两种情况：(1)覆盖索引 (2)用索引的顺序做一个全表扫描。</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">all</td><td style="text-align:left">全表扫描</td></tr></tbody></table><h2 id="2-6-possible-keys"><a href="#2-6-possible-keys" class="headerlink" title="(2.6) possible_keys"></a>(2.6) possible_keys</h2><p>  提示使用哪个索引会在该表中找到行</p><h2 id="2-7-key"><a href="#2-7-key" class="headerlink" title="(2.7) key"></a>(2.7) key</h2><p>  MYSQL使用的索引</p><h2 id="2-8-key-len"><a href="#2-8-key-len" class="headerlink" title="(2.8) key_len"></a>(2.8) key_len</h2><p>key_len 说明<br>  key_len: 4 // INT NOT NULL<br>  key_len: 5 // INT DEFAULT NULL<br>  key_len: 30 // CHAR(30) NOT NULL<br>  key_len: 32 // VARCHAR(30) NOT NULL<br>  key_len: 92 // VARCHAR(30) NOT NULL CHARSET=utf8</p><p>key_len大小的计算规则:<br>  a、一般地，key_len 等于索引列类型字节长度，例如int类型为4-bytes，bigint为8-bytes；<br>  b、如果是字符串类型，还需要同时考虑字符集因素，例如：CHAR(30) UTF8则key_len至少是90-bytes；<br>  c、若该列类型定义时允许NULL，其key_len还需要再加 1-bytes；<br>  d、若该列类型为变长类型，例如 VARCHAR（TEXT\BLOB不允许整列创建索引，如果创建部分索引，也被视为动态列类型），其key_len还需要再加 2-bytes;</p><h2 id="2-9-ref"><a href="#2-9-ref" class="headerlink" title="(2.9) ref"></a>(2.9) ref</h2><p>  ref列显示使用哪个列或常数与key一起从表中选择行。</p><h2 id="2-10-rows"><a href="#2-10-rows" class="headerlink" title="(2.10) rows"></a>(2.10) rows</h2><p>  rows_examined，要得到最终记录索要扫描经过的记录数，这个数越小越好。</p><h2 id="2-11-filterrd"><a href="#2-11-filterrd" class="headerlink" title="(2.11)  filterrd"></a>(2.11)  filterrd</h2><p>  按表条件过滤行的百分比</p><h2 id="2-12-Extra"><a href="#2-12-Extra" class="headerlink" title="(2.12) Extra"></a>(2.12) Extra</h2><p>  Extra是对执行计划的额外说明，包含重要信息。</p><p>例如：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">type value</th><th style="text-align:left">Meaning</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">const row not found</td><td style="text-align:left">所要查询的表为空</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">Distinct</td><td style="text-align:left">mysql正在查询distinct值，因此当它每查到一个distinct值之后就会停止当前组的搜索，去查询下一个值</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">Impossible WHERE</td><td style="text-align:left">where条件总为false，表里没有满足条件的记录</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">Impossible WHERE noticed after reading const tables</td><td style="text-align:left">在优化器评估了const表之后，发现where条件均不满足</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">no matching row in const table</td><td style="text-align:left">当前join的表为const表，不能匹配</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">Not exists</td><td style="text-align:left">优化器发现内表记录不可能满足where条件</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">Select tables optimized away</td><td style="text-align:left">在没有group by子句时，对于MyISAM的select count(*)操作，或者当对于min(),max()的操作可以利用索引优化，优化器发现只会返回一行。</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">Using filesort</td><td style="text-align:left">使用filesort来进行order by操作</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">Using index</td><td style="text-align:left">覆盖索引</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">Using index for group-by</td><td style="text-align:left">对于group by列或者distinct列，可以利用索引检索出数据，而不需要去表里查数据、分组、排序、去重等等</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">Using join buffer</td><td style="text-align:left">之前的表连接在nested loop之后放进join buffer，再来和本表进行join。适用于本表的访问type为range，index或all</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">Using sort_union,using union,using intersect</td><td style="text-align:left">index_merge的三种情况</td></tr><tr><td style="text-align:left">13</td><td style="text-align:left">Using temporary</td><td style="text-align:left">使用了临时表来存储中间结果集，适用于group by，distinct，或order by列为不同表的列。</td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">Using where</td><td style="text-align:left">在存储引擎层检索出记录后，在server利用where条件进行过滤，并返回给客户端</td></tr></tbody></table><h1 id="3-Explain妙用"><a href="#3-Explain妙用" class="headerlink" title="(3) Explain妙用"></a>(3) Explain妙用</h1><p>  查询表的大概数据总数。<br>  EXPLAIN SELECT * FROM t1 ;<br>  查询表t1的大概总数。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://dev.mysql.com/doc/refman/5.7/en/explain.html" target="_blank" rel="noopener">EXPLAIN Statement</a><br>[2] <a href="https://dev.mysql.com/doc/refman/5.7/en/explain-output.html" target="_blank" rel="noopener">explain-output</a><br>[3] <a href="https://blog.csdn.net/zhuxineli/article/details/14455029" target="_blank" rel="noopener">MYSQL explain详解</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  在使用MySQL时，如果发现查询语句耗时，会进行排查及调优，其中常用的一个方法是用explain查看sql执行计划。&lt;/p&gt;
&lt;h1 id=&quot;1-explain示例&quot;&gt;&lt;a href=&quot;#1-explain示例&quot; class=&quot;headerlink&quot; title=&quot;(1) explain示例&quot;&gt;&lt;/a&gt;(1) explain示例&lt;/h1&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; explain select * from user ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  1 | SIMPLE      | user  | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    5 |   100.00 | NULL  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;warning&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0.03&lt;/span&gt; sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; EXPLAIN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -&amp;gt; SELECT c.id, c.jid, c.tid, l.id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -&amp;gt; FROM c1 c, l1 l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -&amp;gt; WHERE c.tid = l.lid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -&amp;gt; LIMIT 10 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| id | select_type | table | partitions | type  | possible_keys | key          | key_len | ref                   | rows   | filtered | Extra                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  1 | SIMPLE      | l     | NULL       | index | idx_lid       | idx_lid      | 515     | NULL                  | 185827 |   100.00 | Using where; Using index |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  1 | SIMPLE      | c     | NULL       | ref   | idx_tid       | idx_tid      | 67      | test.l.lid            |      1 |   100.00 | Using index condition    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;warning&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://weikeqin.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://weikeqin.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Java内存模型</title>
    <link href="http://weikeqin.com/2020/02/03/java-mermory-model/"/>
    <id>http://weikeqin.com/2020/02/03/java-mermory-model/</id>
    <published>2020-02-03T02:34:22.000Z</published>
    <updated>2020-02-11T04:06:42.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内存模型"><a href="#内存模型" class="headerlink" title="内存模型"></a>内存模型</h1><p>  在多核系统中，处理器一般有一层或者多层的缓存，这些的缓存通过加速数据访问（因为数据距离处理器更近）和降低共享内存在总线上的通讯（因为本地缓存能够满足许多内存操作）来提高CPU性能。缓存能够大大提升性能，但是它们也带来了许多挑战。例如，当两个CPU同时检查相同的内存地址时会发生什么？在什么样的条件下它们会看到相同的值？</p><p>  在处理器层面上，内存模型定义了一个充要条件，“让当前的处理器可以看到其他处理器写入到内存的数据”以及“其他处理器可以看到当前处理器写入到内存的数据”。有些处理器有很强的内存模型(strong memory model)，能够让所有的处理器在任何时候任何指定的内存地址上都可以看到完全相同的值。而另外一些处理器则有较弱的内存模型（weaker memory model），在这种处理器中，必须使用内存屏障（一种特殊的指令）来刷新本地处理器缓存并使本地处理器缓存无效，目的是为了让当前处理器能够看到其他处理器的写操作或者让其他处理器能看到当前处理器的写操作。这些内存屏障通常在lock和unlock操作的时候完成。内存屏障在高级语言中对程序员是不可见的。</p><a id="more"></a><h1 id="Java内存模型"><a href="#Java内存模型" class="headerlink" title="Java内存模型"></a>Java内存模型</h1><p>  Java 内存模型规范了 JVM 如何提供按需禁用缓存和编译优化的方法。具体来说，这些方法包括 volatile、synchronized 和 final 三个关键字，以及六项 Happens-Before 规则。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] 《深入理解Java虚拟机》 周志明<br>[2] <a href="https://time.geekbang.org/column/article/84017" target="_blank" rel="noopener">02 | Java内存模型：看Java如何解决可见性和有序性问题</a><br>[3] <a href="http://ifeve.com/jmm-faq/" target="_blank" rel="noopener">Java内存模型FAQ</a><br>[4] <a href="http://www.cs.umd.edu/~pugh/java/memoryModel/jsr-133-faq.html" target="_blank" rel="noopener">jsr-133-faq.html</a><br>[5] <a href="https://www.cs.umd.edu/~pugh/java/memoryModel/jsr133.pdf" target="_blank" rel="noopener">jsr133.pdf</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;内存模型&quot;&gt;&lt;a href=&quot;#内存模型&quot; class=&quot;headerlink&quot; title=&quot;内存模型&quot;&gt;&lt;/a&gt;内存模型&lt;/h1&gt;&lt;p&gt;  在多核系统中，处理器一般有一层或者多层的缓存，这些的缓存通过加速数据访问（因为数据距离处理器更近）和降低共享内存在总线上的通讯（因为本地缓存能够满足许多内存操作）来提高CPU性能。缓存能够大大提升性能，但是它们也带来了许多挑战。例如，当两个CPU同时检查相同的内存地址时会发生什么？在什么样的条件下它们会看到相同的值？&lt;/p&gt;
&lt;p&gt;  在处理器层面上，内存模型定义了一个充要条件，“让当前的处理器可以看到其他处理器写入到内存的数据”以及“其他处理器可以看到当前处理器写入到内存的数据”。有些处理器有很强的内存模型(strong memory model)，能够让所有的处理器在任何时候任何指定的内存地址上都可以看到完全相同的值。而另外一些处理器则有较弱的内存模型（weaker memory model），在这种处理器中，必须使用内存屏障（一种特殊的指令）来刷新本地处理器缓存并使本地处理器缓存无效，目的是为了让当前处理器能够看到其他处理器的写操作或者让其他处理器能看到当前处理器的写操作。这些内存屏障通常在lock和unlock操作的时候完成。内存屏障在高级语言中对程序员是不可见的。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://weikeqin.com/categories/java/"/>
    
    
      <category term="java" scheme="http://weikeqin.com/tags/java/"/>
    
      <category term="concurrent" scheme="http://weikeqin.com/tags/concurrent/"/>
    
  </entry>
  
  <entry>
    <title>java并发编程</title>
    <link href="http://weikeqin.com/2020/02/02/java-concurrent-programming/"/>
    <id>http://weikeqin.com/2020/02/02/java-concurrent-programming/</id>
    <published>2020-02-02T14:07:56.000Z</published>
    <updated>2020-02-11T04:06:29.194Z</updated>
    
    <content type="html"><![CDATA[<p>  并发编程最早的应用领域就是操作系统的实现。</p><p>  随着硬件的发展，互联网系统并发量轻松过百万，传统的中间件和数据库已经不能满足需求，成为瓶颈所在。</p><p>  Java 里 synchronized、wait()/notify() 相关的知识很琐碎，看懂难，会用更难。但实际上 synchronized、wait()、notify() 不过是操作系统领域里管程模型的一种实现而已，Java SDK 并发包里的条件变量 Condition 也是管程里的概念，synchronized、wait()/notify()、条件变量这些知识如果单独理解，自然是管中窥豹。但是如果站在管程这个理论模型的高度，你就会发现这些知识原来这么简单，同时用起来也就得心应手了。管程作为一种解决并发问题的模型，是继信号量模型之后的一项重大创新，它与信号量在逻辑上是等价的（可以用管程实现信号量，也可以用信号量实现管程），但是相比之下管程更易用。而且，很多编程语言都支持管程，搞懂管程，对学习其他很多语言的并发编程有很大帮助。然而，很多人急于学习 Java 并发编程技术，却忽略了技术背后的理论和模型，而理论和模型却往往比具体的技术更为重要。</p><a id="more"></a><p>  Java SDK 并发包乃是并发大师 Doug Lea 出品，堪称经典，它内部一定是有章可循的。</p><p>  并发编程可以总结为三个核心问题：分工、同步、互斥。</p><p>  分工指的是如何高效地拆解任务并分配给线程，而同步指的是线程之间如何协作，互斥则是保证同一时刻只允许一个线程访问共享资源。Java SDK 并发包很大部分内容都是按照这三个维度组织的，例如 Fork/Join 框架就是一种分工模式，CountDownLatch 就是一种典型的同步方式，而可重入锁则是一种互斥手段。</p><p>  当把并发编程核心的问题搞清楚，再回过头来看 Java SDK 并发包，你会感觉豁然开朗，它不过是针对并发问题开发出来的工具而已，此时的 SDK 并发包可以任你“盘”了。</p><p>  并发编程涉及操作系统、CPU、内存等等多方面的知识。</p><p>  问题背后的本质、问题的起源，同时站在理论、模型的角度讲解 Java 并发，让你的知识更成体系，融会贯通。</p><p>  要理解可见性，就需要了解一些 CPU 和缓存的知识；要理解原子性，就需要理解一些操作系统的知识；很多无锁算法的实现往往也需要理解 CPU 缓存。</p><p>可见性：一个线程对共享变量的修改，另外一个线程能够立刻看到。<br>  CPU缓存、内存 数据不一致导致。<br>原子性：一个或者多个操作在 CPU 执行的过程中不被中断的特性。<br>  线程切换导致。<br>有序性：程序按照代码的先后顺序执行。<br>  重排序导致。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[0] <a href="https://time.geekbang.org/column/article/83087" target="_blank" rel="noopener">为什么需要学习并发编程</a><br>[0] <a href="https://time.geekbang.org/column/article/83267" target="_blank" rel="noopener">学习攻略 | 如何才能学好并发编程？</a></p><p>[1] <a href="https://time.geekbang.org/column/article/83682" target="_blank" rel="noopener">01 | 可见性、原子性和有序性问题：并发编程Bug的源头</a><br>[2] <a href="https://time.geekbang.org/column/article/84017" target="_blank" rel="noopener">02 | Java内存模型：看Java如何解决可见性和有序性问题</a><br>[3] <a href="https://time.geekbang.org/column/article/84344" target="_blank" rel="noopener">03 | 互斥锁（上）：解决原子性问题</a><br>[4] <a href="https://time.geekbang.org/column/article/84601" target="_blank" rel="noopener">04 | 互斥锁（下）：如何用一把锁保护多个资源？</a><br>[5] <a href="https://time.geekbang.org/column/article/85001" target="_blank" rel="noopener">05 | 一不小心就死锁了，怎么办？</a><br>[6] <a href="https://time.geekbang.org/column/article/85241" target="_blank" rel="noopener">06 | 用“等待-通知”机制优化循环等待</a><br>[7] <a href="https://time.geekbang.org/column/article/85702" target="_blank" rel="noopener">07 | 安全性、活跃性以及性能问题</a><br>[8] <a href="https://time.geekbang.org/column/article/86089" target="_blank" rel="noopener">08 | 管程：并发编程的万能钥匙</a><br>[9] <a href="https://time.geekbang.org/column/article/86366" target="_blank" rel="noopener">09 | Java线程（上）：Java线程的生命周期</a><br>[10] <a href="https://time.geekbang.org/column/article/86666" target="_blank" rel="noopener">10 | Java线程（中）：创建多少线程才是合适的？</a><br>[11] <a href="https://time.geekbang.org/column/article/86695" target="_blank" rel="noopener">11 | Java线程（下）：为什么局部变量是线程安全的？</a><br>[] <a href></a><br>[] <a href></a><br>[] <a href></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  并发编程最早的应用领域就是操作系统的实现。&lt;/p&gt;
&lt;p&gt;  随着硬件的发展，互联网系统并发量轻松过百万，传统的中间件和数据库已经不能满足需求，成为瓶颈所在。&lt;/p&gt;
&lt;p&gt;  Java 里 synchronized、wait()/notify() 相关的知识很琐碎，看懂难，会用更难。但实际上 synchronized、wait()、notify() 不过是操作系统领域里管程模型的一种实现而已，Java SDK 并发包里的条件变量 Condition 也是管程里的概念，synchronized、wait()/notify()、条件变量这些知识如果单独理解，自然是管中窥豹。但是如果站在管程这个理论模型的高度，你就会发现这些知识原来这么简单，同时用起来也就得心应手了。管程作为一种解决并发问题的模型，是继信号量模型之后的一项重大创新，它与信号量在逻辑上是等价的（可以用管程实现信号量，也可以用信号量实现管程），但是相比之下管程更易用。而且，很多编程语言都支持管程，搞懂管程，对学习其他很多语言的并发编程有很大帮助。然而，很多人急于学习 Java 并发编程技术，却忽略了技术背后的理论和模型，而理论和模型却往往比具体的技术更为重要。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://weikeqin.com/categories/java/"/>
    
    
      <category term="java" scheme="http://weikeqin.com/tags/java/"/>
    
      <category term="concurrent" scheme="http://weikeqin.com/tags/concurrent/"/>
    
  </entry>
  
  <entry>
    <title>新冠形病毒疫情传染数据模拟</title>
    <link href="http://weikeqin.com/2020/02/02/novel-coronavirus-pneumonia-infection-data-simulation/"/>
    <id>http://weikeqin.com/2020/02/02/novel-coronavirus-pneumonia-infection-data-simulation/</id>
    <published>2020-02-02T07:42:33.000Z</published>
    <updated>2020-02-17T08:09:43.687Z</updated>
    
    <content type="html"><![CDATA[<p>  新冠形病毒(Novel Conronavirus Pneumonia)疫情数据模拟。</p><p>  该模拟参考网上公开数据，模拟(数据可能不准确)只是为了让大家心里有个数，不要出门或尽量少出门。<br>  由于建模使用数据误差较大，结果仅供参考。</p><p>  需要数据 </p><ol><li>全国人口统计数据</li><li>行政区划分数据</li><li>人口流动数据</li><li>全国各小区数据</li><li>高考各大高校录取数据</li><li><p>疫情数据 ( 卫健委公布的各省市确诊人数、 同行数据 )</p><p>使模型更加准确所需数据</p></li><li>通信运营商数据  (从2019.12.01~2020.02.16 用于通过手机定位)<br>中国联通已经开始行动了，发送 cxmyd#身份证后四位 到 10010 可查询近14日内到访的省市信息(驻留超过4小时)，公益服务。</li><li><p>确诊人数经纬度坐标数据  (用于预防)</p><p>使模型更加准确需要优化的点：</p></li><li>数据层面<br>人口数据更详细，具体到 城市具体到街道、小区，城镇具体到 村 甚至 小组。<br>人口流动数据更详细， @通信运营商@中国电信@中国移动@中国联通@今日头条@美团@阿里巴巴@京东</li><li>建模层面<br>数据统计需要耗费大量人力物力，不可能做到100%<br>在当前数据的情况下，需要部分数据缺失，部分数据延迟<br>根据 概率论和数理统计 以及 离散数学 去估计、模拟可能的情况。         </li></ol><a id="more"></a><h1 id="1-数据准备"><a href="#1-数据准备" class="headerlink" title="(1) 数据准备"></a>(1) 数据准备</h1><ol><li>全国人口统计数据</li><li>行政区划分数据</li><li>人口流动数据</li><li>全国各小区数据<br>高考各大高校录取数据</li><li>卫健委每天确诊数据</li><li><p>确诊数据 + 疑似数据</p><p>使模型更加准确所需数据</p></li><li>通信运营商数据  (从2019.12.01~2020.02.16 用于通过手机定位)</li><li>确诊人数经纬度坐标数据  (用于预防)</li></ol><h2 id="1-1-国家统计局-人口普查数据"><a href="#1-1-国家统计局-人口普查数据" class="headerlink" title="(1.1) 国家统计局-人口普查数据"></a>(1.1) 国家统计局-人口普查数据</h2><p> <a href="http://www.gov.cn/shuju/2017sjcs/sjxqpage.htm" target="_blank" rel="noopener">中华人民共和国中央人民政府-数据-数据详情-总人口</a><br> <a href="http://spcx.www.gov.cn/ZFW-AccessPlatform/gov/np/export.do?selectLegend=%25E5%25B9%25B4%25E6%259C%25AB%25E4%25BA%25BA%25E5%258F%25A3%25EF%25BC%2588%25E4%25B8%2587%25E4%25BA%25BA%25EF%25BC%2589&amp;startYear=2002&amp;endYear=2018" target="_blank" rel="noopener">总人口数据下载</a></p><p> <a href="http://www.stats.gov.cn/tjsj/pcsj/" target="_blank" rel="noopener">国家统计局-普查数据</a><br> <a href="http://www.stats.gov.cn/tjsj/pcsj/rkpc/6rp/indexce.htm" target="_blank" rel="noopener">2010年第6次人口普查数据</a></p><p> <a href="http://www.stats.gov.cn/tjsj/pcsj/rkpc/6rp/lefte.htm" target="_blank" rel="noopener">第6次人口普查数据 索引</a></p><p> 对应下载文件  <a href="http://www.stats.gov.cn/tjsj/pcsj/rkpc/6rp/excel/A0101a.xls" target="_blank" rel="noopener">http://www.stats.gov.cn/tjsj/pcsj/rkpc/6rp/excel/A0101a.xls</a></p><p> 各县市人口通过百度百科获取，结果基本准确。数据会有一些偏差。<br> 村镇人口通过百度百科获取，结果不太准确</p><h3 id="1-1-1-各年全国总人口"><a href="#1-1-1-各年全国总人口" class="headerlink" title="(1.1.1) 各年全国总人口"></a>(1.1.1) 各年全国总人口</h3><table><thead><tr><th>序号</th><th>统计时间</th><th>年末人口（万人）</th></tr></thead><tbody><tr><td>17</td><td>2018</td><td>139538</td></tr><tr><td>16</td><td>2017</td><td>139008</td></tr><tr><td>15</td><td>2016</td><td>138271</td></tr><tr><td>14</td><td>2015</td><td>137462</td></tr><tr><td>13</td><td>2014</td><td>136782</td></tr><tr><td>12</td><td>2013</td><td>136072</td></tr><tr><td>11</td><td>2012</td><td>135404</td></tr><tr><td>10</td><td>2011</td><td>134735</td></tr><tr><td>9</td><td>2010</td><td>134091</td></tr><tr><td>8</td><td>2009</td><td>133450</td></tr><tr><td>7</td><td>2008</td><td>132802</td></tr><tr><td>6</td><td>2007</td><td>132129</td></tr><tr><td>5</td><td>2006</td><td>131448</td></tr><tr><td>4</td><td>2005</td><td>130756</td></tr><tr><td>3</td><td>2004</td><td>129988</td></tr><tr><td>2</td><td>2003</td><td>129227</td></tr><tr><td>1</td><td>2002</td><td>128453</td></tr></tbody></table><h3 id="1-1-2-全国总人口详细"><a href="#1-1-2-全国总人口详细" class="headerlink" title="(1.1.2) 全国总人口详细"></a>(1.1.2) 全国总人口详细</h3><table><thead><tr><th>地区</th><th>户数 合计</th><th>户数  家庭户</th><th>户数   集体户</th><th>合计</th><th>(合计)男</th><th>(合计)女</th><th>性别比(女=100)</th><th>(家庭户)小计</th><th>(家庭户) 男</th><th>(家庭户)女</th><th>(家庭户) 性别比  (女=100)</th><th>(集体户)小计</th><th>(集体户)男</th><th>(集体户)女</th><th>(集体户) 性别比 (女=100)</th><th>平均家庭  户规模 （人/户）</th></tr></thead><tbody><tr><td>全    国</td><td>417722698</td><td>401934196</td><td>15788502</td><td>1332810869</td><td>682329104</td><td>650481765</td><td>104.90</td><td>1239981250</td><td>627410399</td><td>612570851</td><td>102.42</td><td>92829619</td><td>54918705</td><td>37910914</td><td>144.86</td><td>3.09</td></tr><tr><td>北    京</td><td>7355291</td><td>6680552</td><td>674739</td><td>19612368</td><td>10126430</td><td>9485938</td><td>106.75</td><td>16389723</td><td>8173161</td><td>8216562</td><td>99.47</td><td>3222645</td><td>1953269</td><td>1269376</td><td>153.88</td><td>2.45</td></tr><tr><td>天    津</td><td>3963604</td><td>3661992</td><td>301612</td><td>12938693</td><td>6907091</td><td>6031602</td><td>114.52</td><td>10262186</td><td>5129604</td><td>5132582</td><td>99.94</td><td>2676507</td><td>1777487</td><td>899020</td><td>197.71</td><td>2.80</td></tr><tr><td>河    北</td><td>20813492</td><td>20395116</td><td>418376</td><td>71854210</td><td>36430286</td><td>35423924</td><td>102.84</td><td>68538709</td><td>34552649</td><td>33986060</td><td>101.67</td><td>3315501</td><td>1877637</td><td>1437864</td><td>130.59</td><td>3.36</td></tr><tr><td>山    西</td><td>10654162</td><td>10330207</td><td>323955</td><td>35712101</td><td>18338760</td><td>17373341</td><td>105.56</td><td>33484131</td><td>16988087</td><td>16496044</td><td>102.98</td><td>2227970</td><td>1350673</td><td>877297</td><td>153.96</td><td>3.24</td></tr><tr><td>内 蒙 古</td><td>8470472</td><td>8205498</td><td>264974</td><td>24706291</td><td>12838243</td><td>11868048</td><td>108.17</td><td>23071690</td><td>11725291</td><td>11346399</td><td>103.34</td><td>1634601</td><td>1112952</td><td>521649</td><td>213.35</td><td>2.81</td></tr><tr><td>辽    宁</td><td>15334912</td><td>14994046</td><td>340866</td><td>43746323</td><td>22147745</td><td>21598578</td><td>102.54</td><td>41755874</td><td>20956756</td><td>20799118</td><td>100.76</td><td>1990449</td><td>1190989</td><td>799460</td><td>148.97</td><td>2.78</td></tr><tr><td>吉    林</td><td>9162183</td><td>8998492</td><td>163691</td><td>27452815</td><td>13907218</td><td>13545597</td><td>102.67</td><td>26457769</td><td>13358390</td><td>13099379</td><td>101.98</td><td>995046</td><td>548828</td><td>446218</td><td>123.00</td><td>2.94</td></tr><tr><td>黑 龙 江</td><td>13192935</td><td>13000088</td><td>192847</td><td>38313991</td><td>19426106</td><td>18887885</td><td>102.85</td><td>36884039</td><td>18603181</td><td>18280858</td><td>101.76</td><td>1429952</td><td>822925</td><td>607027</td><td>135.57</td><td>2.84</td></tr><tr><td>上    海</td><td>8893483</td><td>8253257</td><td>640226</td><td>23019196</td><td>11854916</td><td>11164280</td><td>106.19</td><td>20593430</td><td>10318168</td><td>10275262</td><td>100.42</td><td>2425766</td><td>1536748</td><td>889018</td><td>172.86</td><td>2.50</td></tr><tr><td>江    苏</td><td>25635291</td><td>24381782</td><td>1253509</td><td>78660941</td><td>39626707</td><td>39034234</td><td>101.52</td><td>71685839</td><td>35542124</td><td>36143715</td><td>98.34</td><td>6975102</td><td>4084583</td><td>2890519</td><td>141.31</td><td>2.94</td></tr><tr><td>浙    江</td><td>20060115</td><td>18854021</td><td>1206094</td><td>54426891</td><td>27965641</td><td>26461250</td><td>105.69</td><td>49425543</td><td>25037320</td><td>24388223</td><td>102.66</td><td>5001348</td><td>2928321</td><td>2073027</td><td>141.26</td><td>2.62</td></tr><tr><td>安    徽</td><td>19322432</td><td>18861956</td><td>460476</td><td>59500468</td><td>30245513</td><td>29254955</td><td>103.39</td><td>56493891</td><td>28462853</td><td>28031038</td><td>101.54</td><td>3006577</td><td>1782660</td><td>1223917</td><td>145.65</td><td>3.00</td></tr><tr><td>福    建</td><td>11971873</td><td>11206317</td><td>765556</td><td>36894217</td><td>18981054</td><td>17913163</td><td>105.96</td><td>33397663</td><td>16901083</td><td>16496580</td><td>102.45</td><td>3496554</td><td>2079971</td><td>1416583</td><td>146.83</td><td>2.98</td></tr><tr><td>江    西</td><td>11847841</td><td>11542527</td><td>305314</td><td>44567797</td><td>23003521</td><td>21564276</td><td>106.67</td><td>42181417</td><td>21600070</td><td>20581347</td><td>104.95</td><td>2386380</td><td>1403451</td><td>982929</td><td>142.78</td><td>3.65</td></tr><tr><td>山    东</td><td>30794664</td><td>30105454</td><td>689210</td><td>95792719</td><td>48446944</td><td>47345775</td><td>102.33</td><td>89855501</td><td>45023357</td><td>44832144</td><td>100.43</td><td>5937218</td><td>3423587</td><td>2513631</td><td>136.20</td><td>2.98</td></tr><tr><td>河    南</td><td>26404973</td><td>25928729</td><td>476244</td><td>94029939</td><td>47493063</td><td>46536876</td><td>102.05</td><td>90028072</td><td>45262137</td><td>44765935</td><td>101.11</td><td>4001867</td><td>2230926</td><td>1770941</td><td>125.97</td><td>3.47</td></tr><tr><td>湖    北</td><td>17253385</td><td>16695121</td><td>558264</td><td>57237727</td><td>29391247</td><td>27846480</td><td>105.55</td><td>52745625</td><td>26826301</td><td>25919324</td><td>103.50</td><td>4492102</td><td>2564946</td><td>1927156</td><td>133.09</td><td>3.16</td></tr><tr><td>湖    南</td><td>19029894</td><td>18625710</td><td>404184</td><td>65700762</td><td>33776459</td><td>31924303</td><td>105.80</td><td>61911446</td><td>31611459</td><td>30299987</td><td>104.33</td><td>3789316</td><td>2165000</td><td>1624316</td><td>133.29</td><td>3.32</td></tr><tr><td>广    东</td><td>32222752</td><td>28630609</td><td>3592143</td><td>104320459</td><td>54400538</td><td>49919921</td><td>108.98</td><td>88979305</td><td>45465958</td><td>43513347</td><td>104.49</td><td>15341154</td><td>8934580</td><td>6406574</td><td>139.46</td><td>3.11</td></tr><tr><td>广    西</td><td>13467663</td><td>13151404</td><td>316259</td><td>46023761</td><td>23924704</td><td>22099057</td><td>108.26</td><td>43970320</td><td>22733969</td><td>21236351</td><td>107.05</td><td>2053441</td><td>1190735</td><td>862706</td><td>138.02</td><td>3.34</td></tr><tr><td>海    南</td><td>2451819</td><td>2331149</td><td>120670</td><td>8671485</td><td>4592283</td><td>4079202</td><td>112.58</td><td>8060519</td><td>4231490</td><td>3829029</td><td>110.51</td><td>610966</td><td>360793</td><td>250173</td><td>144.22</td><td>3.46</td></tr><tr><td>重    庆</td><td>10272559</td><td>10000965</td><td>271594</td><td>28846170</td><td>14608870</td><td>14237300</td><td>102.61</td><td>26994017</td><td>13542424</td><td>13451593</td><td>100.68</td><td>1852153</td><td>1066446</td><td>785707</td><td>135.73</td><td>2.70</td></tr><tr><td>四    川</td><td>26383458</td><td>25794161</td><td>589297</td><td>80417528</td><td>40827834</td><td>39589694</td><td>103.13</td><td>76207174</td><td>38380622</td><td>37826552</td><td>101.46</td><td>4210354</td><td>2447212</td><td>1763142</td><td>138.80</td><td>2.95</td></tr><tr><td>贵    州</td><td>10745630</td><td>10558461</td><td>187169</td><td>34748556</td><td>17905471</td><td>16843085</td><td>106.31</td><td>33571308</td><td>17153547</td><td>16417761</td><td>104.48</td><td>1177248</td><td>751924</td><td>425324</td><td>176.79</td><td>3.18</td></tr><tr><td>云    南</td><td>12695396</td><td>12339961</td><td>355435</td><td>45966766</td><td>23856696</td><td>22110070</td><td>107.90</td><td>43626674</td><td>22391253</td><td>21235421</td><td>105.44</td><td>2340092</td><td>1465443</td><td>874649</td><td>167.55</td><td>3.54</td></tr><tr><td>西    藏</td><td>689521</td><td>670838</td><td>18683</td><td>3002165</td><td>1542652</td><td>1459513</td><td>105.70</td><td>2837769</td><td>1429541</td><td>1408228</td><td>101.51</td><td>164396</td><td>113111</td><td>51285</td><td>220.55</td><td>4.23</td></tr><tr><td>陕    西</td><td>11084516</td><td>10718563</td><td>365953</td><td>37327379</td><td>19287575</td><td>18039804</td><td>106.92</td><td>34462115</td><td>17556257</td><td>16905858</td><td>103.85</td><td>2865264</td><td>1731318</td><td>1133946</td><td>152.68</td><td>3.22</td></tr><tr><td>甘    肃</td><td>7113833</td><td>6900369</td><td>213464</td><td>25575263</td><td>13064193</td><td>12511070</td><td>104.42</td><td>24052594</td><td>12141360</td><td>11911234</td><td>101.93</td><td>1522669</td><td>922833</td><td>599836</td><td>153.85</td><td>3.49</td></tr><tr><td>青    海</td><td>1586635</td><td>1529039</td><td>57596</td><td>5626723</td><td>2913793</td><td>2712930</td><td>107.40</td><td>5284525</td><td>2675766</td><td>2608759</td><td>102.57</td><td>342198</td><td>238027</td><td>104171</td><td>228.50</td><td>3.46</td></tr><tr><td>宁    夏</td><td>1945064</td><td>1882205</td><td>62859</td><td>6301350</td><td>3227404</td><td>3073946</td><td>104.99</td><td>5970133</td><td>3015722</td><td>2954411</td><td>102.08</td><td>331217</td><td>211682</td><td>119535</td><td>177.09</td><td>3.17</td></tr><tr><td>新    疆</td><td>6902850</td><td>6705607</td><td>197243</td><td>21815815</td><td>11270147</td><td>10545668</td><td>106.87</td><td>20802249</td><td>10620499</td><td>10181750</td><td>104.31</td><td>1013566</td><td>649648</td><td>363918</td><td>178.51</td><td>3.10</td></tr></tbody></table><h2 id="1-2-民政局-行政区划数据"><a href="#1-2-民政局-行政区划数据" class="headerlink" title="(1.2) 民政局-行政区划数据"></a>(1.2) 民政局-行政区划数据</h2><p>民政部、国家统计局：</p><p>  <a href="http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2018/index.html" target="_blank" rel="noopener">国家统计局-2018年统计用区划代码和城乡划分代码(截止2018年10月31日)</a></p><p>  <a href="http://www.mca.gov.cn/article/sj/xzqh/2019/" target="_blank" rel="noopener">中华人民共和国民政部-中华人民共和国行政区划代码</a><br>  <a href="http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/" target="_blank" rel="noopener">中华人民共和国国家统计局-统计用区划和城乡划分代码</a><br>  <a href="http://www.stats.gov.cn/tjsj/tjbz/200911/t20091125_8667.html" target="_blank" rel="noopener">中华人民共和国国家统计局-统计用区划代码和城乡划分代码编制规则</a></p><p>  <a href="http://www.mca.gov.cn/article/sj/xzqh/1980/201903/201903011447.html" target="_blank" rel="noopener">2018年12月中华人民共和国县以上行政区划代码</a><br>  <a href="http://www.mca.gov.cn/article/sj/xzqh/2019/201912/20191200022455.shtml" target="_blank" rel="noopener">2019年11月中华人民共和国县以上行政区划代码</a></p><h2 id="1-3-人口流动数据"><a href="#1-3-人口流动数据" class="headerlink" title="(1.3) 人口流动数据"></a>(1.3) 人口流动数据</h2><p>  假设流动人口 ≈ 春运期间 飞机 + 火车(高铁) + 汽车 + 摩托车 总和 </p><p>  <a href="http://www.umetrip.com/mskyweb/main/index.html?hrefParam=tk" target="_blank" rel="noopener">机票-航旅纵横</a><br>  <a href="https://flights.ctrip.com/" target="_blank" rel="noopener">机票-携程</a><br>  <a href="https://www.12306.cn/index/" target="_blank" rel="noopener">火车票</a><br>  <a href="https://bus.ctrip.com/" target="_blank" rel="noopener">汽车票</a></p><h2 id="1-4-全国各小区数据"><a href="#1-4-全国各小区数据" class="headerlink" title="(1.4) 全国各小区数据"></a>(1.4) 全国各小区数据</h2><p>  小区 + 村(屯)</p><p>  <a href="http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2018/index.html" target="_blank" rel="noopener">国家统计局-2018年统计用区划代码和城乡划分代码(截止2018年10月31日)</a></p><p>  房地产中介 网站获取小区数据<br>  <a href="https://bj.lianjia.com/xiaoqu/dongcheng/" target="_blank" rel="noopener">北京-东城-小区</a>  <a href="https://www.lianjia.com/city/" target="_blank" rel="noopener">链家-所有城市</a><br>  <a href="https://bj.5i5j.com/xiaoqu/n2/" target="_blank" rel="noopener">北京-小区</a>  <a href>我爱我家-所有城市</a><br> <a href="https://beijing.anjuke.com/" target="_blank" rel="noopener">北京小区</a>    <a href="https://www.anjuke.com/sy-city.html" target="_blank" rel="noopener">安居客-所有城市</a></p><h3 id="1-4-1-高考各大高校录取数据"><a href="#1-4-1-高考各大高校录取数据" class="headerlink" title="(1.4.1) 高考各大高校录取数据"></a>(1.4.1) 高考各大高校录取数据</h3><p>  这个是为了统计武汉到各个省市的学生数据 </p><h2 id="1-5-公布的疫情数据"><a href="#1-5-公布的疫情数据" class="headerlink" title="(1.5)  公布的疫情数据"></a>(1.5)  公布的疫情数据</h2><p>  <a href="http://www.nhc.gov.cn/xcs/xxgzbd/gzbd_index.shtml" target="_blank" rel="noopener">国家卫生健康委员会-&gt;疫情通报</a></p><p>  <a href="https://h5.peopleapp.com/txcx/index.html" target="_blank" rel="noopener">新型冠状病毒感染的肺炎-确诊患者同行程查询工具-人民日报</a><br>  <a href="https://2019ncov.nosugartech.com/data.json?439373" target="_blank" rel="noopener">https://2019ncov.nosugartech.com/data.json?439373</a>   </p><p>  <a href="https://ncov.dxy.cn/ncovh5/view/pneumonia" target="_blank" rel="noopener">新型冠状病毒肺炎-疫情实时动态-丁香园</a></p><p>  <a href="https://news.163.com/special/epidemic/" target="_blank" rel="noopener">肺炎疫情实时动态播报-网易新闻</a><br>  <a href="https://c.m.163.com/ug/api/wuhan/app/data/list-total?t=1581731399558" target="_blank" rel="noopener">https://c.m.163.com/ug/api/wuhan/app/data/list-total?t=1581731399558</a> </p><p>  <a href="https://news.qq.com//zt2020/page/feiyan.htm" target="_blank" rel="noopener">新型冠状病毒肺炎-疫情实时追踪</a><br>  <a href="https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&amp;callback=jQuery341008224555239086584_1581732532940&amp;_=1581732532941" target="_blank" rel="noopener">https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&amp;callback=jQuery341008224555239086584_1581732532940&amp;_=1581732532941</a></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1]  <a href="http://www.gov.cn/shuju/2017sjcs/sjxqpage.htm" target="_blank" rel="noopener">中华人民共和国中央人民政府-数据-数据详情-总人口</a><br>[2] <a href="http://spcx.www.gov.cn/ZFW-AccessPlatform/gov/np/export.do?selectLegend=%25E5%25B9%25B4%25E6%259C%25AB%25E4%25BA%25BA%25E5%258F%25A3%25EF%25BC%2588%25E4%25B8%2587%25E4%25BA%25BA%25EF%25BC%2589&amp;startYear=2002&amp;endYear=2018" target="_blank" rel="noopener">总人口数据下载</a>ß<br>[3] <a href="http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2018/index.html" target="_blank" rel="noopener">国家统计局-2018年统计用区划代码和城乡划分代码(截止2018年10月31日)</a><br>[4] <a href="http://www.umetrip.com/mskyweb/main/index.html?hrefParam=tk" target="_blank" rel="noopener">机票-航旅纵横</a><br>[5] <a href="https://flights.ctrip.com/" target="_blank" rel="noopener">机票-携程</a><br>[6] <a href="https://www.12306.cn/index/" target="_blank" rel="noopener">火车票</a><br>[7] <a href="https://bus.ctrip.com/" target="_blank" rel="noopener">汽车票</a><br>[8]   <a href="https://bj.lianjia.com/xiaoqu/dongcheng/" target="_blank" rel="noopener">北京-东城-小区</a><br>[9] <a href="https://bj.5i5j.com/xiaoqu/n2/" target="_blank" rel="noopener">北京-小区</a>  <a href>我爱我家-所有城市</a><br>[10] <a href="https://beijing.anjuke.com/" target="_blank" rel="noopener">北京小区</a>    <a href="https://www.anjuke.com/sy-city.html" target="_blank" rel="noopener">安居客-所有城市</a><br>[11] <a href="http://www.nhc.gov.cn/xcs/xxgzbd/gzbd_index.shtml" target="_blank" rel="noopener">国家卫生健康委员会-&gt;疫情通报</a><br>[12] <a href="https://h5.peopleapp.com/txcx/index.html" target="_blank" rel="noopener">新型冠状病毒感染的肺炎-确诊患者同行程查询工具</a><br>[13] <a href="https://ncov.dxy.cn/ncovh5/view/pneumonia" target="_blank" rel="noopener">新型冠状病毒肺炎-疫情实时动态-丁香园</a><br>[14] <a href="https://news.163.com/special/epidemic/" target="_blank" rel="noopener">肺炎疫情实时动态播报-网易新闻</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  新冠形病毒(Novel Conronavirus Pneumonia)疫情数据模拟。&lt;/p&gt;
&lt;p&gt;  该模拟参考网上公开数据，模拟(数据可能不准确)只是为了让大家心里有个数，不要出门或尽量少出门。&lt;br&gt;  由于建模使用数据误差较大，结果仅供参考。&lt;/p&gt;
&lt;p&gt;  需要数据 &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全国人口统计数据&lt;/li&gt;
&lt;li&gt;行政区划分数据&lt;/li&gt;
&lt;li&gt;人口流动数据&lt;/li&gt;
&lt;li&gt;全国各小区数据&lt;/li&gt;
&lt;li&gt;高考各大高校录取数据&lt;/li&gt;
&lt;li&gt;&lt;p&gt;疫情数据 ( 卫健委公布的各省市确诊人数、 同行数据 )&lt;/p&gt;
&lt;p&gt;使模型更加准确所需数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;通信运营商数据  (从2019.12.01~2020.02.16 用于通过手机定位)&lt;br&gt;中国联通已经开始行动了，发送 cxmyd#身份证后四位 到 10010 可查询近14日内到访的省市信息(驻留超过4小时)，公益服务。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确诊人数经纬度坐标数据  (用于预防)&lt;/p&gt;
&lt;p&gt;使模型更加准确需要优化的点：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;数据层面&lt;br&gt;人口数据更详细，具体到 城市具体到街道、小区，城镇具体到 村 甚至 小组。&lt;br&gt;人口流动数据更详细， @通信运营商@中国电信@中国移动@中国联通@今日头条@美团@阿里巴巴@京东&lt;/li&gt;
&lt;li&gt;建模层面&lt;br&gt;数据统计需要耗费大量人力物力，不可能做到100%&lt;br&gt;在当前数据的情况下，需要部分数据缺失，部分数据延迟&lt;br&gt;根据 概率论和数理统计 以及 离散数学 去估计、模拟可能的情况。         &lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="data" scheme="http://weikeqin.com/categories/data/"/>
    
    
      <category term="data" scheme="http://weikeqin.com/tags/data/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 映射和分析</title>
    <link href="http://weikeqin.com/2020/01/21/elasticsearch-mapping-analysis/"/>
    <id>http://weikeqin.com/2020/01/21/elasticsearch-mapping-analysis/</id>
    <published>2020-01-21T02:12:46.000Z</published>
    <updated>2020-01-21T11:23:04.898Z</updated>
    
    <content type="html"><![CDATA[<p>  当摆弄索引里面的数据时，我们发现一些奇怪的事情。一些事情看起来被打乱了：在我们的索引中有12条推文，其中只有一条包含日期 2014-09-15 ，但是看一看下面查询命中的 总数 （total）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /_search?q=2014              # 12 results</span><br><span class="line">GET /_search?q=2014-09-15        # 12 results !</span><br><span class="line">GET /_search?q=date:2014-09-15   # 1  result</span><br><span class="line">GET /_search?q=date:2014         # 0  results !</span><br></pre></td></tr></table></figure><p>  为什么在 _all 字段查询日期返回所有推文，而在 date 字段只查询年份却没有返回结果？为什么我们在 _all 字段和 date 字段的查询结果有差别？<br>  因为数据在 _all 字段与 date 字段的索引方式不同。</p><a id="more"></a><h1 id="1-精确值-VS-全文"><a href="#1-精确值-VS-全文" class="headerlink" title="(1) 精确值 VS 全文"></a>(1) 精确值 VS 全文</h1><p>  Elasticsearch 中的数据可以概括的分为两类：精确值和全文。</p><p>  精确值 如它们听起来那样精确。例如日期或者用户 ID，但字符串也可以表示精确值，例如用户名或邮箱地址。 </p><p>  另一方面，全文 是指文本数据（通常以人类容易识别的语言书写），例如一个推文的内容或一封邮件的内容。</p><p>  全文通常是指非结构化的数据，但这里有一个误解：自然语言是高度结构化的。问题在于自然语言的规则是复杂的，导致计算机难以正确解析。</p><p>精确值很容易查询。结果是二进制的：要么匹配查询，要么不匹配。这种查询很容易用 SQL 表示：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WHERE name    = "John Smith"</span><br><span class="line">AND user_id = 2</span><br><span class="line">AND date    &gt; "2014-09-15"</span><br></pre></td></tr></table></figure></p><p>  查询全文数据要微妙的多。我们问的不只是“这个文档匹配查询吗”，而是“该文档匹配查询的程度有多大？”换句话说，该文档与给定查询的相关性如何？<br>  我们很少对全文类型的域做精确匹配。相反，我们希望在文本类型的域中搜索。不仅如此，我们还希望搜索能够理解我们的 意图 ：</p><pre><code>搜索 UK ，会返回包含 United Kindom 的文档。搜索 jump ，会匹配 jumped ， jumps ， jumping ，甚至是 leap 。搜索 johnny walker 会匹配 Johnnie Walker ， johnnie depp 应该匹配 Johnny Depp 。fox news hunting 应该返回福克斯新闻（ Foxs News ）中关于狩猎的故事，同时， fox hunting news 应该返回关于猎狐的故事。</code></pre><p>为了促进这类在全文域中的查询，Elasticsearch 首先 分析 文档，之后根据结果创建 倒排索引 。</p><h1 id="2-倒排索引"><a href="#2-倒排索引" class="headerlink" title="(2) 倒排索引"></a>(2) 倒排索引</h1><p>Elasticsearch 使用一种称为 倒排索引 的结构，它适用于快速的全文搜索。一个倒排索引由文档中所有不重复词的列表构成，对于其中每个词，有一个包含它的文档列表。</p><p>例如，假设我们有两个文档，每个文档的 content 域包含如下内容：</p><pre><code>The quick brown fox jumped over the lazy dogQuick brown foxes leap over lazy dogs in summer</code></pre><p>为了创建倒排索引，我们首先将每个文档的 content 域拆分成单独的 词（我们称它为 词条 或 tokens ），创建一个包含所有不重复词条的排序列表，然后列出每个词条出现在哪个文档。结果如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Trem       Doc_1       Doc_2</span><br><span class="line">-------------------------------</span><br><span class="line">Quick   |          |     X     </span><br><span class="line">The     |    X     |            </span><br><span class="line">brown   |    X     |     X    </span><br><span class="line">dog     |    X     |           </span><br><span class="line">dogs    |          |     X      </span><br><span class="line">fox     |    X     |           </span><br><span class="line">foxes   |          |     X     </span><br><span class="line">in      |          |     X      </span><br><span class="line">jumped  |    X     |           </span><br><span class="line">lazy    |    X     |     X     </span><br><span class="line">leap    |          |     X     </span><br><span class="line">over    |    X     |     X     </span><br><span class="line">quick   |    X     |           </span><br><span class="line">summer  |          |     X </span><br><span class="line">the     |    X     |      </span><br><span class="line">-------------------------------</span><br></pre></td></tr></table></figure></p><p>  现在，如果我们想搜索 <code>quick brown</code>，我们只需要查找包含每个词条的文档：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Trem       Doc_1       Doc_2</span><br><span class="line">-------------------------------</span><br><span class="line">brown   |    X     |     X     </span><br><span class="line">quick   |    X     |            </span><br><span class="line">-------------------------------</span><br><span class="line">Total   |    2     |     1</span><br></pre></td></tr></table></figure></p><p> 两个文档都匹配，但是第一个文档比第二个匹配度更高。如果我们使用仅计算匹配词条数量的简单 相似性算法 ，那么，我们可以说，对于我们查询的相关性来讲，第一个文档比第二个文档更佳。</p><p> 但是，我们目前的倒排索引有一些问题：</p><pre><code>Quick 和 quick 以独立的词条出现，然而用户可能认为它们是相同的词。fox 和 foxes 非常相似, 就像 dog 和 dogs ；他们有相同的词根。jumped 和 leap, 尽管没有相同的词根，但他们的意思很相近。他们是同义词。</code></pre><p>使用前面的索引搜索 +Quick +fox 不会得到任何匹配文档。（记住，+ 前缀表明这个词必须存在。）只有同时出现 Quick 和 fox 的文档才满足这个查询条件，但是第一个文档包含 quick fox ，第二个文档包含 Quick foxes 。</p><p>我们的用户可以合理的期望两个文档与查询匹配。我们可以做的更好。</p><p>如果我们将词条规范为标准模式，那么我们可以找到与用户搜索的词条不完全一致，但具有足够相关性的文档。例如：</p><pre><code>Quick 可以小写化为 quick 。foxes 可以 词干提取 --变为词根的格式-- 为 fox 。类似的， dogs 可以为提取为 dog 。jumped 和 leap 是同义词，可以索引为相同的单词 jump 。</code></pre><p>现在索引看上去像这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Trem       Doc_1       Doc_2</span><br><span class="line">------------------------------- </span><br><span class="line">brown   |    X     |     X    </span><br><span class="line">dog     |    X     |     X         </span><br><span class="line">fox     |    X     |     X       </span><br><span class="line">in      |          |     X      </span><br><span class="line">jumped  |    X     |     X     </span><br><span class="line">lazy    |    X     |     X       </span><br><span class="line">over    |    X     |     X     </span><br><span class="line">quick   |    X     |     X     </span><br><span class="line">summer  |          |     X </span><br><span class="line">the     |    X     |     X</span><br><span class="line">-------------------------------</span><br></pre></td></tr></table></figure></p><p>  这还远远不够。我们搜索 +Quick +fox 仍然 会失败，因为在我们的索引中，已经没有 Quick 了。但是，如果我们对搜索的字符串使用与 content 域相同的标准化规则，会变成查询 +quick +fox ，这样两个文档都会匹配！</p><h2 id="2-分析与分析器"><a href="#2-分析与分析器" class="headerlink" title="(2) 分析与分析器"></a>(2) 分析与分析器</h2><p>分析 包含下面的过程：</p><pre><code>首先，将一块文本分成适合于倒排索引的独立的 词条 ，之后，将这些词条统一化为标准格式以提高它们的“可搜索性”，或者 recall</code></pre><p>分析器执行上面的工作。 分析器 实际上是将三个功能封装到了一个包里：</p><p><code>字符过滤器</code><br>    首先，字符串按顺序通过每个 字符过滤器 。他们的任务是在分词前整理字符串。一个字符过滤器可以用来去掉HTML，或者将 &amp; 转化成 and。<br><code>分词器</code><br>    其次，字符串被 分词器 分为单个的词条。一个简单的分词器遇到空格和标点的时候，可能会将文本拆分成词条。<br><code>Token 过滤器</code><br>    最后，词条按顺序通过每个 token 过滤器 。这个过程可能会改变词条（例如，小写化 Quick ），删除词条（例如， 像 a， and， the 等无用词），或者增加词条（例如，像 jump 和 leap 这种同义词）。 </p><p>  Elasticsearch提供了开箱即用的字符过滤器、分词器和token 过滤器。 这些可以组合起来形成自定义的分析器以用于不同的目的。</p><h2 id="2-1-内置分析器"><a href="#2-1-内置分析器" class="headerlink" title="(2.1)  内置分析器"></a>(2.1)  内置分析器</h2><p>   Elasticsearch还附带了可以直接使用的预包装的分析器。接下来我们会列出最重要的分析器。为了证明它们的差异，我们看看每个分析器会从下面的字符串得到哪些词条：</p><p>“Set the shape to semi-transparent by calling set_trans(5)”</p><p><code>标准分析器</code></p><pre><code>标准分析器是Elasticsearch默认使用的分析器。它是分析各种语言文本最常用的选择。它根据 Unicode 联盟 定义的 单词边界 划分文本。删除绝大部分标点。最后，将词条小写。它会产生set, the, shape, to, semi, transparent, by, calling, set_trans, 5</code></pre><p><code>简单分析器</code></p><pre><code>简单分析器在任何不是字母的地方分隔文本，将词条小写。它会产生set, the, shape, to, semi, transparent, by, calling, set, trans</code></pre><p><code>空格分析器</code></p><pre><code>空格分析器在空格的地方划分文本。它会产生Set, the, shape, to, semi-transparent, by, calling, set_trans(5)</code></pre><p><code>语言分析器</code></p><pre><code>特定语言分析器可用于 很多语言。它们可以考虑指定语言的特点。例如， 英语 分析器附带了一组英语无用词（常用单词，例如 and 或者 the ，它们对相关性没有多少影响），它们会被删除。 由于理解英语语法的规则，这个分词器可以提取英语单词的 词干 。英语 分词器会产生下面的词条：set, shape, semi, transpar, call, set_tran, 5注意看 transparent、 calling 和 set_trans 已经变为词根格式。</code></pre><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[0] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/mapping-analysis.html" target="_blank" rel="noopener">映射和分析</a><br>[1] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_exact_values_versus_full_text.html" target="_blank" rel="noopener">精确值 VS 全文</a><br>[2] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/inverted-index.html" target="_blank" rel="noopener">倒排索引</a><br>[3] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/analysis-intro.html" target="_blank" rel="noopener">分析与分析器</a><br>[] <a href></a><br>[] <a href></a><br>[] <a href></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  当摆弄索引里面的数据时，我们发现一些奇怪的事情。一些事情看起来被打乱了：在我们的索引中有12条推文，其中只有一条包含日期 2014-09-15 ，但是看一看下面查询命中的 总数 （total）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET /_search?q=2014              # 12 results&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET /_search?q=2014-09-15        # 12 results !&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET /_search?q=date:2014-09-15   # 1  result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET /_search?q=date:2014         # 0  results !&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  为什么在 _all 字段查询日期返回所有推文，而在 date 字段只查询年份却没有返回结果？为什么我们在 _all 字段和 date 字段的查询结果有差别？&lt;br&gt;  因为数据在 _all 字段与 date 字段的索引方式不同。&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://weikeqin.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://weikeqin.com/tags/elasticsearch/"/>
    
  </entry>
  
</feed>
