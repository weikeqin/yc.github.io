<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>沧海一粟</title>
  
  <subtitle>天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://weikeqin.com/"/>
  <updated>2020-05-01T04:07:23.158Z</updated>
  <id>http://weikeqin.com/</id>
  
  <author>
    <name>WKQ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vim-notes</title>
    <link href="http://weikeqin.com/2020/04/18/vim-notes/"/>
    <id>http://weikeqin.com/2020/04/18/vim-notes/</id>
    <published>2020-04-18T06:49:16.000Z</published>
    <updated>2020-05-01T04:07:23.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="命令行模式-写模式"><a href="#命令行模式-写模式" class="headerlink" title="命令行模式 写模式"></a>命令行模式 写模式</h1><h1 id="跳到第一行"><a href="#跳到第一行" class="headerlink" title="跳到第一行"></a>跳到第一行</h1><h1 id="跳到最后一行"><a href="#跳到最后一行" class="headerlink" title="跳到最后一行"></a>跳到最后一行</h1><p>  命令行模式下  输入 G 即可跳转到最后一行 </p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://www.runoob.com/linux/linux-vim.html" target="_blank" rel="noopener">Linux vi/vim</a><br>[2] <a href="https://www.jianshu.com/p/ba8adedf1e00" target="_blank" rel="noopener">vim 命令详解</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;命令行模式-写模式&quot;&gt;&lt;a href=&quot;#命令行模式-写模式&quot; class=&quot;headerlink&quot; title=&quot;命令行模式 写模式&quot;&gt;&lt;/a&gt;命令行模式 写模式&lt;/h1&gt;&lt;h1 id=&quot;跳到第一行&quot;&gt;&lt;a href=&quot;#跳到第一行&quot; class=&quot;header
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vs-code-notes</title>
    <link href="http://weikeqin.com/2020/04/18/vs-code-notes/"/>
    <id>http://weikeqin.com/2020/04/18/vs-code-notes/</id>
    <published>2020-04-18T06:49:06.000Z</published>
    <updated>2020-05-01T04:07:41.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vs-code-设置语言"><a href="#vs-code-设置语言" class="headerlink" title="vs-code 设置语言"></a>vs-code 设置语言</h1><p>  打开命令面板 ，输入 <code>configure display language</code>，设置语言为 <code>zh-cn</code> </p><p>  备注：打开命令面板快捷键  mac <code>Shift + Command + P</code>    Windows <code>Ctrl + Shift + p</code></p><h1 id="vs-code-设置背景豆沙绿"><a href="#vs-code-设置背景豆沙绿" class="headerlink" title="vs-code 设置背景豆沙绿"></a>vs-code 设置背景豆沙绿</h1><p>  修改配置文件 <code>~/Library/Application Support/Code/User/settings.json</code><br>  把  <code>&quot;editor.background&quot;</code> 设置成 <code>&quot;#C7EDCC&quot;</code>，具体如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"workbench.colorTheme"</span>: <span class="string">"Default Light+"</span>,</span><br><span class="line">    <span class="attr">"workbench.colorCustomizations"</span>: &#123;</span><br><span class="line">        <span class="attr">"editor.background"</span>: <span class="string">"#C7EDCC"</span></span><br><span class="line">        //设置用户选中代码段的颜色 </span><br><span class="line">        //<span class="string">"editor.selectionBackground"</span>: <span class="string">"#2f00ff"</span>,</span><br><span class="line">        //搜索匹配的背景色</span><br><span class="line">        //"editor.findMatchBackground": "#ff0000",</span><br><span class="line">        //"editor.findMatchHighlightBackground": "#ff00ff",</span><br><span class="line">        //"editor.findRangeHighlightBackground": "#ff9900"</span><br><span class="line">    </span><br><span class="line">    &#125;,</span><br><span class="line">    "editor.fontSize": 16,</span><br><span class="line">    "window.openFoldersInNewWindow": "off",</span><br><span class="line">    "window.openWithoutArgumentsInNewWindow": "on",</span><br><span class="line">    "editor.largeFileOptimizations": false,</span><br><span class="line">    "editor.suggestSelection": "first",</span><br><span class="line">    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",</span><br><span class="line">    "java.configuration.checkProjectSettingsExclusions": false,</span><br><span class="line">    "extensions.autoUpdate": false,</span><br><span class="line">    "window.zoomLevel": 0,</span><br><span class="line">    "update.mode": "none"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;vs-code-设置语言&quot;&gt;&lt;a href=&quot;#vs-code-设置语言&quot; class=&quot;headerlink&quot; title=&quot;vs-code 设置语言&quot;&gt;&lt;/a&gt;vs-code 设置语言&lt;/h1&gt;&lt;p&gt;  打开命令面板 ，输入 &lt;code&gt;configure display language&lt;/code&gt;，设置语言为 &lt;code&gt;zh-cn&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;  备注：打开命令面板快捷键  mac &lt;code&gt;Shift + Command + P&lt;/code&gt;    Windows &lt;code&gt;Ctrl + Shift + p&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;vs-code-设置背景豆沙绿&quot;&gt;&lt;a href=&quot;#vs-code-设置背景豆沙绿&quot; class=&quot;headerlink&quot; title=&quot;vs-code 设置背景豆沙绿&quot;&gt;&lt;/a&gt;vs-code 设置背景豆沙绿&lt;/h1&gt;&lt;p&gt;  修改配置文件 &lt;code&gt;~/Library/Application Support/Code/User/settings.json&lt;/code&gt;&lt;br&gt;  把  &lt;code&gt;&amp;quot;editor.background&amp;quot;&lt;/code&gt; 设置成 &lt;code&gt;&amp;quot;#C7EDCC&amp;quot;&lt;/code&gt;，具体如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;workbench.colorTheme&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Default Light+&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;workbench.colorCustomizations&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;editor.background&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;#C7EDCC&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //设置用户选中代码段的颜色 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&lt;span class=&quot;string&quot;&gt;&quot;editor.selectionBackground&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;#2f00ff&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //搜索匹配的背景色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&quot;editor.findMatchBackground&quot;: &quot;#ff0000&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&quot;editor.findMatchHighlightBackground&quot;: &quot;#ff00ff&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&quot;editor.findRangeHighlightBackground&quot;: &quot;#ff9900&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;editor.fontSize&quot;: 16,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;window.openFoldersInNewWindow&quot;: &quot;off&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;window.openWithoutArgumentsInNewWindow&quot;: &quot;on&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;editor.largeFileOptimizations&quot;: false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;editor.suggestSelection&quot;: &quot;first&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;vsintellicode.modify.editor.suggestSelection&quot;: &quot;automaticallyOverrodeDefaultValue&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;java.configuration.checkProjectSettingsExclusions&quot;: false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;extensions.autoUpdate&quot;: false,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;window.zoomLevel&quot;: 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;update.mode&quot;: &quot;none&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>cache-notes</title>
    <link href="http://weikeqin.com/2020/04/06/cache-notes/"/>
    <id>http://weikeqin.com/2020/04/06/cache-notes/</id>
    <published>2020-04-06T01:22:49.000Z</published>
    <updated>2020-04-06T01:24:14.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://blog.csdn.net/zeb_perfect/article/details/54135506" target="_blank" rel="noopener">缓存穿透，缓存击穿，缓存雪崩解决方案分析</a><br>[2] <a href="https://blog.csdn.net/xlgen157387/article/details/79530877" target="_blank" rel="noopener">缓存雪崩、缓存穿透、缓存预热、缓存更新、缓存降级等问题</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h1&gt;&lt;p&gt;[1] &lt;a href=&quot;https://blog.csdn.net/zeb
      
    
    </summary>
    
      <category term="cache" scheme="http://weikeqin.com/categories/cache/"/>
    
    
      <category term="cache" scheme="http://weikeqin.com/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>JVM性能调优监控工具 jps jstat jinfo jmap jhat jstack</title>
    <link href="http://weikeqin.com/2020/03/28/jvm-performance-tuning-monitoring-tool/"/>
    <id>http://weikeqin.com/2020/03/28/jvm-performance-tuning-monitoring-tool/</id>
    <published>2020-03-28T02:16:25.000Z</published>
    <updated>2020-03-30T15:37:10.124Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 最近测试环境总是莫名的出问题，然后部署服务的容器里除了服务打印的日志，没有其它信息，想看看是什么原因导致服务很卡，是不是有哪块代码占用内存高。<br> 代码执行缓慢、OutOfMemoryError，内存不足、内存泄露、线程死锁、锁争用（Lock Contention）、Java进程消耗CPU过高 都可以使用JDK的命令行工具排查。</p></blockquote><p><br></p><h1 id="1-JDK的命令行工具"><a href="#1-JDK的命令行工具" class="headerlink" title="(1) JDK的命令行工具"></a>(1) JDK的命令行工具</h1><blockquote><p> jps、jstat、jinfo、jmap、jhat、jstack、hprof<br>jps : 虚拟机进程状况工具<br>jstat : 虚拟机统计信息监视工具<br>jinfo : Java 配置信息工具<br>jmap : Java 内存映像工具<br>jhat : 虚拟机堆转储快照分析工具<br>jstack : Java 堆栈跟踪工具</p></blockquote><blockquote><p> jps将打印所有正在运行的 Java 进程。<br> jstat允许用户查看目标 Java 进程的类加载、即时编译以及垃圾回收相关的信息。它常用于检测垃圾回收问题以及内存泄漏问题。<br> jmap允许用户统计目标 Java 进程的堆中存放的 Java 对象，并将它们导出成二进制文件。<br> jinfo将打印目标 Java 进程的配置参数，并能够改动其中 manageabe 的参数。<br> jstack将打印目标 Java 进程中各个线程的栈轨迹、线程状态、锁状况等信息。它还将自动检测死锁。<br> jcmd则是一把瑞士军刀，可以用来实现前面除了jstat之外所有命令的功能。</p></blockquote><p>Java虚拟机的监控及诊断工具-GUI</p><blockquote><p>JConsole : Java 监视与管理控制台<br>VisualVM : 多合一故障处理工具<br>eclipse MAT<br>JMC<br>JITWatch</p></blockquote><p><br></p><h1 id="2-虚拟机进程状况工具-jps-JVM-Process-Status-Tool"><a href="#2-虚拟机进程状况工具-jps-JVM-Process-Status-Tool" class="headerlink" title="(2) 虚拟机进程状况工具 jps (JVM Process Status Tool)"></a>(2) 虚拟机进程状况工具 jps (JVM Process Status Tool)</h1><blockquote><p> jps主要用来输出JVM中运行的进程状态信息。<br> jps命令使用Java启动器来查找传递给main方法的类名和参数。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -help</span><br><span class="line">usage: jps [-help]</span><br><span class="line">       jps [-q] [-mlvV] [&lt;hostid&gt;]</span><br><span class="line"></span><br><span class="line">Definitions:</span><br><span class="line">    &lt;hostid&gt;:      &lt;hostname&gt;[:&lt;port&gt;]</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h2 id="2-1-jps命令"><a href="#2-1-jps命令" class="headerlink" title="(2.1) jps命令"></a>(2.1) jps命令</h2><blockquote><p>jps命令用于输出JVM中运行的进程状态信息。可以获取到进程的pid、全限定名、传入main方法的参数、传入JVM的参数 等。</p></blockquote><blockquote><p>语法格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jps [ options ] [ hostid ]</span><br></pre></td></tr></table></figure></p></blockquote><p>  如果不指定hostid就默认为当前主机或服务器。</p><p>  详细信息见 <code>man jps</code></p><h3 id="2-1-1-jps-不加参数"><a href="#2-1-1-jps-不加参数" class="headerlink" title="(2.1.1) jps 不加参数"></a>(2.1.1) jps 不加参数</h3><blockquote><p> 在本地主机上搜索检测到的JVM。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps</span><br><span class="line">14916 Jps</span><br><span class="line">13050 Elasticsearch</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2-1-2-jps-q"><a href="#2-1-2-jps-q" class="headerlink" title="(2.1.2) jps -q"></a>(2.1.2) jps -q</h3><blockquote><p>不输出类名、Jar名和传入main方法的参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -q</span><br><span class="line">15059</span><br><span class="line">13050</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="2-1-3-jps-m"><a href="#2-1-3-jps-m" class="headerlink" title="(2.1.3) jps -m"></a>(2.1.3) jps -m</h3><blockquote><p>显示传递给main方法的参数。对于嵌入式JVM，输出可能为null。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -m</span><br><span class="line">15092 Jps -m</span><br><span class="line">13050 Elasticsearch -d</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="2-1-4-jps-l"><a href="#2-1-4-jps-l" class="headerlink" title="(2.1.4) jps -l"></a>(2.1.4) jps -l</h3><blockquote><p>输出main类或Jar的全限定名</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -l</span><br><span class="line">15139 sun.tools.jps.Jps</span><br><span class="line">13050 org.elasticsearch.bootstrap.Elasticsearch</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="2-1-5-jps-v"><a href="#2-1-5-jps-v" class="headerlink" title="(2.1.5) jps -v"></a>(2.1.5) jps -v</h3><blockquote><p>显示传递给JVM的参数。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -v</span><br><span class="line">15157 Jps -Denv.class.path=.:/home/wkq/software/jdk1.8.0_172/lib/dt.jar:/home/wkq/software/jdk1.8.0_172/lib/tools.jar -Dapplication.home=/home/wkq/software/jdk1.8.0_172 -Xms8m</span><br><span class="line">13050 Elasticsearch -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch-5035355569386013893 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/home/wkq/software/elasticsearch-6.6.2 -Des.path.conf=/home/wkq/software/elasticsearch-6.6.2/config -Des.distribution.flavor=default -Des.distribution.type=tar</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="2-1-6-jps-V"><a href="#2-1-6-jps-V" class="headerlink" title="(2.1.6) jps -V"></a>(2.1.6) jps -V</h3><blockquote><p>禁止输出类名，JAR全限定名和传递给main方法的参数的输出，从而产生仅本地JVM标识符的列表。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -V</span><br><span class="line">15204 Jps</span><br><span class="line">13050 Elasticsearch</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h2 id="2-2-常用jps命令"><a href="#2-2-常用jps命令" class="headerlink" title="(2.2) 常用jps命令"></a>(2.2) 常用jps命令</h2><h3 id="2-2-1-jps-lm"><a href="#2-2-1-jps-lm" class="headerlink" title="(2.2.1) jps -lm"></a>(2.2.1) jps -lm</h3><blockquote><p>显示 pid、全限定名、传递给main方法的参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -lm</span><br><span class="line">17539 sun.tools.jps.Jps -lm</span><br><span class="line">13050 org.elasticsearch.bootstrap.Elasticsearch -d</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="2-2-2-jps-lvm"><a href="#2-2-2-jps-lvm" class="headerlink" title="(2.2.2) jps -lvm"></a>(2.2.2) jps -lvm</h3><blockquote><p>显示 pid、全限定名、传递给main方法的参数、传递给JVM的参数</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jps -lvm</span><br><span class="line">13050 org.elasticsearch.bootstrap.Elasticsearch -d -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch-5035355569386013893 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/home/wkq/software/elasticsearch-6.6.2 -Des.path.conf=/home/wkq/software/elasticsearch-6.6.2/config -Des.distribution.flavor=default -Des.distribution.type=tar</span><br><span class="line">17567 sun.tools.jps.Jps -lvm -Denv.class.path=.:/home/wkq/software/jdk1.8.0_172/lib/dt.jar:/home/wkq/software/jdk1.8.0_172/lib/tools.jar -Dapplication.home=/home/wkq/software/jdk1.8.0_172 -Xms8m</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p><br></p><h1 id="3-虚拟机统计信息监视工具-jstat-JVM-Statics-Monitoring-Tool"><a href="#3-虚拟机统计信息监视工具-jstat-JVM-Statics-Monitoring-Tool" class="headerlink" title="(3) 虚拟机统计信息监视工具 jstat (JVM Statics Monitoring Tool)"></a>(3) 虚拟机统计信息监视工具 jstat (JVM Statics Monitoring Tool)</h1><blockquote><p> jstat是用于监视虚拟机各种运行状态信息的命令行工具。</p></blockquote><h2 id="3-1-jstat命令"><a href="#3-1-jstat命令" class="headerlink" title="(3.1) jstat命令"></a>(3.1) jstat命令</h2><blockquote><p> 语法格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat [ generalOption | outputOptions vmid [ interval[s|ms] [ count ] ]</span><br></pre></td></tr></table></figure></p></blockquote><p>  详细信息见 <code>man jstat</code></p><h3 id="3-1-1-jstat命令"><a href="#3-1-1-jstat命令" class="headerlink" title="(3.1.1) jstat命令"></a>(3.1.1) jstat命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -help</span><br><span class="line">Usage: jstat -help|-options</span><br><span class="line">       jstat -&lt;option&gt; [-t] [-h&lt;lines&gt;] &lt;vmid&gt; [&lt;interval&gt; [&lt;count&gt;]]</span><br><span class="line"></span><br><span class="line">Definitions:</span><br><span class="line">  &lt;option&gt;      An option reported by the -options option</span><br><span class="line">  &lt;vmid&gt;        Virtual Machine Identifier. A vmid takes the following form:</span><br><span class="line">                     &lt;lvmid&gt;[@&lt;hostname&gt;[:&lt;port&gt;]]</span><br><span class="line">                Where &lt;lvmid&gt; is the local vm identifier for the target</span><br><span class="line">                Java virtual machine, typically a process id; &lt;hostname&gt; is</span><br><span class="line">                the name of the host running the target Java virtual machine;</span><br><span class="line">                and &lt;port&gt; is the port number for the rmiregistry on the</span><br><span class="line">                target host. See the jvmstat documentation for a more complete</span><br><span class="line">                description of the Virtual Machine Identifier.</span><br><span class="line">  &lt;lines&gt;       Number of samples between header lines.</span><br><span class="line">  &lt;interval&gt;    Sampling interval. The following forms are allowed:</span><br><span class="line">                    &lt;n&gt;[&quot;ms&quot;|&quot;s&quot;]</span><br><span class="line">                Where &lt;n&gt; is an integer and the suffix specifies the units as</span><br><span class="line">                milliseconds(&quot;ms&quot;) or seconds(&quot;s&quot;). The default units are &quot;ms&quot;.</span><br><span class="line">  &lt;count&gt;       Number of samples to take before terminating.</span><br><span class="line">  -J&lt;flag&gt;      Pass &lt;flag&gt; directly to the runtime system.</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -options</span><br><span class="line">-class</span><br><span class="line">-compiler</span><br><span class="line">-gc</span><br><span class="line">-gccapacity</span><br><span class="line">-gccause</span><br><span class="line">-gcmetacapacity</span><br><span class="line">-gcnew</span><br><span class="line">-gcnewcapacity</span><br><span class="line">-gcold</span><br><span class="line">-gcoldcapacity</span><br><span class="line">-gcutil</span><br><span class="line">-printcompilation</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p><br></p><h3 id="3-1-1-jstat-class-13050"><a href="#3-1-1-jstat-class-13050" class="headerlink" title="(3.1.1) jstat -class 13050"></a>(3.1.1) jstat -class 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -class 13050</span><br><span class="line">Loaded  Bytes  Unloaded  Bytes     Time</span><br><span class="line"> 15177 27005.8       41    49.7      24.44</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-2-jstat-compiler-13050"><a href="#3-1-2-jstat-compiler-13050" class="headerlink" title="(3.1.2) jstat -compiler 13050"></a>(3.1.2) jstat -compiler 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$  jstat -compiler 13050</span><br><span class="line">Compiled Failed Invalid   Time   FailedType FailedMethod</span><br><span class="line">    7469      0       0    43.18          0</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-3-jstat-gc-13050"><a href="#3-1-3-jstat-gc-13050" class="headerlink" title="(3.1.3) jstat -gc 13050"></a>(3.1.3) jstat -gc 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gc 13050</span><br><span class="line"> S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">8512.0 8512.0  0.0    24.5  68160.0   6380.0   963392.0   61694.4   77732.0 71385.7 11984.0 9862.8     69    2.112   6      0.286    2.397</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th><th>原文</th></tr></thead><tbody><tr><td>S0C</td><td>年轻代中第一个survivor 的容量  (kB)</td><td>Current survivor space 0 capacity (kB).</td></tr><tr><td>S1C</td><td>年轻代中第二个survivor 的容量  (kB)</td><td>Current survivor space 1 capacity (kB).</td></tr><tr><td>S0U</td><td>年轻代中第一个survivor 已使用空间   (kB)</td><td>Survivor space 0 utilization (kB).</td></tr><tr><td>S1U</td><td>年轻代中第二个survivor已使用空间   (kB)</td><td>Survivor space 1 utilization (kB).</td></tr><tr><td>EC</td><td>年轻代中 Eden space 的容量  (kB)</td><td>Current eden space capacity (kB).</td></tr><tr><td>EU</td><td>年轻代中Eden space 目前已使用空间  (kB)</td><td>Eden space utilization (kB).</td></tr><tr><td>OC</td><td>Old space的容量  (kB)</td><td>Current old space capacity (kB).</td></tr><tr><td>OU</td><td>Old space 已使用空间  (kB)</td><td>Old space utilization (kB).</td></tr><tr><td>MC</td><td>Metaspace 的容量  (kB)</td><td>Metaspace capacity (kB).</td></tr><tr><td>MU</td><td>Metaspace 已使用空间  (kB)</td><td>Metacspace utilization (kB).</td></tr><tr><td>CCSC</td><td>Compressed class spcage 容量 (kB)</td><td>Compressed class space capacity (kB).</td></tr><tr><td>CCSU</td><td>Compressed class spcage 已使用空间 (kB)</td><td>Compressed class space used (kB).</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时年轻代中gc次数</td><td>Number of young generation garbage collection events.</td></tr><tr><td>YGCT</td><td>从应用程序启动到采样时年轻代中gc所用时间 (s)</td><td>Young generation garbage collection time.</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时old代 (全gc) gc次数</td><td>Number of full GC events.</td></tr><tr><td>FGCT</td><td>从应用程序启动到采样时old代 (全gc) gc所用时间 (s)</td><td>Full garbage collection time.</td></tr><tr><td>GCT</td><td>从应用程序启动到采样时gc用的总时间 (s)</td><td>Total garbage collection time.</td></tr></tbody></table><h3 id="3-1-4-jstat-gccapacity-13050"><a href="#3-1-4-jstat-gccapacity-13050" class="headerlink" title="(3.1.4) jstat -gccapacity 13050"></a>(3.1.4) jstat -gccapacity 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gccapacity 13050</span><br><span class="line"> NGCMN    NGCMX     NGC     S0C   S1C       EC      OGCMN      OGCMX       OGC         OC       MCMN     MCMX      MC     CCSMN    CCSMX     CCSC    YGC    FGC</span><br><span class="line"> 85184.0  85184.0  85184.0 8512.0 8512.0  68160.0   963392.0   963392.0   963392.0   963392.0      0.0 1116160.0  77732.0      0.0 1048576.0  11984.0     69     6</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-5-jstat-gccause-13050"><a href="#3-1-5-jstat-gccause-13050" class="headerlink" title="(3.1.5) jstat -gccause 13050"></a>(3.1.5) jstat -gccause 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gccause 13050</span><br><span class="line">  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT    LGCC                 GCC</span><br><span class="line">  0.00   0.29  11.90   6.40  91.84  82.30     69    2.112     6    0.286    2.397 Allocation Failure   No GC</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-6-jstat-gcmetacapacity-13050"><a href="#3-1-6-jstat-gcmetacapacity-13050" class="headerlink" title="(3.1.6) jstat -gcmetacapacity 13050"></a>(3.1.6) jstat -gcmetacapacity 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcmetacapacity 13050</span><br><span class="line">   MCMN       MCMX        MC       CCSMN      CCSMX       CCSC     YGC   FGC    FGCT     GCT</span><br><span class="line">       0.0  1116160.0    77732.0        0.0  1048576.0    11984.0    69     6    0.286    2.397</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-7-jstat-gcnew-13050"><a href="#3-1-7-jstat-gcnew-13050" class="headerlink" title="(3.1.7) jstat -gcnew 13050"></a>(3.1.7) jstat -gcnew 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcnew 13050</span><br><span class="line"> S0C    S1C    S0U    S1U   TT MTT  DSS      EC       EU     YGC     YGCT</span><br><span class="line">8512.0 8512.0    0.0   24.5  6   6 4256.0  68160.0  13229.3     69    2.112</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-8-jstat-gcnewcapacity-13050"><a href="#3-1-8-jstat-gcnewcapacity-13050" class="headerlink" title="(3.1.8) jstat -gcnewcapacity 13050"></a>(3.1.8) jstat -gcnewcapacity 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcnewcapacity 13050</span><br><span class="line">  NGCMN      NGCMX       NGC      S0CMX     S0C     S1CMX     S1C       ECMX        EC      YGC   FGC</span><br><span class="line">   85184.0    85184.0    85184.0   8512.0   8512.0   8512.0   8512.0    68160.0    68160.0    69     6</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-9-jstat-gcold-13050"><a href="#3-1-9-jstat-gcold-13050" class="headerlink" title="(3.1.9) jstat -gcold 13050"></a>(3.1.9) jstat -gcold 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcold 13050</span><br><span class="line">   MC       MU      CCSC     CCSU       OC          OU       YGC    FGC    FGCT     GCT</span><br><span class="line"> 77732.0  71385.7  11984.0   9862.8    963392.0     61694.4     69     6    0.286    2.397</span><br></pre></td></tr></table></figure><h3 id="3-1-10-jstat-gcoldcapacity-13050"><a href="#3-1-10-jstat-gcoldcapacity-13050" class="headerlink" title="(3.1.10) jstat -gcoldcapacity 13050"></a>(3.1.10) jstat -gcoldcapacity 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcoldcapacity 13050</span><br><span class="line">   OGCMN       OGCMX        OGC         OC       YGC   FGC    FGCT     GCT</span><br><span class="line">   963392.0    963392.0    963392.0    963392.0    69     6    0.286    2.397</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="3-1-11-jstat-gcutil-13050"><a href="#3-1-11-jstat-gcutil-13050" class="headerlink" title="(3.1.11) jstat -gcutil 13050"></a>(3.1.11) jstat -gcutil 13050</h3><blockquote><p>垃圾回收状态摘要</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcutil 13050</span><br><span class="line">  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">  0.00   0.29  24.37   6.40  91.84  82.30     69    2.112     6    0.286    2.397</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th><th>原文</th></tr></thead><tbody><tr><td>S0</td><td>年轻代中第一个survivor 已使用的占当前容量百分比</td><td>Survivor space 0 utilization as a percentage of the space’s current capacity.</td></tr><tr><td>S1</td><td>年轻代中第二个survivor 已使用的占当前容量百分比</td><td>Survivor space 1 utilization as a percentage of the space’s current capacity.</td></tr><tr><td>E</td><td>Eden space 中Eden 已使用的占当前容量百分比</td><td>Eden space utilization as a percentage of the space’s current capacity.</td></tr><tr><td>O</td><td>Old space  已使用的占当前容量百分比</td><td>Old space utilization as a percentage of the space’s current capacity.</td></tr><tr><td>M</td><td>Metaspace 已使用的占当前容量百分比</td><td>Metaspace utilization as a percentage of the space’s current capacity.</td></tr><tr><td>CCS</td><td>Compressed class  空间利用率</td><td>Compressed class space utilization as a percentage.</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时 young generation gc次数</td><td>Number of young generation GC events.</td></tr><tr><td>YGCT</td><td>从应用程序启动到采样时Young gc所用时间(s)</td><td>Young generation garbage collection time.</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时Full gc次数</td><td>Number of full GC events.</td></tr><tr><td>FGCT</td><td>从应用程序启动到采样时Full gc所用时间(s)</td><td>Full garbage collection time.</td></tr><tr><td>GCT</td><td>从应用程序启动到采样时gc用的总时间(s)</td><td>Total garbage collection time.</td></tr></tbody></table><h3 id="3-1-12-jstat-printcompilation-13050"><a href="#3-1-12-jstat-printcompilation-13050" class="headerlink" title="(3.1.12) jstat -printcompilation 13050"></a>(3.1.12) jstat -printcompilation 13050</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -printcompilation 13050</span><br><span class="line">Compiled  Size  Type Method</span><br><span class="line">    7469     63    1 org/apache/logging/log4j/spi/AbstractLogger trace</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p><br></p><h2 id="3-2-常用jstat命令"><a href="#3-2-常用jstat命令" class="headerlink" title="(3.2) 常用jstat命令"></a>(3.2) 常用jstat命令</h2><h3 id="3-2-1-jstat-gc-h5-t-13050-1000-10"><a href="#3-2-1-jstat-gc-h5-t-13050-1000-10" class="headerlink" title="(3.2.1) jstat -gc -h5 -t 13050  1000 10"></a>(3.2.1) jstat -gc -h5 -t 13050  1000 10</h3><blockquote><p>分析进程id为13050的gc情况，每隔1000ms打印一次记录，打印10次停止，每5行后打印指标头部<br>-gc 查看gc情况<br>-h5 每5行后打印指标头部<br>-t 进程启动时间<br>13050 进程id 也就是linux的pid<br>1000 每隔1000ms打印一次<br>10 共打印10行</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gc -h5 -t 13050  1000 10</span><br><span class="line">Timestamp        S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">       217492.5 8512.0 8512.0  0.0    77.3  68160.0  13154.8   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217493.7 8512.0 8512.0  0.0    77.3  68160.0  13154.8   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217494.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217495.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217496.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">Timestamp        S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">       217497.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217498.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217499.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217500.7 8512.0 8512.0  0.0    77.3  68160.0  14055.9   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">       217501.7 8512.0 8512.0  0.0    77.3  68160.0  14068.0   963392.0   60728.2   77732.0 71386.5 11984.0 9862.9    133    2.921   8      0.947    3.868</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><blockquote><p> 我们可以比较 Java 进程的启动时间以及总 GC 时间（GCT 列），或者两次测量的间隔时间以及总 GC 时间的增量，来得出 GC 时间占运行时间的比例。如果该比例超过 20%，则说明目前堆的压力较大；如果该比例超过 90%，则说明堆里几乎没有可用空间，随时都可能抛出 OOM 异常。</p></blockquote><h3 id="3-2-2-jstat-gcutil-h5-t-13050-1000-10"><a href="#3-2-2-jstat-gcutil-h5-t-13050-1000-10" class="headerlink" title="(3.2.2) jstat -gcutil -h5 -t 13050  1000 10"></a>(3.2.2) jstat -gcutil -h5 -t 13050  1000 10</h3><blockquote><p>分析进程id为13050的gcutil情况，每隔1000ms打印一次记录，打印15次停止，每5行后打印指标头部<br>-gcutil 查看gcutil情况<br>-h5 每5行后打印指标头部<br>-t 进程启动时间<br>13050 进程id 也就是linux的pid<br>1000 每隔1000ms打印一次<br>10 共打印10行</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstat -gcutil -h5 -t 13050  1000 10</span><br><span class="line">Timestamp         S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">       217569.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217570.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217571.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217572.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217573.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">Timestamp         S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT</span><br><span class="line">       217574.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217575.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217576.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217577.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">       217578.9   0.00   0.91  23.55   6.30  91.84  82.30    133    2.921     8    0.947    3.868</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="4-Java配置信息工具-jinfo-Java-Configuration-Info"><a href="#4-Java配置信息工具-jinfo-Java-Configuration-Info" class="headerlink" title="(4) Java配置信息工具 jinfo (Java Configuration Info )"></a>(4) Java配置信息工具 jinfo (Java Configuration Info )</h1><blockquote><p>jinfo是实时查看和调整虚拟机各项参数的工具</p></blockquote><h2 id="4-1-jinfo命令"><a href="#4-1-jinfo命令" class="headerlink" title="(4.1) jinfo命令"></a>(4.1) jinfo命令</h2><p>语法格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jinfo [ option ] pid</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -help</span><br><span class="line">Usage:</span><br><span class="line">    jinfo [option] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jinfo [option] &lt;executable &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jinfo [option] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to remote debug server)</span><br><span class="line"></span><br><span class="line">where &lt;option&gt; is one of:</span><br><span class="line">    -flag &lt;name&gt;         to print the value of the named VM flag</span><br><span class="line">    -flag [+|-]&lt;name&gt;    to enable or disable the named VM flag</span><br><span class="line">    -flag &lt;name&gt;=&lt;value&gt; to set the named VM flag to the given value</span><br><span class="line">    -flags               to print VM flags</span><br><span class="line">    -sysprops            to print Java system properties</span><br><span class="line">    &lt;no option&gt;          to print both of the above</span><br><span class="line">    -h | -help           to print this help message</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -option</span><br><span class="line">Usage:</span><br><span class="line">    jinfo [option] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jinfo [option] &lt;executable &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jinfo [option] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to remote debug server)</span><br><span class="line"></span><br><span class="line">where &lt;option&gt; is one of:</span><br><span class="line">    -flag &lt;name&gt;         to print the value of the named VM flag</span><br><span class="line">    -flag [+|-]&lt;name&gt;    to enable or disable the named VM flag</span><br><span class="line">    -flag &lt;name&gt;=&lt;value&gt; to set the named VM flag to the given value</span><br><span class="line">    -flags               to print VM flags</span><br><span class="line">    -sysprops            to print Java system properties</span><br><span class="line">    &lt;no option&gt;          to print both of the above</span><br><span class="line">    -h | -help           to print this help message</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p>  如果遇到 <code>Error attaching to process: sun.jvm.hotspot.debugger.DebuggerException: Can&#39;t attach to the process: ptrace(PTRACE_ATTACH, ..) failed for : Operation not permitted</code>，执行 <code>echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope</code>命令即可</p><h3 id="4-1-1-jinfo-pid"><a href="#4-1-1-jinfo-pid" class="headerlink" title="(4.1.1) jinfo pid"></a>(4.1.1) jinfo pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line">Java System Properties:</span><br><span class="line"></span><br><span class="line">jna.platform.library.path = /usr/lib64:/lib64:/usr/lib:/lib:/usr/lib64/dyninst:/usr/lib64/mysql</span><br><span class="line">java.runtime.name = Java(TM) SE Runtime Environment</span><br><span class="line">sun.boot.library.path = /home/wkq/software/jdk1.8.0_172/jre/lib/amd64</span><br><span class="line">java.vm.version = 25.172-b11</span><br><span class="line">es.path.home = /home/wkq/software/elasticsearch-6.6.2</span><br><span class="line">log4j.shutdownHookEnabled = false</span><br><span class="line">java.vendor.url = http://java.oracle.com/</span><br><span class="line">java.vm.vendor = Oracle Corporation</span><br><span class="line">path.separator = :</span><br><span class="line">file.encoding.pkg = sun.io</span><br><span class="line">java.vm.name = Java HotSpot(TM) 64-Bit Server VM</span><br><span class="line">jna.loaded = true</span><br><span class="line">sun.os.patch.level = unknown</span><br><span class="line">user.country = US</span><br><span class="line">sun.java.launcher = SUN_STANDARD</span><br><span class="line">es.networkaddress.cache.negative.ttl = 10</span><br><span class="line">jna.nosys = true</span><br><span class="line">java.vm.specification.name = Java Virtual Machine Specification</span><br><span class="line">user.dir = /home/wkq/software/elasticsearch-6.6.2</span><br><span class="line">java.runtime.version = 1.8.0_172-b11</span><br><span class="line">java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment</span><br><span class="line">java.endorsed.dirs = /home/wkq/software/jdk1.8.0_172/jre/lib/endorsed</span><br><span class="line">os.arch = amd64</span><br><span class="line">java.io.tmpdir = /tmp/elasticsearch-5035355569386013893</span><br><span class="line">line.separator =</span><br><span class="line"></span><br><span class="line">es.networkaddress.cache.ttl = 60</span><br><span class="line">es.logs.node_name = elasticsearch_001_data</span><br><span class="line">java.vm.specification.vendor = Oracle Corporation</span><br><span class="line">os.name = Linux</span><br><span class="line">io.netty.noKeySetOptimization = true</span><br><span class="line">sun.jnu.encoding = ANSI_X3.4-1968</span><br><span class="line">jnidispatch.path = /tmp/elasticsearch-5035355569386013893/jna-117789/jna8829728915470247279.tmp</span><br><span class="line">java.library.path = /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib</span><br><span class="line">sun.nio.ch.bugLevel =</span><br><span class="line">es.logs.cluster_name = elasticsearch_test</span><br><span class="line">java.specification.name = Java Platform API Specification</span><br><span class="line">java.class.version = 52.0</span><br><span class="line">sun.management.compiler = HotSpot 64-Bit Tiered Compilers</span><br><span class="line">os.version = 3.10.0-957.21.3.el7.x86_64</span><br><span class="line">user.home = /home/wkq</span><br><span class="line">user.timezone = Asia/Shanghai</span><br><span class="line">java.awt.printerjob = sun.print.PSPrinterJob</span><br><span class="line">file.encoding = UTF-8</span><br><span class="line">java.specification.version = 1.8</span><br><span class="line">es.distribution.type = tar</span><br><span class="line">io.netty.recycler.maxCapacityPerThread = 0</span><br><span class="line">user.name = wkq</span><br><span class="line">es.logs.base_path = /home/wkq/software/elasticsearch-6.6.2/logs</span><br><span class="line">java.class.path =  </span><br><span class="line">es.path.conf = /home/wkq/software/elasticsearch-6.6.2/config</span><br><span class="line">java.vm.specification.version = 1.8</span><br><span class="line">java.home = /home/wkq/software/jdk1.8.0_172/jre</span><br><span class="line">sun.java.command = org.elasticsearch.bootstrap.Elasticsearch -d</span><br><span class="line">sun.arch.data.model = 64</span><br><span class="line">io.netty.noUnsafe = true</span><br><span class="line">user.language = en</span><br><span class="line">java.specification.vendor = Oracle Corporation</span><br><span class="line">awt.toolkit = sun.awt.X11.XToolkit</span><br><span class="line">java.vm.info = mixed mode</span><br><span class="line">java.version = 1.8.0_172</span><br><span class="line">java.ext.dirs = /home/wkq/software/jdk1.8.0_172/jre/lib/ext:/usr/java/packages/lib/ext</span><br><span class="line">sun.boot.class.path =  </span><br><span class="line">java.awt.headless = true</span><br><span class="line">java.vendor = Oracle Corporation</span><br><span class="line">file.separator = /</span><br><span class="line">java.vendor.url.bug = http://bugreport.sun.com/bugreport/</span><br><span class="line">es.distribution.flavor = default</span><br><span class="line">sun.io.unicode.encoding = UnicodeLittle</span><br><span class="line">sun.cpu.endian = little</span><br><span class="line">log4j2.disable.jmx = true</span><br><span class="line">sun.cpu.isalist =</span><br><span class="line"></span><br><span class="line">VM Flags:</span><br><span class="line">Non-default VM flags: -XX:+AlwaysPreTouch -XX:CICompilerCount=2 -XX:CMSInitiatingOccupancyFraction=75 -XX:ErrorFile=null -XX:GCLogFileSize=67108864 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=null -XX:InitialHeapSize=1073741824 -XX:MaxHeapSize=1073741824 -XX:MaxNewSize=87228416 -XX:MaxTenuringThreshold=6 -XX:MinHeapDeltaBytes=196608 -XX:NewSize=87228416 -XX:NumberOfGCLogFiles=32 -XX:OldPLABSize=16 -XX:OldSize=986513408 -XX:-OmitStackTraceInFastThrow -XX:+PrintGC -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:ThreadStackSize=1024 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseGCLogFileRotation -XX:+UseParNewGC</span><br><span class="line">Command line:  -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch-5035355569386013893 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/home/wkq/software/elasticsearch-6.6.2 -Des.path.conf=/home/wkq/software/elasticsearch-6.6.2/config -Des.distribution.flavor=default -Des.distribution.type=tar</span><br><span class="line"></span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-2-jinfo-flag-MaxMetaspaceSize-pid"><a href="#4-1-2-jinfo-flag-MaxMetaspaceSize-pid" class="headerlink" title="(4.1.2) jinfo -flag MaxMetaspaceSize pid"></a>(4.1.2) jinfo -flag MaxMetaspaceSize pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag MaxMetaspaceSize 13050</span><br><span class="line">-XX:MaxMetaspaceSize=18446744073709547520</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-3-jinfo-flag-ThreadStackSize-pid"><a href="#4-1-3-jinfo-flag-ThreadStackSize-pid" class="headerlink" title="(4.1.3) jinfo -flag ThreadStackSize pid"></a>(4.1.3) jinfo -flag ThreadStackSize pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag ThreadStackSize 13050</span><br><span class="line">-XX:ThreadStackSize=1024</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-4-jinfo-flag-MaxNewSize-pid"><a href="#4-1-4-jinfo-flag-MaxNewSize-pid" class="headerlink" title="(4.1.4) jinfo -flag MaxNewSize pid"></a>(4.1.4) jinfo -flag MaxNewSize pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag MaxNewSize 13050</span><br><span class="line">-XX:MaxNewSize=87228416</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-5-jinfo-flag-CMSInitiatingOccupancyFraction-pid"><a href="#4-1-5-jinfo-flag-CMSInitiatingOccupancyFraction-pid" class="headerlink" title="(4.1.5) jinfo -flag CMSInitiatingOccupancyFraction pid"></a>(4.1.5) jinfo -flag CMSInitiatingOccupancyFraction pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag CMSInitiatingOccupancyFraction 13050</span><br><span class="line">-XX:CMSInitiatingOccupancyFraction=75</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-6-查看所有JVM参数-java-XX-PrintFlagsInitial"><a href="#4-1-6-查看所有JVM参数-java-XX-PrintFlagsInitial" class="headerlink" title="(4.1.6) 查看所有JVM参数 java -XX:+PrintFlagsInitial"></a>(4.1.6) 查看所有JVM参数 java -XX:+PrintFlagsInitial</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ java -XX:+PrintFlagsInitial</span><br><span class="line">[Global flags]</span><br><span class="line">    uintx AdaptiveSizeDecrementScaleFactor          = 4                                   &#123;product&#125;</span><br><span class="line">    uintx AdaptiveSizeMajorGCDecayTimeScale         = 10                                  &#123;product&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">     intx WorkAroundNPTLTimedWaitHang               = 1                                   &#123;product&#125;</span><br><span class="line">    uintx YoungGenerationSizeIncrement              = 20                                  &#123;product&#125;</span><br><span class="line">    uintx YoungGenerationSizeSupplement             = 80                                  &#123;product&#125;</span><br><span class="line">    uintx YoungGenerationSizeSupplementDecay        = 8                                   &#123;product&#125;</span><br><span class="line">    uintx YoungPLABSize                             = 4096                                &#123;product&#125;</span><br><span class="line">     bool ZeroTLAB                                  = false                               &#123;product&#125;</span><br><span class="line">     intx hashCode                                  = 5                                   &#123;product&#125;</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-7-查看所有支持动态修改的JVM参数-java-XX-PrintFlagsInitial-grep-manageable"><a href="#4-1-7-查看所有支持动态修改的JVM参数-java-XX-PrintFlagsInitial-grep-manageable" class="headerlink" title="(4.1.7) 查看所有支持动态修改的JVM参数 java -XX:+PrintFlagsInitial | grep manageable"></a>(4.1.7) 查看所有支持动态修改的JVM参数 java -XX:+PrintFlagsInitial | grep manageable</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ java -XX:+PrintFlagsInitial | grep manageable</span><br><span class="line">     intx CMSAbortablePrecleanWaitMillis            = 100                                 &#123;manageable&#125;</span><br><span class="line">     intx CMSTriggerInterval                        = -1                                  &#123;manageable&#125;</span><br><span class="line">     intx CMSWaitDuration                           = 2000                                &#123;manageable&#125;</span><br><span class="line">     bool HeapDumpAfterFullGC                       = false                               &#123;manageable&#125;</span><br><span class="line">     bool HeapDumpBeforeFullGC                      = false                               &#123;manageable&#125;</span><br><span class="line">     bool HeapDumpOnOutOfMemoryError                = false                               &#123;manageable&#125;</span><br><span class="line">    ccstr HeapDumpPath                              =                                     &#123;manageable&#125;</span><br><span class="line">    uintx MaxHeapFreeRatio                          = 70                                  &#123;manageable&#125;</span><br><span class="line">    uintx MinHeapFreeRatio                          = 40                                  &#123;manageable&#125;</span><br><span class="line">     bool PrintClassHistogram                       = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintClassHistogramAfterFullGC            = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintClassHistogramBeforeFullGC           = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintConcurrentLocks                      = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintGC                                   = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintGCDateStamps                         = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintGCDetails                            = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintGCID                                 = false                               &#123;manageable&#125;</span><br><span class="line">     bool PrintGCTimeStamps                         = false                               &#123;manageable&#125;</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="4-1-7-调整JVM参数-布尔类型"><a href="#4-1-7-调整JVM参数-布尔类型" class="headerlink" title="(4.1.7) 调整JVM参数-布尔类型"></a>(4.1.7) 调整JVM参数-布尔类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jinfo -flag [+|-]&lt;name&gt; PID</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag +PrintGC 13050</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag +PrintGCDetails 13050</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><blockquote><p>如果没报错则代表生效，加完以后可以通过 <code>jinfo -flags 13050</code> 验证</p></blockquote><h3 id="4-1-8-调整JVM参数-数字-字符串类型"><a href="#4-1-8-调整JVM参数-数字-字符串类型" class="headerlink" title="(4.1.8) 调整JVM参数-数字/字符串类型"></a>(4.1.8) 调整JVM参数-数字/字符串类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jinfo -flag &lt;name&gt;=&lt;value&gt; PID</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag MaxHeapFreeRatio=65 13050</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><blockquote><p>没报错相当于修改成功，但是怎么验证是否生效，可以通过 <code>jinfo -flags 13050</code> 验证  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flags 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line">Non-default VM flags: -XX:+AlwaysPreTouch -XX:CICompilerCount=2 -XX:CMSInitiatingOccupancyFraction=75 -XX:ErrorFile=null -XX:GCLogFileSize=67108864 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=null -XX:InitialHeapSize=1073741824 -XX:MaxHeapFreeRatio=65 -XX:MaxHeapSize=1073741824 -XX:MaxNewSize=87228416 -XX:MaxTenuringThreshold=6 -XX:MinHeapDeltaBytes=196608 -XX:NewSize=87228416 -XX:NumberOfGCLogFiles=32 -XX:OldPLABSize=16 -XX:OldSize=986513408 -XX:-OmitStackTraceInFastThrow -XX:+PrintGC -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:ThreadStackSize=1024 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseGCLogFileRotation -XX:+UseParNewGC</span><br><span class="line">Command line:  -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch-5035355569386013893 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/home/wkq/software/elasticsearch-6.6.2 -Des.path.conf=/home/wkq/software/elasticsearch-6.6.2/config -Des.distribution.flavor=default -Des.distribution.type=tar</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p>  通过 <code>jinfo -flags 13050</code> 获取的结果可以看到 </p><blockquote><p>出现 Command failed in target VM 则表示这个flag参数不支持<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jinfo -flag ErrorFile=/home/wkq/es_error_file 13050</span><br><span class="line">Exception in thread &quot;main&quot; com.sun.tools.attach.AttachOperationFailedException: flag &apos;ErrorFile&apos; cannot be changed</span><br><span class="line"></span><br><span class="line">at sun.tools.attach.LinuxVirtualMachine.execute(LinuxVirtualMachine.java:229)</span><br><span class="line">at sun.tools.attach.HotSpotVirtualMachine.executeCommand(HotSpotVirtualMachine.java:261)</span><br><span class="line">at sun.tools.attach.HotSpotVirtualMachine.setFlag(HotSpotVirtualMachine.java:234)</span><br><span class="line">at sun.tools.jinfo.JInfo.flag(JInfo.java:134)</span><br><span class="line">at sun.tools.jinfo.JInfo.main(JInfo.java:81)</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure></p></blockquote><p><br><br><br></p><h1 id="5-Java内存映像工具-jmap"><a href="#5-Java内存映像工具-jmap" class="headerlink" title="(5) Java内存映像工具 jmap"></a>(5) Java内存映像工具 jmap</h1><blockquote><p> Jmap是一个可以输出所有内存中对象的工具，甚至可以将VM 中的heap，以二进制输出成文本。打印出某个java进程（使用pid）内存内的，所有‘对象’的情况（如：产生那些对象，及其数量）。</p></blockquote><h2 id="5-1-jmap命令"><a href="#5-1-jmap命令" class="headerlink" title="(5.1) jmap命令"></a>(5.1) jmap命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -help</span><br><span class="line">Usage:</span><br><span class="line">    jmap [option] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jmap [option] &lt;executable &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jmap [option] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to remote debug server)</span><br><span class="line"></span><br><span class="line">where &lt;option&gt; is one of:</span><br><span class="line">    &lt;none&gt;               to print same info as Solaris pmap</span><br><span class="line">    -heap                to print java heap summary</span><br><span class="line">    -histo[:live]        to print histogram of java object heap; if the &quot;live&quot;</span><br><span class="line">                         suboption is specified, only count live objects</span><br><span class="line">    -clstats             to print class loader statistics</span><br><span class="line">    -finalizerinfo       to print information on objects awaiting finalization</span><br><span class="line">    -dump:&lt;dump-options&gt; to dump java heap in hprof binary format</span><br><span class="line">                         dump-options:</span><br><span class="line">                           live         dump only live objects; if not specified,</span><br><span class="line">                                        all objects in the heap are dumped.</span><br><span class="line">                           format=b     binary format</span><br><span class="line">                           file=&lt;file&gt;  dump heap to &lt;file&gt;</span><br><span class="line">                         Example: jmap -dump:live,format=b,file=heap.bin &lt;pid&gt;</span><br><span class="line">    -F                   force. Use with -dump:&lt;dump-options&gt; &lt;pid&gt; or -histo</span><br><span class="line">                         to force a heap dump or histogram when &lt;pid&gt; does not</span><br><span class="line">                         respond. The &quot;live&quot; suboption is not supported</span><br><span class="line">                         in this mode.</span><br><span class="line">    -h | -help           to print this help message</span><br><span class="line">    -J&lt;flag&gt;             to pass &lt;flag&gt; directly to the runtime system</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -options</span><br><span class="line">Usage:</span><br><span class="line">    jmap [option] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jmap [option] &lt;executable &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jmap [option] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to remote debug server)</span><br><span class="line"></span><br><span class="line">where &lt;option&gt; is one of:</span><br><span class="line">    &lt;none&gt;               to print same info as Solaris pmap</span><br><span class="line">    -heap                to print java heap summary</span><br><span class="line">    -histo[:live]        to print histogram of java object heap; if the &quot;live&quot;</span><br><span class="line">                         suboption is specified, only count live objects</span><br><span class="line">    -clstats             to print class loader statistics</span><br><span class="line">    -finalizerinfo       to print information on objects awaiting finalization</span><br><span class="line">    -dump:&lt;dump-options&gt; to dump java heap in hprof binary format</span><br><span class="line">                         dump-options:</span><br><span class="line">                           live         dump only live objects; if not specified,</span><br><span class="line">                                        all objects in the heap are dumped.</span><br><span class="line">                           format=b     binary format</span><br><span class="line">                           file=&lt;file&gt;  dump heap to &lt;file&gt;</span><br><span class="line">                         Example: jmap -dump:live,format=b,file=heap.bin &lt;pid&gt;</span><br><span class="line">    -F                   force. Use with -dump:&lt;dump-options&gt; &lt;pid&gt; or -histo</span><br><span class="line">                         to force a heap dump or histogram when &lt;pid&gt; does not</span><br><span class="line">                         respond. The &quot;live&quot; suboption is not supported</span><br><span class="line">                         in this mode.</span><br><span class="line">    -h | -help           to print this help message</span><br><span class="line">    -J&lt;flag&gt;             to pass &lt;flag&gt; directly to the runtime system</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><blockquote><p> 更多详细信息参考 <code>man jmap</code></p></blockquote><h3 id="5-1-1-jmap-pid"><a href="#5-1-1-jmap-pid" class="headerlink" title="(5.1.1) jmap pid"></a>(5.1.1) jmap pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line">0x00000000004000007K/home/wkq/software/jdk1.8.0_172/bin/java</span><br><span class="line">0x00007fb91127100049K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libmanagement.so</span><br><span class="line">0x00007fb91167a00086K/usr/lib64/libgcc_s-4.8.5-20150702.so.1</span><br><span class="line">0x00007fb911890000251K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libsunec.so</span><br><span class="line">0x00007fb9242c2000112K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libnet.so</span><br><span class="line">0x00007fb9244d900091K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libnio.so</span><br><span class="line">0x00007fb94065d000125K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libzip.so</span><br><span class="line">0x00007fb94087900060K/usr/lib64/libnss_files-2.17.so</span><br><span class="line">0x00007fb940a8c000221K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libjava.so</span><br><span class="line">0x00007fb940cb800064K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/libverify.so</span><br><span class="line">0x00007fb940ec700043K/usr/lib64/librt-2.17.so</span><br><span class="line">0x00007fb9410cf0001115K/usr/lib64/libm-2.17.so</span><br><span class="line">0x00007fb9413d100016667K/home/wkq/software/jdk1.8.0_172/jre/lib/amd64/server/libjvm.so</span><br><span class="line">0x00007fb9423d20002068K/usr/lib64/libc-2.17.so</span><br><span class="line">0x00007fb94279300019K/usr/lib64/libdl-2.17.so</span><br><span class="line">0x00007fb942997000101K/home/wkq/software/jdk1.8.0_172/lib/amd64/jli/libjli.so</span><br><span class="line">0x00007fb942bad000140K/usr/lib64/libpthread-2.17.so</span><br><span class="line">0x00007fb942dc9000155K/usr/lib64/ld-2.17.so</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="5-1-2-jmap-dump-live-format-b-file-file-path"><a href="#5-1-2-jmap-dump-live-format-b-file-file-path" class="headerlink" title="(5.1.2) jmap -dump:[live,] format=b, file=file_path"></a>(5.1.2) jmap -dump:[live,] format=b, file=file_path</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -dump:live,format=b,file=13050.log 13050</span><br><span class="line">Dumping heap to /home/wkq/13050.log ...</span><br><span class="line">Heap dump file created</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="5-1-3-jmap-finalizerinfo-pid"><a href="#5-1-3-jmap-finalizerinfo-pid" class="headerlink" title="(5.1.3) jmap -finalizerinfo pid"></a>(5.1.3) jmap -finalizerinfo pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -finalizerinfo 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line">Number of objects pending for finalization: 0</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="5-1-4-jmap-heap-pid"><a href="#5-1-4-jmap-heap-pid" class="headerlink" title="(5.1.4) jmap -heap pid"></a>(5.1.4) jmap -heap pid</h3><blockquote><p> jmap -heap pid<br> jmap-J-d64 -heap pid</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -heap 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line"></span><br><span class="line">using parallel threads in the new generation.</span><br><span class="line">using thread-local object allocation.</span><br><span class="line">Concurrent Mark-Sweep GC</span><br><span class="line"></span><br><span class="line">Heap Configuration:</span><br><span class="line">   MinHeapFreeRatio         = 40</span><br><span class="line">   MaxHeapFreeRatio         = 70</span><br><span class="line">   MaxHeapSize              = 1073741824 (1024.0MB)</span><br><span class="line">   NewSize                  = 87228416 (83.1875MB)</span><br><span class="line">   MaxNewSize               = 87228416 (83.1875MB)</span><br><span class="line">   OldSize                  = 986513408 (940.8125MB)</span><br><span class="line">   NewRatio                 = 2</span><br><span class="line">   SurvivorRatio            = 8</span><br><span class="line">   MetaspaceSize            = 21807104 (20.796875MB)</span><br><span class="line">   CompressedClassSpaceSize = 1073741824 (1024.0MB)</span><br><span class="line">   MaxMetaspaceSize         = 17592186044415 MB</span><br><span class="line">   G1HeapRegionSize         = 0 (0.0MB)</span><br><span class="line"></span><br><span class="line">Heap Usage:</span><br><span class="line">New Generation (Eden + 1 Survivor Space):</span><br><span class="line">   capacity = 78512128 (74.875MB)</span><br><span class="line">   used     = 7022576 (6.6972503662109375MB)</span><br><span class="line">   free     = 71489552 (68.17774963378906MB)</span><br><span class="line">   8.94457477958055% used</span><br><span class="line">Eden Space:</span><br><span class="line">   capacity = 69795840 (66.5625MB)</span><br><span class="line">   used     = 7022576 (6.6972503662109375MB)</span><br><span class="line">   free     = 62773264 (59.86524963378906MB)</span><br><span class="line">   10.061596794307512% used</span><br><span class="line">From Space:</span><br><span class="line">   capacity = 8716288 (8.3125MB)</span><br><span class="line">   used     = 0 (0.0MB)</span><br><span class="line">   free     = 8716288 (8.3125MB)</span><br><span class="line">   0.0% used</span><br><span class="line">To Space:</span><br><span class="line">   capacity = 8716288 (8.3125MB)</span><br><span class="line">   used     = 0 (0.0MB)</span><br><span class="line">   free     = 8716288 (8.3125MB)</span><br><span class="line">   0.0% used</span><br><span class="line">concurrent mark-sweep generation:</span><br><span class="line">   capacity = 986513408 (940.8125MB)</span><br><span class="line">   used     = 62168384 (59.28839111328125MB)</span><br><span class="line">   free     = 924345024 (881.5241088867188MB)</span><br><span class="line">   6.301828591061582% used</span><br><span class="line"></span><br><span class="line">22982 interned Strings occupying 3212304 bytes.</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="5-1-5-jmap-histo-pid"><a href="#5-1-5-jmap-histo-pid" class="headerlink" title="(5.1.5) jmap -histo pid"></a>(5.1.5) jmap -histo pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -histo 13050 | more</span><br><span class="line"></span><br><span class="line"> num     #instances         #bytes  class name</span><br><span class="line">----------------------------------------------</span><br><span class="line">   1:        258021       20550728  [C</span><br><span class="line">   2:        432469       13839008  java.util.HashMap$Node</span><br><span class="line">   3:        228108        5474592  java.lang.String</span><br><span class="line">   4:         38596        4839800  [Ljava.util.HashMap$Node;</span><br><span class="line">   5:         86202        4137696  java.util.HashMap</span><br><span class="line">   6:         21464        2574920  [B</span><br><span class="line">   7:         74456        2382592  java.util.Collections$UnmodifiableMap</span><br><span class="line">   8:         12306        2118456  [I</span><br><span class="line">   9:         30839        1957320  [Ljava.lang.Object;</span><br><span class="line">  10:         15798        1730136  java.lang.Class</span><br><span class="line">  11:         52294        1673408  java.util.concurrent.ConcurrentHashMap$Node</span><br><span class="line">  12:         24594         787008  java.util.AbstractList$Itr</span><br><span class="line">  13:         49038         784608  org.elasticsearch.common.lucene.LoggerInfoStream$$Lambda$3048/931367447</span><br><span class="line">  14:         24519         784608  org.elasticsearch.index.engine.Engine$$Lambda$3100/1060530393</span><br><span class="line">  15:         23576         754432  java.lang.ref.WeakReference</span><br><span class="line">  16:         30639         735336  java.util.Arrays$ArrayList</span><br><span class="line">  17:         24519         588456  [Lorg.elasticsearch.common.lease.Releasable;</span><br><span class="line">  18:         24519         588456  org.elasticsearch.index.engine.Engine$Searcher</span><br><span class="line">  19:          8132         585504  java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask</span><br><span class="line">  20:          9564         535584  java.lang.invoke.MemberName</span><br><span class="line">  21:          6052         532576  java.lang.reflect.Method</span><br><span class="line">  22:         33099         529584  java.lang.Object</span><br></pre></td></tr></table></figure><h3 id="5-1-6-jmap-clstats-pid"><a href="#5-1-6-jmap-clstats-pid" class="headerlink" title="(5.1.6) jmap -clstats pid"></a>(5.1.6) jmap -clstats pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jmap -clstats 13050</span><br><span class="line">Attaching to process ID 13050, please wait...</span><br><span class="line">Debugger attached successfully.</span><br><span class="line">Server compiler detected.</span><br><span class="line">JVM version is 25.172-b11</span><br><span class="line">finding class loader instances ..</span><br><span class="line">done.</span><br><span class="line">computing per loader stat ..done.</span><br><span class="line">please wait.. computing liveness.liveness analysis may be inaccurate ...</span><br><span class="line">class_loaderclassesbytesparent_loaderalive?type</span><br><span class="line"></span><br><span class="line">&lt;bootstrap&gt;23534122324  null  live&lt;internal&gt;</span><br><span class="line">0x00000000c5fa93781714  null  deadorg/elasticsearch/painless/lookup/PainlessLookupBuilder$BridgeLoader@0x00000001003f45d0</span><br><span class="line">0x00000000c5fa98781714  null  deadorg/elasticsearch/painless/lookup/PainlessLookupBuilder$BridgeLoader@0x00000001003f45d0</span><br><span class="line">0x00000000c58b8708000x00000000c544a3d0deadorg/elasticsearch/plugins/ExtendedPluginsClassLoader@0x0000000100263e90</span><br><span class="line">0x00000000c5ab86a8114710x00000000c544a3d0deadsun/reflect/DelegatingClassLoader@0x000000010000a028</span><br><span class="line">0x00000000c5ac4b2811201820x00000000c5c12600deadjava/net/FactoryURLClassLoader@0x0000000100259738</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">total = 861158219740221    N/A    alive=1, dead=85    N/A</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><blockquote><p> 省略部分详细信息</p></blockquote><p><br><br><br></p><h1 id="6-虚拟机堆转储快照分析工具-jhat"><a href="#6-虚拟机堆转储快照分析工具-jhat" class="headerlink" title="(6) 虚拟机堆转储快照分析工具 jhat"></a>(6) 虚拟机堆转储快照分析工具 jhat</h1><p><br><br><br></p><h1 id="7-Java堆栈跟踪工具-jstack-Java-Stack-Trace"><a href="#7-Java堆栈跟踪工具-jstack-Java-Stack-Trace" class="headerlink" title="(7) Java堆栈跟踪工具 jstack (Java Stack Trace)"></a>(7) Java堆栈跟踪工具 jstack (Java Stack Trace)</h1><blockquote><p> jstack主要用来查看某个Java进程内的线程堆栈信息。<br>在实际运行中，往往一次 dump的信息，还不足以确认问题。建议产生三次 dump信息，如果每次 dump都指向同一个问题，我们才确定问题的典型性。 </p></blockquote><h2 id="7-1-jstack命令"><a href="#7-1-jstack命令" class="headerlink" title="(7.1) jstack命令"></a>(7.1) jstack命令</h2><figure class="highlight plain"><figcaption><span>~]$ jstack -help</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Usage:</span><br><span class="line">    jstack [-l] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jstack -F [-m] [-l] &lt;pid&gt;</span><br><span class="line">        (to connect to a hung process)</span><br><span class="line">    jstack [-m] [-l] &lt;executable&gt; &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jstack [-m] [-l] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to a remote debug server)</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">    -F  to force a thread dump. Use when jstack &lt;pid&gt; does not respond (process is hung)</span><br><span class="line">    -m  to print both java and native frames (mixed mode)</span><br><span class="line">    -l  long listing. Prints additional information about locks</span><br><span class="line">    -h or -help to print this help message</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstack -options</span><br><span class="line">Usage:</span><br><span class="line">    jstack [-l] &lt;pid&gt;</span><br><span class="line">        (to connect to running process)</span><br><span class="line">    jstack -F [-m] [-l] &lt;pid&gt;</span><br><span class="line">        (to connect to a hung process)</span><br><span class="line">    jstack [-m] [-l] &lt;executable&gt; &lt;core&gt;</span><br><span class="line">        (to connect to a core file)</span><br><span class="line">    jstack [-m] [-l] [server_id@]&lt;remote server IP or hostname&gt;</span><br><span class="line">        (to connect to a remote debug server)</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">    -F  to force a thread dump. Use when jstack &lt;pid&gt; does not respond (process is hung)</span><br><span class="line">    -m  to print both java and native frames (mixed mode)</span><br><span class="line">    -l  long listing. Prints additional information about locks</span><br><span class="line">    -h or -help to print this help message</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="7-1-1-jstack-pid"><a href="#7-1-1-jstack-pid" class="headerlink" title="(7.1.1) jstack pid"></a>(7.1.1) jstack pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstack  13050</span><br><span class="line">2020-03-29 08:55:30</span><br><span class="line">Full thread dump Java HotSpot(TM) 64-Bit Server VM (25.172-b11 mixed mode):</span><br><span class="line"></span><br><span class="line">&quot;Attach Listener&quot; #48 daemon prio=9 os_prio=0 tid=0x00007fb90805b800 nid=0x1c9f waiting on condition [0x0000000000000000]</span><br><span class="line">   java.lang.Thread.State: RUNNABLE</span><br><span class="line"></span><br><span class="line">&quot;elasticsearch[elasticsearch_001_data][flush][T#1]&quot; #47 daemon prio=5 os_prio=0 tid=0x00007fb93c693800 nid=0x376c waiting on condition [0x00007fb8fd520000]</span><br><span class="line">   java.lang.Thread.State: WAITING (parking)</span><br><span class="line">at sun.misc.Unsafe.park(Native Method)</span><br><span class="line">- parking to wait for  &lt;0x00000000c600d388&gt; (a org.elasticsearch.common.util.concurrent.EsExecutors$ExecutorScalingQueue)</span><br><span class="line">...</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h3 id="7-1-2-jstack-l-pid"><a href="#7-1-2-jstack-l-pid" class="headerlink" title="(7.1.2) jstack -l pid"></a>(7.1.2) jstack -l pid</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ jstack -l 13050</span><br><span class="line">2020-03-29 23:09:50</span><br><span class="line">Full thread dump Java HotSpot(TM) 64-Bit Server VM (25.172-b11 mixed mode):</span><br><span class="line"></span><br><span class="line">&quot;elasticsearch[elasticsearch_001_data][generic][T#8]&quot; #51 daemon prio=5 os_prio=0 tid=0x00007fb93df68000 nid=0x77cf waiting on condition [0x00007fb8ff934000]</span><br><span class="line">   java.lang.Thread.State: TIMED_WAITING (parking)</span><br><span class="line">at sun.misc.Unsafe.park(Native Method)</span><br><span class="line">- parking to wait for  &lt;0x00000000c5ed5f70&gt; (a org.elasticsearch.common.util.concurrent.EsExecutors$ExecutorScalingQueue)</span><br><span class="line">at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   Locked ownable synchronizers:</span><br><span class="line">- None</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&quot;Attach Listener&quot; #48 daemon prio=9 os_prio=0 tid=0x00007fb90805b800 nid=0x1c9f waiting on condition [0x0000000000000000]</span><br><span class="line">   java.lang.Thread.State: RUNNABLE</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&quot;VM Thread&quot; os_prio=0 tid=0x00007fb93c0b5000 nid=0x32ff runnable</span><br><span class="line"></span><br><span class="line">&quot;Gang worker#0 (Parallel GC Threads)&quot; os_prio=0 tid=0x00007fb93c01d000 nid=0x32fd runnable</span><br><span class="line"></span><br><span class="line">&quot;Concurrent Mark-Sweep GC Thread&quot; os_prio=0 tid=0x00007fb93c040000 nid=0x32fe runnable</span><br><span class="line"></span><br><span class="line">&quot;VM Periodic Task Thread&quot; os_prio=0 tid=0x00007fb93c103800 nid=0x3307 waiting on condition</span><br><span class="line"></span><br><span class="line">JNI global references: 8827</span><br><span class="line"></span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="8-Java监视与管理控制台-JConsole-Java-Monitoring-and-Managerment-Console"><a href="#8-Java监视与管理控制台-JConsole-Java-Monitoring-and-Managerment-Console" class="headerlink" title="(8) Java监视与管理控制台 JConsole (Java Monitoring and Managerment Console)"></a>(8) Java监视与管理控制台 JConsole (Java Monitoring and Managerment Console)</h1><p><br><br><br></p><h1 id="9-多合一故障处理工具-VisuaIVM-All-in-One-Java-Troubleshooting-Tool"><a href="#9-多合一故障处理工具-VisuaIVM-All-in-One-Java-Troubleshooting-Tool" class="headerlink" title="(9) 多合一故障处理工具 VisuaIVM (All-in-One Java Troubleshooting Tool)"></a>(9) 多合一故障处理工具 VisuaIVM (All-in-One Java Troubleshooting Tool)</h1><blockquote><p>VisuaIVM (All-in-One Java Troubleshooting Tool) 是到目前为止随JDK发布的功能最强大的运行监视和故障处理程序。</p></blockquote><p><br><br><br></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] 《深入理解JAVA虚拟机: JVM高级特性与最佳实践》 周志明<br>[2] <a href="https://my.oschina.net/feichexia/blog/196575" target="_blank" rel="noopener">JVM性能调优监控工具jps、jstack、jmap、jhat、jstat、hprof使用详解</a><br>[3] <a href="https://www.cnblogs.com/tulianghui/p/5914535.html" target="_blank" rel="noopener">JAVA JPS 命令详解</a><br>[4] <a href="https://blog.csdn.net/ouyang111222/article/details/53688986" target="_blank" rel="noopener">jstat使用详解（分析JVM的使用情况）</a><br>[5] <a href="https://www.cnblogs.com/duanxz/p/10240899.html" target="_blank" rel="noopener">使用Java监控工具出现 Can’t attach to the process</a><br>[6] <a href="https://my.oschina.net/javamaster/blog/1833908" target="_blank" rel="noopener">JVM系列：jinfo命令详解</a><br>[7] <a href="https://blog.csdn.net/zhaozheng7758/article/details/8623530" target="_blank" rel="noopener">jmap命令详解</a><br>[8] <a href="https://blog.csdn.net/zhaozheng7758/article/details/8623535" target="_blank" rel="noopener">jstack命令详解</a><br>[9] <a href="https://time.geekbang.org/column/article/40520" target="_blank" rel="noopener">深入拆解Java虚拟机 - 30 | Java虚拟机的监控及诊断工具（命令行篇）</a><br>[10] <a href="https://docs.oracle.com/en/java/javase/11/tools/monitoring-tools-and-commands.html" target="_blank" rel="noopener">oracle monitoring-tools-and-commands</a><br>[11] <a href="https://time.geekbang.org/column/article/40821" target="_blank" rel="noopener">深入拆解Java虚拟机 - 31 | Java虚拟机的监控及诊断工具（GUI篇）</a><br>[12] <a href="https://visualvm.github.io/index.html" target="_blank" rel="noopener">visualvm</a><br>[13] <a href="https://github.com/AdoptOpenJDK/jitwatch" target="_blank" rel="noopener">jitwatch</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 最近测试环境总是莫名的出问题，然后部署服务的容器里除了服务打印的日志，没有其它信息，想看看是什么原因导致服务很卡，是不是有哪块代码占用内存高。&lt;br&gt; 代码执行缓慢、OutOfMemoryError，内存不足、内存泄露、线程死锁、锁争用（Lock Contention）、Java进程消耗CPU过高 都可以使用JDK的命令行工具排查。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-JDK的命令行工具&quot;&gt;&lt;a href=&quot;#1-JDK的命令行工具&quot; class=&quot;headerlink&quot; title=&quot;(1) JDK的命令行工具&quot;&gt;&lt;/a&gt;(1) JDK的命令行工具&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; jps、jstat、jinfo、jmap、jhat、jstack、hprof&lt;br&gt;jps : 虚拟机进程状况工具&lt;br&gt;jstat : 虚拟机统计信息监视工具&lt;br&gt;jinfo : Java 配置信息工具&lt;br&gt;jmap : Java 内存映像工具&lt;br&gt;jhat : 虚拟机堆转储快照分析工具&lt;br&gt;jstack : Java 堆栈跟踪工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt; jps将打印所有正在运行的 Java 进程。&lt;br&gt; jstat允许用户查看目标 Java 进程的类加载、即时编译以及垃圾回收相关的信息。它常用于检测垃圾回收问题以及内存泄漏问题。&lt;br&gt; jmap允许用户统计目标 Java 进程的堆中存放的 Java 对象，并将它们导出成二进制文件。&lt;br&gt; jinfo将打印目标 Java 进程的配置参数，并能够改动其中 manageabe 的参数。&lt;br&gt; jstack将打印目标 Java 进程中各个线程的栈轨迹、线程状态、锁状况等信息。它还将自动检测死锁。&lt;br&gt; jcmd则是一把瑞士军刀，可以用来实现前面除了jstat之外所有命令的功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Java虚拟机的监控及诊断工具-GUI&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JConsole : Java 监视与管理控制台&lt;br&gt;VisualVM : 多合一故障处理工具&lt;br&gt;eclipse MAT&lt;br&gt;JMC&lt;br&gt;JITWatch&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&quot;2-虚拟机进程状况工具-jps-JVM-Process-Status-Tool&quot;&gt;&lt;a href=&quot;#2-虚拟机进程状况工具-jps-JVM-Process-Status-Tool&quot; class=&quot;headerlink&quot; title=&quot;(2) 虚拟机进程状况工具 jps (JVM Process Status Tool)&quot;&gt;&lt;/a&gt;(2) 虚拟机进程状况工具 jps (JVM Process Status Tool)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; jps主要用来输出JVM中运行的进程状态信息。&lt;br&gt; jps命令使用Java启动器来查找传递给main方法的类名和参数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$ jps -help&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;usage: jps [-help]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       jps [-q] [-mlvV] [&amp;lt;hostid&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Definitions:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;hostid&amp;gt;:      &amp;lt;hostname&amp;gt;[:&amp;lt;port&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-1-jps命令&quot;&gt;&lt;a href=&quot;#2-1-jps命令&quot; class=&quot;headerlink&quot; title=&quot;(2.1) jps命令&quot;&gt;&lt;/a&gt;(2.1) jps命令&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;jps命令用于输出JVM中运行的进程状态信息。可以获取到进程的pid、全限定名、传入main方法的参数、传入JVM的参数 等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;语法格式&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jps [ options ] [ hostid ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  如果不指定hostid就默认为当前主机或服务器。&lt;/p&gt;
&lt;p&gt;  详细信息见 &lt;code&gt;man jps&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-1-1-jps-不加参数&quot;&gt;&lt;a href=&quot;#2-1-1-jps-不加参数&quot; class=&quot;headerlink&quot; title=&quot;(2.1.1) jps 不加参数&quot;&gt;&lt;/a&gt;(2.1.1) jps 不加参数&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; 在本地主机上搜索检测到的JVM。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$ jps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14916 Jps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13050 Elasticsearch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="java" scheme="http://weikeqin.com/categories/java/"/>
    
    
      <category term="java" scheme="http://weikeqin.com/tags/java/"/>
    
      <category term="jvm" scheme="http://weikeqin.com/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>chrome-notes</title>
    <link href="http://weikeqin.com/2020/03/20/chrome-notes/"/>
    <id>http://weikeqin.com/2020/03/20/chrome-notes/</id>
    <published>2020-03-20T02:29:03.000Z</published>
    <updated>2020-03-20T02:36:24.087Z</updated>
    
    <content type="html"><![CDATA[<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://developers.google.com/web/tools/chrome-devtools/" target="_blank" rel="noopener">chrome-devtools</a><br>[] <a href="https://chrome.google.com/webstore/category/extensions" target="_blank" rel="noopener">chrome extensions</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h1&gt;&lt;p&gt;[1] &lt;a href=&quot;https://developers.google
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="http://weikeqin.com/2020/03/14/design-pattern/"/>
    <id>http://weikeqin.com/2020/03/14/design-pattern/</id>
    <published>2020-03-14T08:55:56.000Z</published>
    <updated>2020-03-28T08:39:39.666Z</updated>
    
    <content type="html"><![CDATA[<p>  其实，很多东西都是经历过，遇到问题，解决了，然后才知道。大学时候学过设计模式，但是没有实践过，很快就忘了。后来开发的时候遇到一些问题，解决了，然后感觉像哪个设计模式，回过头去看设计模式，感觉挺有用的。</p><p>  学完设计模式以后，建议用简单、高效、易维护的态度去设计开发。</p><h1 id="1-什么是设计模式"><a href="#1-什么是设计模式" class="headerlink" title="(1) 什么是设计模式"></a>(1) 什么是设计模式</h1><blockquote><p> 软件设计模式（Design pattern），又称设计模式，是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。 使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性、程序的重用性。</p></blockquote><h1 id="2-设计模式的分类"><a href="#2-设计模式的分类" class="headerlink" title="(2)  设计模式的分类"></a>(2)  设计模式的分类</h1><blockquote><p> 创建型模式：对象实例化的模式，创建型模式用于解耦对象的实例化过程。</p><p> 结构型模式：把类或对象结合在一起形成一个更大的结构。</p><p> 行为型模式：类和对象如何交互，及划分责任和算法。</p></blockquote><a id="more"></a><h1 id="3-各个模式的关键点"><a href="#3-各个模式的关键点" class="headerlink" title="(3) 各个模式的关键点"></a>(3) 各个模式的关键点</h1><blockquote><p> 单例模式：某个类只能有一个实例，提供一个全局的访问点。</p><p> 简单工厂：一个工厂类根据传入的参量决定创建出那一种产品类的实例。</p><p> 工厂方法：定义一个创建对象的接口，让子类决定实例化那个类。</p><p> 抽象工厂：创建相关或依赖对象的家族，而无需明确指定具体类。</p><p> 建造者模式：封装一个复杂对象的构建过程，并可以按步骤构造。</p><p> 原型模式：通过复制现有的实例来创建新的实例。</p><p> 适配器模式：将一个类的方法接口转换成客户希望的另外一个接口。</p><p> 组合模式：将对象组合成树形结构以表示“”部分-整体“”的层次结构。</p><p> 装饰模式：动态的给对象添加新的功能。</p><p> 代理模式：为其他对象提供一个代理以便控制这个对象的访问。</p><p> 亨元（蝇量）模式：通过共享技术来有效的支持大量细粒度的对象。</p><p> 外观模式：对外提供一个统一的方法，来访问子系统中的一群接口。</p><p> 桥接模式：将抽象部分和它的实现部分分离，使它们都可以独立的变化。</p><p> 模板模式：定义一个算法结构，而将一些步骤延迟到子类实现。</p><p> 解释器模式：给定一个语言，定义它的文法的一种表示，并定义一个解释器。</p><p> 策略模式：定义一系列算法，把他们封装起来，并且使它们可以相互替换。</p><p> 状态模式：允许一个对象在其对象内部状态改变时改变它的行为。</p><p> 观察者模式：对象间的一对多的依赖关系。</p><p> 备忘录模式：在不破坏封装的前提下，保持对象的内部状态。</p><p> 中介者模式：用一个中介对象来封装一系列的对象交互。</p><p> 命令模式：将命令请求封装为一个对象，使得可以用不同的请求来进行参数化。</p><p> 访问者模式：在不改变数据结构的前提下，增加作用于一组对象元素的新功能。</p><p> 责任链模式：将请求的发送者和接收者解耦，使的多个对象都有处理这个请求的机会。</p><p> 迭代器模式：一种遍历访问聚合对象中各个元素的方法，不暴露该对象的内部结构。</p></blockquote><blockquote><p>设计模式的六大原则 </p><ol><li>开闭原则（Open Close Principle）</li><li>里氏代换原则（Liskov Substitution Principle）</li><li>依赖倒转原则（Dependence Inversion Principle）</li><li>接口隔离原则（Interface Segregation Principle）</li><li>迪米特法则，又称最少知道原则（Demeter Principle）</li><li>合成复用原则（Composite Reuse Principle）</li></ol></blockquote><h1 id="4-概说23种设计模式"><a href="#4-概说23种设计模式" class="headerlink" title="(4) 概说23种设计模式"></a>(4) 概说23种设计模式</h1><h2 id="4-1-单例模式-Singleton-Pattern"><a href="#4-1-单例模式-Singleton-Pattern" class="headerlink" title="(4.1) 单例模式 (Singleton Pattern)"></a>(4.1) 单例模式 (Singleton Pattern)</h2><h3 id="4-1-1-什么是单例模式"><a href="#4-1-1-什么是单例模式" class="headerlink" title="(4.1.1) 什么是单例模式"></a>(4.1.1) 什么是单例模式</h3><blockquote><p> 单例模式是为确保一个类只有一个实例，并为整个系统提供一个全局访问点的一种模式方法。</p></blockquote><h3 id="4-1-2-单例模式的特点"><a href="#4-1-2-单例模式的特点" class="headerlink" title="(4.1.2) 单例模式的特点"></a>(4.1.2) 单例模式的特点</h3><blockquote><p>优点：<br> 1、在内存里只有一个实例，减少了内存的开销，尤其是频繁的创建和销毁实例。<br> 2、避免对资源的多重占用（比如写文件操作）。 </p></blockquote><blockquote><p>缺点：<br> 没有接口，不能继承，与单一职责原则冲突，一个类应该只关心内部逻辑，而不关心外面怎么样来实例化。</p></blockquote><h3 id="4-1-3-单例模式的应用"><a href="#4-1-3-单例模式的应用" class="headerlink" title="(4.1.3) 单例模式的应用"></a>(4.1.3) 单例模式的应用</h3><blockquote><p> 1、要求生产唯一序列号。<br> 2、WEB 中的计数器，不用每次刷新都在数据库里加一次，用单例先缓存起来。<br> 3、创建的一个对象需要消耗的资源过多，比如 I/O 与数据库的连接等。 例如: 在计算机系统中，线程池、缓存、日志对象、对话框、打印机、显卡的驱动程序对象常被设计成单例。</p></blockquote><h3 id="4-1-4-单例模式的实现"><a href="#4-1-4-单例模式的实现" class="headerlink" title="(4.1.4) 单例模式的实现"></a>(4.1.4) 单例模式的实现</h3><p>  单例模式的实现有很多种。以下是比较常用的几种。</p><h4 id="4-1-4-1-饿汉式单例"><a href="#4-1-4-1-饿汉式单例" class="headerlink" title="(4.1.4.1) 饿汉式单例"></a>(4.1.4.1) 饿汉式单例</h4><p>  饿汉式单例是指在方法调用前，实例就已经创建好了。</p><h4 id="4-1-4-2-懒汉式单例"><a href="#4-1-4-2-懒汉式单例" class="headerlink" title="(4.1.4.2) 懒汉式单例"></a>(4.1.4.2) 懒汉式单例</h4><h4 id="4-1-4-3-双检锁-双重校验锁（DCL，即-double-checked-locking）"><a href="#4-1-4-3-双检锁-双重校验锁（DCL，即-double-checked-locking）" class="headerlink" title="(4.1.4.3) 双检锁/双重校验锁（DCL，即 double-checked locking）"></a>(4.1.4.3) 双检锁/双重校验锁（DCL，即 double-checked locking）</h4><h2 id="4-2-工厂模式-Factory-Pattern"><a href="#4-2-工厂模式-Factory-Pattern" class="headerlink" title="(4.2) 工厂模式 (Factory Pattern)"></a>(4.2) 工厂模式 (Factory Pattern)</h2><h3 id="4-2-1-什么是工厂模式"><a href="#4-2-1-什么是工厂模式" class="headerlink" title="(4.2.1) 什么是工厂模式"></a>(4.2.1) 什么是工厂模式</h3><blockquote><p> 工厂模式<br> 工厂模式就好比房屋中介，你想租房，通过中介去租不同的房子。</p></blockquote><h3 id="4-2-2-工厂模式的特点"><a href="#4-2-2-工厂模式的特点" class="headerlink" title="(4.2.2) 工厂模式的特点"></a>(4.2.2) 工厂模式的特点</h3><blockquote><p>优点：<br> 1、一个调用者想创建一个对象，只要知道其名称就可以了。<br> 2、扩展性高，如果想增加一个产品，只要扩展一个工厂类就可以。<br> 3、屏蔽产品的具体实现，调用者只关心产品的接口。</p></blockquote><blockquote><p>缺点：<br> 每次增加一个产品时，都需要增加一个具体类和对象实现工厂，使得系统中类的个数成倍增加，在一定程度上增加了系统的复杂度，同时也增加了系统具体类的依赖。这并不是什么好事。</p></blockquote><h3 id="4-2-3-工厂模式的应用"><a href="#4-2-3-工厂模式的应用" class="headerlink" title="(4.2.3) 工厂模式的应用"></a>(4.2.3) 工厂模式的应用</h3><blockquote><p> 1、日志记录器：记录可能记录到本地硬盘、系统事件、远程服务器等，用户可以选择记录日志到什么地方。<br> 2、数据库访问，当用户不知道最后系统采用哪一类数据库，以及数据库可能有变化时。<br> 3、设计一个连接服务器的框架，需要三个协议，”POP3”、”IMAP”、”HTTP”，可以把这三个作为产品类，共同实现一个接口。 </p></blockquote><h3 id="4-2-4-实现"><a href="#4-2-4-实现" class="headerlink" title="(4.2.4) 实现"></a>(4.2.4) 实现</h3><h2 id="4-3-抽象工厂模式"><a href="#4-3-抽象工厂模式" class="headerlink" title="(4.3) 抽象工厂模式"></a>(4.3) 抽象工厂模式</h2><h3 id="4-3-1-什么是抽象工厂模式"><a href="#4-3-1-什么是抽象工厂模式" class="headerlink" title="(4.3.1) 什么是抽象工厂模式"></a>(4.3.1) 什么是抽象工厂模式</h3><blockquote><p> 抽象工厂模式（Abstract Factory Pattern）是围绕一个超级工厂创建其他工厂。该超级工厂又称为其他工厂的工厂。<br> 抽象工厂模式好比所有中介的中介，就行房屋中介、婚姻中介、买菜中介的中介管家一样，租房找中介管家，中介管家找房屋中介，然后租房。</p></blockquote><h3 id="4-3-2-抽象工厂模式的特点"><a href="#4-3-2-抽象工厂模式的特点" class="headerlink" title="(4.3.2) 抽象工厂模式的特点"></a>(4.3.2) 抽象工厂模式的特点</h3><blockquote><p> 特点</p></blockquote><h3 id="4-3-3-抽象工厂模式的应用"><a href="#4-3-3-抽象工厂模式的应用" class="headerlink" title="(4.3.3) 抽象工厂模式的应用"></a>(4.3.3) 抽象工厂模式的应用</h3><blockquote><ol><li>QQ 换皮肤，一整套一起换。 </li><li>生成不同操作系统的程序。</li></ol></blockquote><h3 id="4-3-4-抽象工厂模式的实现"><a href="#4-3-4-抽象工厂模式的实现" class="headerlink" title="(4.3.4) 抽象工厂模式的实现"></a>(4.3.4) 抽象工厂模式的实现</h3><h2 id="4-4-建造者模式-Builder-Pattern"><a href="#4-4-建造者模式-Builder-Pattern" class="headerlink" title="(4.4) 建造者模式 (Builder Pattern)"></a>(4.4) 建造者模式 (Builder Pattern)</h2><blockquote><p> 注意事项：与工厂模式的区别是：建造者模式更加关注与零件装配的顺序。</p></blockquote><h3 id="4-4-1-什么是建造者模式"><a href="#4-4-1-什么是建造者模式" class="headerlink" title="(4.4.1) 什么是建造者模式"></a>(4.4.1) 什么是建造者模式</h3><blockquote><p> 指将一个复杂对象的构造与它的表示分离，使同样的构建过程可以创建不同的表示，这样的设计模式被称为建造者模式。</p></blockquote><blockquote><p> 计算机是由 CPU、主板、内存、硬盘、显卡、机箱、显示器、键盘、鼠标等部件组装而成的，采购员不可能自己去组装计算机，而是将计算机的配置要求告诉计算机销售公司，计算机销售公司安排技术人员去组装计算机，然后再交给要买计算机的采购员。<br> 游戏中的不同角色，其性别、个性、能力、脸型、体型、服装、发型等特性都有所差异。<br> 汽车中的方向盘、发动机、车架、轮胎等部件也多种多样。<br> 每封电子邮件的发件人、收件人、主题、内容、附件等内容也各不相同。</p></blockquote><h3 id="4-4-2-建造者模式的特点"><a href="#4-4-2-建造者模式的特点" class="headerlink" title="(4.4.2) 建造者模式的特点"></a>(4.4.2) 建造者模式的特点</h3><blockquote><p>优点：<br> 1、建造者独立，易扩展。<br> 2、便于控制细节风险。</p></blockquote><blockquote><p>缺点：<br> 1、产品必须有共同点，范围有限制。<br> 2、如内部变化复杂，会有很多的建造类。</p></blockquote><h3 id="4-4-3-建造者模式的应用"><a href="#4-4-3-建造者模式的应用" class="headerlink" title="(4.4.3) 建造者模式的应用"></a>(4.4.3) 建造者模式的应用</h3><blockquote><p> 一些基本部件不会变，而其组合经常变化的时候。</p></blockquote><blockquote><p> 1、计算机是由 CPU、主板、内存、硬盘、显卡、机箱、显示器、键盘、鼠标等部件组装而成的，购买电脑时选取自己喜欢的CPU、主板、内存条、硬盘、显卡、机箱、显示器、键盘、鼠标等部件。<br> 2、JAVA 中的 StringBuilder，可以拼接不同的对象。 </p></blockquote><h3 id="4-4-4-建造者模式的实现"><a href="#4-4-4-建造者模式的实现" class="headerlink" title="(4.4.4) 建造者模式的实现"></a>(4.4.4) 建造者模式的实现</h3><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://www.cnblogs.com/pony1223/p/7608955.html" target="_blank" rel="noopener">23种设计模式</a><br>[2] <a href="http://c.biancheng.net/design_pattern/" target="_blank" rel="noopener">23种设计模式全面解析</a><br>[3] <a href="https://www.jianshu.com/p/bf8341c75304" target="_blank" rel="noopener">java中的工厂模式</a><br>[4] <a href="https://time.geekbang.org/column/article/197254" target="_blank" rel="noopener">44 | 工厂模式（上）：我为什么说没事不要随便用工厂模式创建对象？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  其实，很多东西都是经历过，遇到问题，解决了，然后才知道。大学时候学过设计模式，但是没有实践过，很快就忘了。后来开发的时候遇到一些问题，解决了，然后感觉像哪个设计模式，回过头去看设计模式，感觉挺有用的。&lt;/p&gt;
&lt;p&gt;  学完设计模式以后，建议用简单、高效、易维护的态度去设计开发。&lt;/p&gt;
&lt;h1 id=&quot;1-什么是设计模式&quot;&gt;&lt;a href=&quot;#1-什么是设计模式&quot; class=&quot;headerlink&quot; title=&quot;(1) 什么是设计模式&quot;&gt;&lt;/a&gt;(1) 什么是设计模式&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 软件设计模式（Design pattern），又称设计模式，是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。 使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性、程序的重用性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;2-设计模式的分类&quot;&gt;&lt;a href=&quot;#2-设计模式的分类&quot; class=&quot;headerlink&quot; title=&quot;(2)  设计模式的分类&quot;&gt;&lt;/a&gt;(2)  设计模式的分类&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 创建型模式：对象实例化的模式，创建型模式用于解耦对象的实例化过程。&lt;/p&gt;
&lt;p&gt; 结构型模式：把类或对象结合在一起形成一个更大的结构。&lt;/p&gt;
&lt;p&gt; 行为型模式：类和对象如何交互，及划分责任和算法。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="pattern" scheme="http://weikeqin.com/categories/pattern/"/>
    
    
      <category term="pattern" scheme="http://weikeqin.com/tags/pattern/"/>
    
  </entry>
  
  <entry>
    <title>域名重定向 hexo博客更换域名</title>
    <link href="http://weikeqin.com/2020/03/02/domain-redirection/"/>
    <id>http://weikeqin.com/2020/03/02/domain-redirection/</id>
    <published>2020-03-02T01:31:53.000Z</published>
    <updated>2020-05-02T17:06:31.137Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 在很长的一段时间里，使用的是多域名，主要有 weikeqin.cn  weikeqin.com，但是两个域名解析到的是同一个博客，想把 weikeqin.cn 的流量全部转到 weikeqin.com，因为有些时候 .cn 不如 .com 域名，在某个特殊的时候感觉特别明显。然后就有了这篇文章。<br> 在具体更换域名前的测试中，发现github.com还是比coding.net好用。<br><br></p></blockquote><h1 id="1-博客域名更换"><a href="#1-博客域名更换" class="headerlink" title="(1) 博客域名更换"></a>(1) 博客域名更换</h1><blockquote><p> 域名的重定向的方法有 1.域名转发    2.301重定向    3.JS跳转<br> 方法一，域名注册商支持域名转发功能才行！国内的绝大部分域名注册商不支持。<br> 方法二，是Web 服务器给访问老域名的请求返回一个 301 或者 302，然后跳转到新域名上。 由于使用的是 github.com coding.net 的page服务，这个方法也不可行。<br> 方法三，使用js跳转。具体方法如下。</p></blockquote><h2 id="1-1-index-html"><a href="#1-1-index-html" class="headerlink" title="(1.1) index.html"></a>(1.1) index.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>新域名 https://weikeqin.com<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span> 跳转中，访问新域名站点 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://weikeqin.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span> https://weikeqin.com <span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"index.html"</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"><span class="built_in">window</span>.location.href = <span class="string">"https://weikeqin.com"</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="1-2-404-html"><a href="#1-2-404-html" class="headerlink" title="(1.2) 404.html"></a>(1.2) 404.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">/*! purl v2.3.1 | MIT */</span> </span></span><br><span class="line"><span class="javascript">    <span class="comment">/** http://cdn.bootcss.com/purl/2.3.1/purl.min.js */</span></span></span><br><span class="line"><span class="javascript">    (<span class="function"><span class="keyword">function</span> (<span class="params">factory</span>) </span>&#123; <span class="keyword">if</span> (<span class="keyword">typeof</span> define === <span class="string">"function"</span> &amp;&amp; define.amd) &#123; define(factory) &#125; <span class="keyword">else</span> &#123; <span class="built_in">window</span>.purl = factory() &#125; &#125;)(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="keyword">var</span> tag2attr = &#123; <span class="attr">a</span>: <span class="string">"href"</span>, <span class="attr">img</span>: <span class="string">"src"</span>, <span class="attr">form</span>: <span class="string">"action"</span>, <span class="attr">base</span>: <span class="string">"href"</span>, <span class="attr">script</span>: <span class="string">"src"</span>, <span class="attr">iframe</span>: <span class="string">"src"</span>, <span class="attr">link</span>: <span class="string">"href"</span> &#125;, key = [<span class="string">"source"</span>, <span class="string">"protocol"</span>, <span class="string">"authority"</span>, <span class="string">"userInfo"</span>, <span class="string">"user"</span>, <span class="string">"password"</span>, <span class="string">"host"</span>, <span class="string">"port"</span>, <span class="string">"relative"</span>, <span class="string">"path"</span>, <span class="string">"directory"</span>, <span class="string">"file"</span>, <span class="string">"query"</span>, <span class="string">"fragment"</span>], aliases = &#123; <span class="attr">anchor</span>: <span class="string">"fragment"</span> &#125;, parser = &#123; <span class="attr">strict</span>: <span class="regexp">/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/</span>, <span class="attr">loose</span>: <span class="regexp">/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/</span> &#125;, isint = <span class="regexp">/^[0-9]+$/</span>; <span class="function"><span class="keyword">function</span> <span class="title">parseUri</span>(<span class="params">url, strictMode</span>) </span>&#123; <span class="keyword">var</span> str = <span class="built_in">decodeURI</span>(url), res = parser[strictMode || <span class="literal">false</span> ? <span class="string">"strict"</span> : <span class="string">"loose"</span>].exec(str), uri = &#123; <span class="attr">attr</span>: &#123;&#125;, <span class="attr">param</span>: &#123;&#125;, <span class="attr">seg</span>: &#123;&#125; &#125;, i = <span class="number">14</span>; <span class="keyword">while</span> (i--) &#123; uri.attr[key[i]] = res[i] || <span class="string">""</span> &#125; uri.param[<span class="string">"query"</span>] = parseString(uri.attr[<span class="string">"query"</span>]); uri.param[<span class="string">"fragment"</span>] = parseString(uri.attr[<span class="string">"fragment"</span>]); uri.seg[<span class="string">"path"</span>] = uri.attr.path.replace(<span class="regexp">/^\/+|\/+$/g</span>, <span class="string">""</span>).split(<span class="string">"/"</span>); uri.seg[<span class="string">"fragment"</span>] = uri.attr.fragment.replace(<span class="regexp">/^\/+|\/+$/g</span>, <span class="string">""</span>).split(<span class="string">"/"</span>); uri.attr[<span class="string">"base"</span>] = uri.attr.host ? (uri.attr.protocol ? uri.attr.protocol + <span class="string">"://"</span> + uri.attr.host : uri.attr.host) + (uri.attr.port ? <span class="string">":"</span> + uri.attr.port : <span class="string">""</span>) : <span class="string">""</span>; <span class="keyword">return</span> uri &#125; <span class="function"><span class="keyword">function</span> <span class="title">getAttrName</span>(<span class="params">elm</span>) </span>&#123; <span class="keyword">var</span> tn = elm.tagName; <span class="keyword">if</span> (<span class="keyword">typeof</span> tn !== <span class="string">"undefined"</span>) <span class="keyword">return</span> tag2attr[tn.toLowerCase()]; <span class="keyword">return</span> tn &#125; <span class="function"><span class="keyword">function</span> <span class="title">promote</span>(<span class="params">parent, key</span>) </span>&#123; <span class="keyword">if</span> (parent[key].length === <span class="number">0</span>) <span class="keyword">return</span> parent[key] = &#123;&#125;; <span class="keyword">var</span> t = &#123;&#125;; <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> parent[key]) t[i] = parent[key][i]; parent[key] = t; <span class="keyword">return</span> t &#125; <span class="function"><span class="keyword">function</span> <span class="title">parse</span>(<span class="params">parts, parent, key, val</span>) </span>&#123; <span class="keyword">var</span> part = parts.shift(); <span class="keyword">if</span> (!part) &#123; <span class="keyword">if</span> (isArray(parent[key])) &#123; parent[key].push(val) &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"object"</span> == <span class="keyword">typeof</span> parent[key]) &#123; parent[key] = val &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"undefined"</span> == <span class="keyword">typeof</span> parent[key]) &#123; parent[key] = val &#125; <span class="keyword">else</span> &#123; parent[key] = [parent[key], val] &#125; &#125; <span class="keyword">else</span> &#123; <span class="keyword">var</span> obj = parent[key] = parent[key] || []; <span class="keyword">if</span> (<span class="string">"]"</span> == part) &#123; <span class="keyword">if</span> (isArray(obj)) &#123; <span class="keyword">if</span> (<span class="string">""</span> !== val) obj.push(val) &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"object"</span> == <span class="keyword">typeof</span> obj) &#123; obj[keys(obj).length] = val &#125; <span class="keyword">else</span> &#123; obj = parent[key] = [parent[key], val] &#125; &#125; <span class="keyword">else</span> <span class="keyword">if</span> (~part.indexOf(<span class="string">"]"</span>)) &#123; part = part.substr(<span class="number">0</span>, part.length - <span class="number">1</span>); <span class="keyword">if</span> (!isint.test(part) &amp;&amp; isArray(obj)) obj = promote(parent, key); parse(parts, obj, part, val) &#125; <span class="keyword">else</span> &#123; <span class="keyword">if</span> (!isint.test(part) &amp;&amp; isArray(obj)) obj = promote(parent, key); parse(parts, obj, part, val) &#125; &#125; &#125; <span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">parent, key, val</span>) </span>&#123; <span class="keyword">if</span> (~key.indexOf(<span class="string">"]"</span>)) &#123; <span class="keyword">var</span> parts = key.split(<span class="string">"["</span>); parse(parts, parent, <span class="string">"base"</span>, val) &#125; <span class="keyword">else</span> &#123; <span class="keyword">if</span> (!isint.test(key) &amp;&amp; isArray(parent.base)) &#123; <span class="keyword">var</span> t = &#123;&#125;; <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> parent.base) t[k] = parent.base[k]; parent.base = t &#125; <span class="keyword">if</span> (key !== <span class="string">""</span>) &#123; set(parent.base, key, val) &#125; &#125; <span class="keyword">return</span> parent &#125; <span class="function"><span class="keyword">function</span> <span class="title">parseString</span>(<span class="params">str</span>) </span>&#123; <span class="keyword">return</span> reduce(<span class="built_in">String</span>(str).split(<span class="regexp">/&amp;|;/</span>), <span class="function"><span class="keyword">function</span> (<span class="params">ret, pair</span>) </span>&#123; <span class="keyword">try</span> &#123; pair = <span class="built_in">decodeURIComponent</span>(pair.replace(<span class="regexp">/\+/g</span>, <span class="string">" "</span>)) &#125; <span class="keyword">catch</span> (e) &#123; &#125; <span class="keyword">var</span> eql = pair.indexOf(<span class="string">"="</span>), brace = lastBraceInKey(pair), key = pair.substr(<span class="number">0</span>, brace || eql), val = pair.substr(brace || eql, pair.length); val = val.substr(val.indexOf(<span class="string">"="</span>) + <span class="number">1</span>, val.length); <span class="keyword">if</span> (key === <span class="string">""</span>) &#123; key = pair; val = <span class="string">""</span> &#125; <span class="keyword">return</span> merge(ret, key, val) &#125;, &#123; <span class="attr">base</span>: &#123;&#125; &#125;).base &#125; <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">obj, key, val</span>) </span>&#123; <span class="keyword">var</span> v = obj[key]; <span class="keyword">if</span> (<span class="keyword">typeof</span> v === <span class="string">"undefined"</span>) &#123; obj[key] = val &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isArray(v)) &#123; v.push(val) &#125; <span class="keyword">else</span> &#123; obj[key] = [v, val] &#125; &#125; <span class="function"><span class="keyword">function</span> <span class="title">lastBraceInKey</span>(<span class="params">str</span>) </span>&#123; <span class="keyword">var</span> len = str.length, brace, c; <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; ++i) &#123; c = str[i]; <span class="keyword">if</span> (<span class="string">"]"</span> == c) brace = <span class="literal">false</span>; <span class="keyword">if</span> (<span class="string">"["</span> == c) brace = <span class="literal">true</span>; <span class="keyword">if</span> (<span class="string">"="</span> == c &amp;&amp; !brace) <span class="keyword">return</span> i &#125; &#125; <span class="function"><span class="keyword">function</span> <span class="title">reduce</span>(<span class="params">obj, accumulator</span>) </span>&#123; <span class="keyword">var</span> i = <span class="number">0</span>, l = obj.length &gt;&gt; <span class="number">0</span>, curr = <span class="built_in">arguments</span>[<span class="number">2</span>]; <span class="keyword">while</span> (i &lt; l) &#123; <span class="keyword">if</span> (i <span class="keyword">in</span> obj) curr = accumulator.call(<span class="literal">undefined</span>, curr, obj[i], i, obj); ++i &#125; <span class="keyword">return</span> curr &#125; <span class="function"><span class="keyword">function</span> <span class="title">isArray</span>(<span class="params">vArg</span>) </span>&#123; <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(vArg) === <span class="string">"[object Array]"</span> &#125; <span class="function"><span class="keyword">function</span> <span class="title">keys</span>(<span class="params">obj</span>) </span>&#123; <span class="keyword">var</span> key_array = []; <span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> obj) &#123; <span class="keyword">if</span> (obj.hasOwnProperty(prop)) key_array.push(prop) &#125; <span class="keyword">return</span> key_array &#125; <span class="function"><span class="keyword">function</span> <span class="title">purl</span>(<span class="params">url, strictMode</span>) </span>&#123; <span class="keyword">if</span> (<span class="built_in">arguments</span>.length === <span class="number">1</span> &amp;&amp; url === <span class="literal">true</span>) &#123; strictMode = <span class="literal">true</span>; url = <span class="literal">undefined</span> &#125; strictMode = strictMode || <span class="literal">false</span>; url = url || <span class="built_in">window</span>.location.toString(); <span class="keyword">return</span> &#123; <span class="attr">data</span>: parseUri(url, strictMode), <span class="attr">attr</span>: <span class="function"><span class="keyword">function</span> (<span class="params">attr</span>) </span>&#123; attr = aliases[attr] || attr; <span class="keyword">return</span> <span class="keyword">typeof</span> attr !== <span class="string">"undefined"</span> ? <span class="keyword">this</span>.data.attr[attr] : <span class="keyword">this</span>.data.attr &#125;, <span class="attr">param</span>: <span class="function"><span class="keyword">function</span> (<span class="params">param</span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">typeof</span> param !== <span class="string">"undefined"</span> ? <span class="keyword">this</span>.data.param.query[param] : <span class="keyword">this</span>.data.param.query &#125;, <span class="attr">fparam</span>: <span class="function"><span class="keyword">function</span> (<span class="params">param</span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">typeof</span> param !== <span class="string">"undefined"</span> ? <span class="keyword">this</span>.data.param.fragment[param] : <span class="keyword">this</span>.data.param.fragment &#125;, <span class="attr">segment</span>: <span class="function"><span class="keyword">function</span> (<span class="params">seg</span>) </span>&#123; <span class="keyword">if</span> (<span class="keyword">typeof</span> seg === <span class="string">"undefined"</span>) &#123; <span class="keyword">return</span> <span class="keyword">this</span>.data.seg.path &#125; <span class="keyword">else</span> &#123; seg = seg &lt; <span class="number">0</span> ? <span class="keyword">this</span>.data.seg.path.length + seg : seg - <span class="number">1</span>; <span class="keyword">return</span> <span class="keyword">this</span>.data.seg.path[seg] &#125; &#125;, <span class="attr">fsegment</span>: <span class="function"><span class="keyword">function</span> (<span class="params">seg</span>) </span>&#123; <span class="keyword">if</span> (<span class="keyword">typeof</span> seg === <span class="string">"undefined"</span>) &#123; <span class="keyword">return</span> <span class="keyword">this</span>.data.seg.fragment &#125; <span class="keyword">else</span> &#123; seg = seg &lt; <span class="number">0</span> ? <span class="keyword">this</span>.data.seg.fragment.length + seg : seg - <span class="number">1</span>; <span class="keyword">return</span> <span class="keyword">this</span>.data.seg.fragment[seg] &#125; &#125; &#125; &#125; purl.jQuery = <span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123; <span class="keyword">if</span> ($ != <span class="literal">null</span>) &#123; $.fn.url = <span class="function"><span class="keyword">function</span> (<span class="params">strictMode</span>) </span>&#123; <span class="keyword">var</span> url = <span class="string">""</span>; <span class="keyword">if</span> (<span class="keyword">this</span>.length) &#123; url = $(<span class="keyword">this</span>).attr(getAttrName(<span class="keyword">this</span>[<span class="number">0</span>])) || <span class="string">""</span> &#125; <span class="keyword">return</span> purl(url, strictMode) &#125;; $.url = purl &#125; &#125;; purl.jQuery(<span class="built_in">window</span>.jQuery); <span class="keyword">return</span> purl &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="string">"404.html"</span>)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> url = purl();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'weikeqin.cn'</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'weikeqin.cn'</span>, <span class="string">"weikeqin.com"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"old_url = "</span> + old_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"new_url = "</span> + new_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.replace(new_url);</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'www.weikeqin.cn'</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'www.weikeqin.cn'</span>, <span class="string">"weikeqin.com"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"old_url = "</span> + old_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"new_url = "</span> + new_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.replace(new_url);</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'weikeqin.github.io'</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'weikeqin.github.io/weikeqin.cn.github.io'</span>, <span class="string">"weikeqin.com"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"old_url = "</span> + old_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"new_url = "</span> + new_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.replace(new_url);</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (url.attr(<span class="string">'host'</span>) == <span class="string">'www.weikeqin.github.io'</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> old_url = url.attr(<span class="string">'source'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> new_url = old_url.replace(<span class="string">'www.weikeqin.github.io/weikeqin.cn.github.io'</span>, <span class="string">"weikeqin.com"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"old_url = "</span> + old_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"new_url = "</span> + new_url);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.replace(new_url);</span></span><br><span class="line"><span class="javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.location.href = <span class="string">"http://weikeqin.com"</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br></p><h2 id="1-3-一些思考"><a href="#1-3-一些思考" class="headerlink" title="(1.3) 一些思考"></a>(1.3) 一些思考</h2><blockquote><p> 为什么要分成两个文件 index.html 和 404.html，放一个文件不是更好吗？<br> 其实可以放一个文件里。 但是当脚本有问题的时候或者非正常流程时，分成两个文件会比一个文件更好。<br> 如果脚本有问题，index.html出错的时候(测试的时候遇到了)，有404.html兜底。 (这种情况在开发的时候，或者部署前就可以发现。)<br> 遇到一些域外的情况，404.html文件可以兜底。<br> 分成两个文件是从架构和模块化的角度考虑。</p></blockquote><blockquote><p> js跳转脚本里为什么要加console.log日志<br> 为了排查问题方便 (一般情况下用不到)<br><br></p></blockquote><h1 id="2-具体实施"><a href="#2-具体实施" class="headerlink" title="(2) 具体实施"></a>(2) 具体实施</h1><blockquote><p> 用的是万网的域名，weikeqin.cn和weikeqin.com用的都是coding.net的page服务。(实际更复杂)<br> 修改后，weikeqin.cn会用github.com的pages服务，weikeqin.com会用coding.net的pages服务。<br> 准备重定向脚本，在github pages服务准备好。<br> 修改域名解析，在 <code>域名控制台-&gt;解析设置</code> 里 把weikeqin.cn 解析到coding.net改成github.com </p></blockquote><blockquote><p> 回滚方案，如果有问题，修改域名解析，把 weikeqin.cn域名解析重新修改成coding.net对应的配置即可。</p></blockquote><p>  其实在实施前准备了很多测试，具体步骤忽略。</p><h1 id="3-测试"><a href="#3-测试" class="headerlink" title="(3) 测试"></a>(3) 测试</h1><p>  <a href="http://weikeqin.cn/" target="_blank" rel="noopener">http://weikeqin.cn/</a><br>  <a href="https://weikeqin.cn/" target="_blank" rel="noopener">https://weikeqin.cn/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Navigated to http://weikeqin.cn/</span><br><span class="line">(index):12 index.html</span><br><span class="line">Navigated to https://weikeqin.com/</span><br></pre></td></tr></table></figure><p>  <a href="http://weikeqin.cn/2017/03/16/git-notes/" target="_blank" rel="noopener">http://weikeqin.cn/2017/03/16/git-notes/</a><br>  <a href="https://weikeqin.cn/2017/03/16/git-notes/" target="_blank" rel="noopener">https://weikeqin.cn/2017/03/16/git-notes/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET http://weikeqin.cn/2017/03/16/git-notes/ 404 (Not Found)</span><br><span class="line">/2017/03/16/git-notes/:1 A cookie associated with a cross-site resource at http://hm.baidu.com/ was set without the `SameSite` attribute. A future release of Chrome will only deliver cookies with cross-site requests if they are set with `SameSite=None` and `Secure`. You can review cookies in developer tools under Application&gt;Storage&gt;Cookies and see more details at https://www.chromestatus.com/feature/5088147346030592 and https://www.chromestatus.com/feature/5633521622188032.</span><br><span class="line">/2017/03/16/git-notes/:1 A cookie associated with a cross-site resource at http://baidu.com/ was set without the `SameSite` attribute. A future release of Chrome will only deliver cookies with cross-site requests if they are set with `SameSite=None` and `Secure`. You can review cookies in developer tools under Application&gt;Storage&gt;Cookies and see more details at https://www.chromestatus.com/feature/5088147346030592 and https://www.chromestatus.com/feature/5633521622188032.</span><br><span class="line">Navigated to http://weikeqin.cn/2017/03/16/git-notes/</span><br><span class="line">VM62:7 404.html</span><br><span class="line">VM62:12 old_url = http://weikeqin.cn/2017/03/16/git-notes/</span><br><span class="line">VM62:13 new_url = http://weikeqin.com/2017/03/16/git-notes/</span><br><span class="line">Navigated to http://weikeqin.com/2017/03/16/git-notes/</span><br></pre></td></tr></table></figure><p>  可以看到 weikeqin.cn 重定向到 weikeqin.com 了</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://www.jianshu.com/p/2c31cfb6c9b1" target="_blank" rel="noopener">Github Pages页面重定向到新网址，实现域名跳转</a><br>[2] <a href="https://github.com/HeTianCong/HeTianCong.github.io" target="_blank" rel="noopener">HeTianCong.github.io</a><br>[3] <a href="https://blog.meow.page/2019/04/08/setup-after-changing-my-hexo-blog-domain/" target="_blank" rel="noopener">在更换 hexo 博客的域名后需要做的配置工作</a><br>[4] <a href="https://github.com/weikeqin/weikeqin.cn.github.io" target="_blank" rel="noopener">weikeqin.cn.github.io</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 在很长的一段时间里，使用的是多域名，主要有 weikeqin.cn  weikeqin.com，但是两个域名解析到的是同一个博客，想把 weikeqin.cn 的流量全部转到 weikeqin.com，因为有些时候 .cn 不如 .com 域名，在某个特殊的时候感觉特别明显。然后就有了这篇文章。&lt;br&gt; 在具体更换域名前的测试中，发现github.com还是比coding.net好用。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;1-博客域名更换&quot;&gt;&lt;a href=&quot;#1-博客域名更换&quot; class=&quot;headerlink&quot; title=&quot;(1) 博客域名更换&quot;&gt;&lt;/a&gt;(1) 博客域名更换&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 域名的重定向的方法有 1.域名转发    2.301重定向    3.JS跳转&lt;br&gt; 方法一，域名注册商支持域名转发功能才行！国内的绝大部分域名注册商不支持。&lt;br&gt; 方法二，是Web 服务器给访问老域名的请求返回一个 301 或者 302，然后跳转到新域名上。 由于使用的是 github.com coding.net 的page服务，这个方法也不可行。&lt;br&gt; 方法三，使用js跳转。具体方法如下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-1-index-html&quot;&gt;&lt;a href=&quot;#1-1-index-html&quot; class=&quot;headerlink&quot; title=&quot;(1.1) index.html&quot;&gt;&lt;/a&gt;(1.1) index.html&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;新域名 https://weikeqin.com&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt; 跳转中，访问新域名站点 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://weikeqin.com&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;_blank&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; https://weikeqin.com &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;index.html&quot;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.href = &lt;span class=&quot;string&quot;&gt;&quot;https://weikeqin.com&quot;&lt;/span&gt;;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="network" scheme="http://weikeqin.com/categories/network/"/>
    
    
      <category term="network" scheme="http://weikeqin.com/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>github搜索</title>
    <link href="http://weikeqin.com/2020/02/23/github-search/"/>
    <id>http://weikeqin.com/2020/02/23/github-search/</id>
    <published>2020-02-23T08:17:57.000Z</published>
    <updated>2020-02-25T07:34:18.215Z</updated>
    
    <content type="html"><![CDATA[<p>  GitHub上搜索代码时，是怎么样操作的呢？是不是也是像普通人一样，直接在搜索框里输入要检索的内容，然后不断在列表里翻页找自己需要的内容？或者是简单筛选下，过滤一下。再或者改变一下列表的排序方式。这就是「全部」了吗？ </p><p>  一般的系统检索功能，都会有一个「高级搜索」的功能。需要在另外的界面里展开，进行二次搜索之类的。 GitHub 有没有类似的呢？</p><p>  答案是「肯定的」。做为一个为万千工程师提供服务的网站，不仅要有，而且还要技术范儿。</p><h1 id="1-github高级搜索"><a href="#1-github高级搜索" class="headerlink" title="(1) github高级搜索"></a>(1) github高级搜索</h1><p>  高级搜索时，特殊字符会进行转码<br>  %20 是 空格<br>  %3A 是 :<br>  %3E 是 &gt; </p><h2 id="1-1-明确搜索仓库标题、仓库描述、README"><a href="#1-1-明确搜索仓库标题、仓库描述、README" class="headerlink" title="(1.1) 明确搜索仓库标题、仓库描述、README"></a>(1.1) 明确搜索仓库标题、仓库描述、README</h2><p>  GitHub 提供了便捷的搜索方式，可以限定只搜索仓库的标题、或者描述、README等。</p><p>  以Spring Cloud 为例，一般一个仓库，大概是这样的</p><p>  红色箭头指的两个地方，分别是仓库的名称和描述。咱们可以直接限定关键字只查特定的地方。</p><p>  比如只想查找仓库名称包含 spring cloud 的仓库，可以使用 in:name 关键词<br>  <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=in%3Aname+spring+cloud&amp;type=" target="_blank" rel="noopener">https://github.com/search?utf8=%E2%9C%93&amp;q=in%3Aname+spring+cloud&amp;type=</a></p><p>  如果想查找描述的内容，可以使用 in:descripton 关键词<br>  <a href="https://github.com/search?q=in%3Adescripton+spring+cloud" target="_blank" rel="noopener">https://github.com/search?q=in%3Adescripton+spring+cloud</a><br>  <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=in%3Adescripton+spring+cloud&amp;type=" target="_blank" rel="noopener">https://github.com/search?utf8=%E2%9C%93&amp;q=in%3Adescripton+spring+cloud&amp;type=</a></p><a id="more"></a><h2 id="1-2-明确搜索-star、fork-数大于多少的"><a href="#1-2-明确搜索-star、fork-数大于多少的" class="headerlink" title="(1.2) 明确搜索 star、fork 数大于多少的"></a>(1.2) 明确搜索 star、fork 数大于多少的</h2><p>  一个项目 star 数的多少，一般代表该项目有受欢迎程度。 </p><p>  要找 star 数大于 3000 的Spring Cloud 仓库:  stars:&gt; 数字 关键字 </p><p>  stars:&gt;3000 spring cloud<br>  stars: &gt; 3000  spring bloud 会搜不到，不要加空格<br>  <a href="https://github.com/search?q=stars%3A%3E3000++spring+cloud" target="_blank" rel="noopener">https://github.com/search?q=stars%3A%3E3000++spring+cloud</a></p><p>  找star数在10到20之间的 spring cloud 仓库:   stars:10..20 关键词<br>  <a href="https://github.com/search?q=stars%3A10..20+spring+cloud" target="_blank" rel="noopener">https://github.com/search?q=stars%3A10..20+spring+cloud</a></p><p>  找fork数在10到20之间的 spring cloud 仓库:   <a href="https://github.com/search?utf8=%E2%9C%93&amp;q=fork%3A+10..20+spring+cloud&amp;type=" target="_blank" rel="noopener">https://github.com/search?utf8=%E2%9C%93&amp;q=fork%3A+10..20+spring+cloud&amp;type=</a></p><h2 id="1-3-明确搜索仓库大小的"><a href="#1-3-明确搜索仓库大小的" class="headerlink" title="(1.3) 明确搜索仓库大小的"></a>(1.3) 明确搜索仓库大小的</h2><p>  比如你只想看个简单的 Demo，不想找特别复杂的且占用磁盘空间较多的，可以在搜索的时候直接限定仓库的 size 。</p><p>  这个数字代表K, 5000代表着5M。</p><h1 id="2-GitHub-可能提高日常效率的10个常用技巧"><a href="#2-GitHub-可能提高日常效率的10个常用技巧" class="headerlink" title="(2) GitHub 可能提高日常效率的10个常用技巧"></a>(2) GitHub 可能提高日常效率的10个常用技巧</h1><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://mp.weixin.qq.com/s/XqP4PBI8yx2Rgnn6aTL7OQ" target="_blank" rel="noopener">GitHub竟然还可以这样玩？涨知识了！</a><br>[2] <a href="https://www.cnblogs.com/iamzhanglei/p/6177961.html" target="_blank" rel="noopener">你必须收藏的Github技巧</a><br>[3] <a href="https://segmentfault.com/a/1190000003830252" target="_blank" rel="noopener">GitHub 可能提高日常效率的10个常用技巧</a><br>[4] <a href="https://mp.weixin.qq.com/s/XboOSKroF3Q7yYWTvx1DnQ" target="_blank" rel="noopener">浏览Github必备的5款神器级别的Chrome插件 </a><br>[5] <a href="https://crxdl.com/" target="_blank" rel="noopener">下载Chrome扩展插件Crx离线安装包</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  GitHub上搜索代码时，是怎么样操作的呢？是不是也是像普通人一样，直接在搜索框里输入要检索的内容，然后不断在列表里翻页找自己需要的内容？或者是简单筛选下，过滤一下。再或者改变一下列表的排序方式。这就是「全部」了吗？ &lt;/p&gt;
&lt;p&gt;  一般的系统检索功能，都会有一个「高级搜索」的功能。需要在另外的界面里展开，进行二次搜索之类的。 GitHub 有没有类似的呢？&lt;/p&gt;
&lt;p&gt;  答案是「肯定的」。做为一个为万千工程师提供服务的网站，不仅要有，而且还要技术范儿。&lt;/p&gt;
&lt;h1 id=&quot;1-github高级搜索&quot;&gt;&lt;a href=&quot;#1-github高级搜索&quot; class=&quot;headerlink&quot; title=&quot;(1) github高级搜索&quot;&gt;&lt;/a&gt;(1) github高级搜索&lt;/h1&gt;&lt;p&gt;  高级搜索时，特殊字符会进行转码&lt;br&gt;  %20 是 空格&lt;br&gt;  %3A 是 :&lt;br&gt;  %3E 是 &amp;gt; &lt;/p&gt;
&lt;h2 id=&quot;1-1-明确搜索仓库标题、仓库描述、README&quot;&gt;&lt;a href=&quot;#1-1-明确搜索仓库标题、仓库描述、README&quot; class=&quot;headerlink&quot; title=&quot;(1.1) 明确搜索仓库标题、仓库描述、README&quot;&gt;&lt;/a&gt;(1.1) 明确搜索仓库标题、仓库描述、README&lt;/h2&gt;&lt;p&gt;  GitHub 提供了便捷的搜索方式，可以限定只搜索仓库的标题、或者描述、README等。&lt;/p&gt;
&lt;p&gt;  以Spring Cloud 为例，一般一个仓库，大概是这样的&lt;/p&gt;
&lt;p&gt;  红色箭头指的两个地方，分别是仓库的名称和描述。咱们可以直接限定关键字只查特定的地方。&lt;/p&gt;
&lt;p&gt;  比如只想查找仓库名称包含 spring cloud 的仓库，可以使用 in:name 关键词&lt;br&gt;  &lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=in%3Aname+spring+cloud&amp;amp;type=&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=in%3Aname+spring+cloud&amp;amp;type=&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  如果想查找描述的内容，可以使用 in:descripton 关键词&lt;br&gt;  &lt;a href=&quot;https://github.com/search?q=in%3Adescripton+spring+cloud&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/search?q=in%3Adescripton+spring+cloud&lt;/a&gt;&lt;br&gt;  &lt;a href=&quot;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=in%3Adescripton+spring+cloud&amp;amp;type=&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/search?utf8=%E2%9C%93&amp;amp;q=in%3Adescripton+spring+cloud&amp;amp;type=&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tools" scheme="http://weikeqin.com/categories/tools/"/>
    
    
      <category term="tools" scheme="http://weikeqin.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>mysql explain 详解</title>
    <link href="http://weikeqin.com/2020/02/05/mysql-explain/"/>
    <id>http://weikeqin.com/2020/02/05/mysql-explain/</id>
    <published>2020-02-05T02:50:15.000Z</published>
    <updated>2020-02-11T04:17:34.982Z</updated>
    
    <content type="html"><![CDATA[<p>  在使用MySQL时，如果发现查询语句耗时，会进行排查及调优，其中常用的一个方法是用explain查看sql执行计划。</p><h1 id="1-explain示例"><a href="#1-explain示例" class="headerlink" title="(1) explain示例"></a>(1) explain示例</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; explain select * from user ;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | user  | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    5 |   100.00 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; EXPLAIN</span><br><span class="line">    -&gt; SELECT c.id, c.jid, c.tid, l.id</span><br><span class="line">    -&gt; FROM c1 c, l1 l</span><br><span class="line">    -&gt; WHERE c.tid = l.lid</span><br><span class="line">    -&gt; LIMIT 10 ;</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+</span></span><br><span class="line">| id | select_type | table | partitions | type  | possible_keys | key          | key_len | ref                   | rows   | filtered | Extra                    |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+</span></span><br><span class="line">|  1 | SIMPLE      | l     | NULL       | index | idx_lid       | idx_lid      | 515     | NULL                  | 185827 |   100.00 | Using where; Using index |</span><br><span class="line">|  1 | SIMPLE      | c     | NULL       | ref   | idx_tid       | idx_tid      | 67      | test.l.lid            |      1 |   100.00 | Using index condition    |</span><br><span class="line">+<span class="comment">----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="2-explain参数详解"><a href="#2-explain参数详解" class="headerlink" title="(2) explain参数详解"></a>(2) explain参数详解</h1><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">Columns</th><th style="text-align:left">JSON Name</th><th style="text-align:left">Meaning</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">id</td><td style="text-align:left">select_id</td><td style="text-align:left">每个select子句的标识id</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">select_type</td><td style="text-align:left">None</td><td style="text-align:left">select语句的类型</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">table</td><td style="text-align:left">table_name</td><td style="text-align:left">当前表名</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">partitions</td><td style="text-align:left">partitions</td><td style="text-align:left">匹配的分区</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">type</td><td style="text-align:left">access_type</td><td style="text-align:left">当前表内访问方式  join type</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">possible_keys</td><td style="text-align:left">possible_keys</td><td style="text-align:left">可能使用到的索引</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">key</td><td style="text-align:left">key</td><td style="text-align:left">经过优化器评估最终使用的索引</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">key_len</td><td style="text-align:left">key_length</td><td style="text-align:left">使用到的索引长度</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">ref</td><td style="text-align:left">ref</td><td style="text-align:left">引用到的上一个表的列</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">rows</td><td style="text-align:left">rows</td><td style="text-align:left">rows_examined，要得到最终记录索要扫描经过的记录数</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">filtered</td><td style="text-align:left">filtered</td><td style="text-align:left">按表条件过滤行的百分比</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">Extra</td><td style="text-align:left">None</td><td style="text-align:left">额外的信息说明</td></tr></tbody></table><h2 id="2-1-id"><a href="#2-1-id" class="headerlink" title="(2.1) id"></a>(2.1) id</h2><p>  SELECT识别符。这是SELECT查询序列号。这个不重要,查询序号即为sql语句执行的顺序。</p><h2 id="2-2-select-type"><a href="#2-2-select-type" class="headerlink" title="(2.2) select_type"></a>(2.2) select_type</h2><p>  select_type语句类型有 </p><p>select类型，它有以下几种:</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">select_type value</th><th style="text-align:left">JSON name</th><th style="text-align:left">Meaning</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">SIMPLE</td><td style="text-align:left">None</td><td style="text-align:left">简单的SELECT语句（不包括UNION操作或子查询操作）</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">PRIMARY</td><td style="text-align:left">None</td><td style="text-align:left">PRIMARY：查询中最外层的SELECT（如两表做UNION或者存在子查询的外层的表操作为PRIMARY，内层的操作为UNION）</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">UNION</td><td style="text-align:left">None</td><td style="text-align:left">UNION：UNION操作中，查询中处于内层的SELECT（内层的SELECT语句与外层的SELECT语句没有依赖关系）</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">DEPENDENT UNION</td><td style="text-align:left">dependent(true)</td><td style="text-align:left">DEPENDENT UNION：UNION操作中，查询中处于内层的SELECT（内层的SELECT语句与外层的SELECT语句有依赖关系）</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">UNIOIN RESULT</td><td style="text-align:left">union_result</td><td style="text-align:left">UNION RESULT：UNION操作的结果，id值通常为NULL</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">SUBQUERY</td><td style="text-align:left">None</td><td style="text-align:left">SUBQUERY：子查询中首个SELECT（如果有多个子查询存在）</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">DEPENDENT SUBQUERY</td><td style="text-align:left">dependent(true)</td><td style="text-align:left">DEPENDENT SUBQUERY：子查询中首个SELECT，但依赖于外层的表（如果有多个子查询存在）</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">DERIVED</td><td style="text-align:left">None</td><td style="text-align:left">DERIVED：被驱动的SELECT子查询（子查询位于FROM子句）</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">MATERIALIZED</td><td style="text-align:left">materialized_form_subquery</td><td style="text-align:left">MATERIALIZED：被物化的子查询</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">UNCACHEABLE SUBQUERY</td><td style="text-align:left">cacheable(false)</td><td style="text-align:left">UNCACHEABLE SUBQUERY：对于外层的主表，子查询不可被物化，每次都需要计算（耗时操作）</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">UNCACHEABLE UNION</td><td style="text-align:left">cacheable(false)</td><td style="text-align:left">UNCACHEABLE UNION：UNION操作中，内层的不可被物化的子查询（类似于UNCACHEABLE SUBQUERY）</td></tr></tbody></table><h2 id="2-3-table"><a href="#2-3-table" class="headerlink" title="(2.3) table"></a>(2.3) table</h2><p> 当前表名</p><h2 id="2-4-partitions"><a href="#2-4-partitions" class="headerlink" title="(2.4) partitions"></a>(2.4) partitions</h2><p> 匹配的分区</p><h2 id="2-5-type"><a href="#2-5-type" class="headerlink" title="(2.5) type"></a>(2.5) type</h2><p> 当前表内访问方式</p><p>性能由好到坏排序：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">type value</th><th style="text-align:left">Meaning</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">system</td><td style="text-align:left">表中只有一行</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">const</td><td style="text-align:left">单表中最多有一个匹配行，primary key 或者 unique index的检索</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">eq_ref</td><td style="text-align:left">多表连接中被驱动表的连接列上有primary key或者unique index的检索</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">ref</td><td style="text-align:left">与eq_ref类似，但不是使用primary key或者unique index，而是普通索引。也可以是单表上non-unique索引检索</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">fulltext</td><td style="text-align:left">使用FULLTEXT索引执行连接</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">ref_or_null</td><td style="text-align:left">与ref类似，区别在于条件中包含对NULL的查询</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">index_merge</td><td style="text-align:left">索引合并优化，利用一个表里的N个索引查询,key_len表示这些索引键的和最长长度。</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">unique_subquery</td><td style="text-align:left">in的后面是一个查询primary key\unique字段的子查询</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">index_subquery</td><td style="text-align:left">in的后面是一个查询普通index字段的子查询</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">range</td><td style="text-align:left">单表索引中的范围查询,使用索引查询出单个表中的一些行数据。ref列会变为null</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">index</td><td style="text-align:left">等于ALL。它有两种情况：(1)覆盖索引 (2)用索引的顺序做一个全表扫描。</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">all</td><td style="text-align:left">全表扫描</td></tr></tbody></table><h2 id="2-6-possible-keys"><a href="#2-6-possible-keys" class="headerlink" title="(2.6) possible_keys"></a>(2.6) possible_keys</h2><p>  提示使用哪个索引会在该表中找到行</p><h2 id="2-7-key"><a href="#2-7-key" class="headerlink" title="(2.7) key"></a>(2.7) key</h2><p>  MYSQL使用的索引</p><h2 id="2-8-key-len"><a href="#2-8-key-len" class="headerlink" title="(2.8) key_len"></a>(2.8) key_len</h2><p>key_len 说明<br>  key_len: 4 // INT NOT NULL<br>  key_len: 5 // INT DEFAULT NULL<br>  key_len: 30 // CHAR(30) NOT NULL<br>  key_len: 32 // VARCHAR(30) NOT NULL<br>  key_len: 92 // VARCHAR(30) NOT NULL CHARSET=utf8</p><p>key_len大小的计算规则:<br>  a、一般地，key_len 等于索引列类型字节长度，例如int类型为4-bytes，bigint为8-bytes；<br>  b、如果是字符串类型，还需要同时考虑字符集因素，例如：CHAR(30) UTF8则key_len至少是90-bytes；<br>  c、若该列类型定义时允许NULL，其key_len还需要再加 1-bytes；<br>  d、若该列类型为变长类型，例如 VARCHAR（TEXT\BLOB不允许整列创建索引，如果创建部分索引，也被视为动态列类型），其key_len还需要再加 2-bytes;</p><h2 id="2-9-ref"><a href="#2-9-ref" class="headerlink" title="(2.9) ref"></a>(2.9) ref</h2><p>  ref列显示使用哪个列或常数与key一起从表中选择行。</p><h2 id="2-10-rows"><a href="#2-10-rows" class="headerlink" title="(2.10) rows"></a>(2.10) rows</h2><p>  rows_examined，要得到最终记录索要扫描经过的记录数，这个数越小越好。</p><h2 id="2-11-filterrd"><a href="#2-11-filterrd" class="headerlink" title="(2.11)  filterrd"></a>(2.11)  filterrd</h2><p>  按表条件过滤行的百分比</p><h2 id="2-12-Extra"><a href="#2-12-Extra" class="headerlink" title="(2.12) Extra"></a>(2.12) Extra</h2><p>  Extra是对执行计划的额外说明，包含重要信息。</p><p>例如：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">type value</th><th style="text-align:left">Meaning</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">const row not found</td><td style="text-align:left">所要查询的表为空</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">Distinct</td><td style="text-align:left">mysql正在查询distinct值，因此当它每查到一个distinct值之后就会停止当前组的搜索，去查询下一个值</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">Impossible WHERE</td><td style="text-align:left">where条件总为false，表里没有满足条件的记录</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">Impossible WHERE noticed after reading const tables</td><td style="text-align:left">在优化器评估了const表之后，发现where条件均不满足</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">no matching row in const table</td><td style="text-align:left">当前join的表为const表，不能匹配</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">Not exists</td><td style="text-align:left">优化器发现内表记录不可能满足where条件</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">Select tables optimized away</td><td style="text-align:left">在没有group by子句时，对于MyISAM的select count(*)操作，或者当对于min(),max()的操作可以利用索引优化，优化器发现只会返回一行。</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">Using filesort</td><td style="text-align:left">使用filesort来进行order by操作</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">Using index</td><td style="text-align:left">覆盖索引</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">Using index for group-by</td><td style="text-align:left">对于group by列或者distinct列，可以利用索引检索出数据，而不需要去表里查数据、分组、排序、去重等等</td></tr><tr><td style="text-align:left">11</td><td style="text-align:left">Using join buffer</td><td style="text-align:left">之前的表连接在nested loop之后放进join buffer，再来和本表进行join。适用于本表的访问type为range，index或all</td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">Using sort_union,using union,using intersect</td><td style="text-align:left">index_merge的三种情况</td></tr><tr><td style="text-align:left">13</td><td style="text-align:left">Using temporary</td><td style="text-align:left">使用了临时表来存储中间结果集，适用于group by，distinct，或order by列为不同表的列。</td></tr><tr><td style="text-align:left">14</td><td style="text-align:left">Using where</td><td style="text-align:left">在存储引擎层检索出记录后，在server利用where条件进行过滤，并返回给客户端</td></tr></tbody></table><h1 id="3-Explain妙用"><a href="#3-Explain妙用" class="headerlink" title="(3) Explain妙用"></a>(3) Explain妙用</h1><p>  查询表的大概数据总数。<br>  EXPLAIN SELECT * FROM t1 ;<br>  查询表t1的大概总数。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://dev.mysql.com/doc/refman/5.7/en/explain.html" target="_blank" rel="noopener">EXPLAIN Statement</a><br>[2] <a href="https://dev.mysql.com/doc/refman/5.7/en/explain-output.html" target="_blank" rel="noopener">explain-output</a><br>[3] <a href="https://blog.csdn.net/zhuxineli/article/details/14455029" target="_blank" rel="noopener">MYSQL explain详解</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  在使用MySQL时，如果发现查询语句耗时，会进行排查及调优，其中常用的一个方法是用explain查看sql执行计划。&lt;/p&gt;
&lt;h1 id=&quot;1-explain示例&quot;&gt;&lt;a href=&quot;#1-explain示例&quot; class=&quot;headerlink&quot; title=&quot;(1) explain示例&quot;&gt;&lt;/a&gt;(1) explain示例&lt;/h1&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; explain select * from user ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  1 | SIMPLE      | user  | NULL       | ALL  | NULL          | NULL | NULL    | NULL |    5 |   100.00 | NULL  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;warning&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0.03&lt;/span&gt; sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; EXPLAIN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -&amp;gt; SELECT c.id, c.jid, c.tid, l.id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -&amp;gt; FROM c1 c, l1 l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -&amp;gt; WHERE c.tid = l.lid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    -&amp;gt; LIMIT 10 ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| id | select_type | table | partitions | type  | possible_keys | key          | key_len | ref                   | rows   | filtered | Extra                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  1 | SIMPLE      | l     | NULL       | index | idx_lid       | idx_lid      | 515     | NULL                  | 185827 |   100.00 | Using where; Using index |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  1 | SIMPLE      | c     | NULL       | ref   | idx_tid       | idx_tid      | 67      | test.l.lid            |      1 |   100.00 | Using index condition    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+&lt;span class=&quot;comment&quot;&gt;----+-------------+-------+------------+-------+---------------+--------------+---------+-----------------------+--------+----------+--------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;warning&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt; sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://weikeqin.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://weikeqin.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Java内存模型</title>
    <link href="http://weikeqin.com/2020/02/03/java-mermory-model/"/>
    <id>http://weikeqin.com/2020/02/03/java-mermory-model/</id>
    <published>2020-02-03T02:34:22.000Z</published>
    <updated>2020-02-11T04:06:42.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内存模型"><a href="#内存模型" class="headerlink" title="内存模型"></a>内存模型</h1><p>  在多核系统中，处理器一般有一层或者多层的缓存，这些的缓存通过加速数据访问（因为数据距离处理器更近）和降低共享内存在总线上的通讯（因为本地缓存能够满足许多内存操作）来提高CPU性能。缓存能够大大提升性能，但是它们也带来了许多挑战。例如，当两个CPU同时检查相同的内存地址时会发生什么？在什么样的条件下它们会看到相同的值？</p><p>  在处理器层面上，内存模型定义了一个充要条件，“让当前的处理器可以看到其他处理器写入到内存的数据”以及“其他处理器可以看到当前处理器写入到内存的数据”。有些处理器有很强的内存模型(strong memory model)，能够让所有的处理器在任何时候任何指定的内存地址上都可以看到完全相同的值。而另外一些处理器则有较弱的内存模型（weaker memory model），在这种处理器中，必须使用内存屏障（一种特殊的指令）来刷新本地处理器缓存并使本地处理器缓存无效，目的是为了让当前处理器能够看到其他处理器的写操作或者让其他处理器能看到当前处理器的写操作。这些内存屏障通常在lock和unlock操作的时候完成。内存屏障在高级语言中对程序员是不可见的。</p><a id="more"></a><h1 id="Java内存模型"><a href="#Java内存模型" class="headerlink" title="Java内存模型"></a>Java内存模型</h1><p>  Java 内存模型规范了 JVM 如何提供按需禁用缓存和编译优化的方法。具体来说，这些方法包括 volatile、synchronized 和 final 三个关键字，以及六项 Happens-Before 规则。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] 《深入理解Java虚拟机》 周志明<br>[2] <a href="https://time.geekbang.org/column/article/84017" target="_blank" rel="noopener">02 | Java内存模型：看Java如何解决可见性和有序性问题</a><br>[3] <a href="http://ifeve.com/jmm-faq/" target="_blank" rel="noopener">Java内存模型FAQ</a><br>[4] <a href="http://www.cs.umd.edu/~pugh/java/memoryModel/jsr-133-faq.html" target="_blank" rel="noopener">jsr-133-faq.html</a><br>[5] <a href="https://www.cs.umd.edu/~pugh/java/memoryModel/jsr133.pdf" target="_blank" rel="noopener">jsr133.pdf</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;内存模型&quot;&gt;&lt;a href=&quot;#内存模型&quot; class=&quot;headerlink&quot; title=&quot;内存模型&quot;&gt;&lt;/a&gt;内存模型&lt;/h1&gt;&lt;p&gt;  在多核系统中，处理器一般有一层或者多层的缓存，这些的缓存通过加速数据访问（因为数据距离处理器更近）和降低共享内存在总线上的通讯（因为本地缓存能够满足许多内存操作）来提高CPU性能。缓存能够大大提升性能，但是它们也带来了许多挑战。例如，当两个CPU同时检查相同的内存地址时会发生什么？在什么样的条件下它们会看到相同的值？&lt;/p&gt;
&lt;p&gt;  在处理器层面上，内存模型定义了一个充要条件，“让当前的处理器可以看到其他处理器写入到内存的数据”以及“其他处理器可以看到当前处理器写入到内存的数据”。有些处理器有很强的内存模型(strong memory model)，能够让所有的处理器在任何时候任何指定的内存地址上都可以看到完全相同的值。而另外一些处理器则有较弱的内存模型（weaker memory model），在这种处理器中，必须使用内存屏障（一种特殊的指令）来刷新本地处理器缓存并使本地处理器缓存无效，目的是为了让当前处理器能够看到其他处理器的写操作或者让其他处理器能看到当前处理器的写操作。这些内存屏障通常在lock和unlock操作的时候完成。内存屏障在高级语言中对程序员是不可见的。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://weikeqin.com/categories/java/"/>
    
    
      <category term="java" scheme="http://weikeqin.com/tags/java/"/>
    
      <category term="concurrent" scheme="http://weikeqin.com/tags/concurrent/"/>
    
  </entry>
  
  <entry>
    <title>java并发编程</title>
    <link href="http://weikeqin.com/2020/02/02/java-concurrent-programming/"/>
    <id>http://weikeqin.com/2020/02/02/java-concurrent-programming/</id>
    <published>2020-02-02T14:07:56.000Z</published>
    <updated>2020-02-11T04:06:29.194Z</updated>
    
    <content type="html"><![CDATA[<p>  并发编程最早的应用领域就是操作系统的实现。</p><p>  随着硬件的发展，互联网系统并发量轻松过百万，传统的中间件和数据库已经不能满足需求，成为瓶颈所在。</p><p>  Java 里 synchronized、wait()/notify() 相关的知识很琐碎，看懂难，会用更难。但实际上 synchronized、wait()、notify() 不过是操作系统领域里管程模型的一种实现而已，Java SDK 并发包里的条件变量 Condition 也是管程里的概念，synchronized、wait()/notify()、条件变量这些知识如果单独理解，自然是管中窥豹。但是如果站在管程这个理论模型的高度，你就会发现这些知识原来这么简单，同时用起来也就得心应手了。管程作为一种解决并发问题的模型，是继信号量模型之后的一项重大创新，它与信号量在逻辑上是等价的（可以用管程实现信号量，也可以用信号量实现管程），但是相比之下管程更易用。而且，很多编程语言都支持管程，搞懂管程，对学习其他很多语言的并发编程有很大帮助。然而，很多人急于学习 Java 并发编程技术，却忽略了技术背后的理论和模型，而理论和模型却往往比具体的技术更为重要。</p><a id="more"></a><p>  Java SDK 并发包乃是并发大师 Doug Lea 出品，堪称经典，它内部一定是有章可循的。</p><p>  并发编程可以总结为三个核心问题：分工、同步、互斥。</p><p>  分工指的是如何高效地拆解任务并分配给线程，而同步指的是线程之间如何协作，互斥则是保证同一时刻只允许一个线程访问共享资源。Java SDK 并发包很大部分内容都是按照这三个维度组织的，例如 Fork/Join 框架就是一种分工模式，CountDownLatch 就是一种典型的同步方式，而可重入锁则是一种互斥手段。</p><p>  当把并发编程核心的问题搞清楚，再回过头来看 Java SDK 并发包，你会感觉豁然开朗，它不过是针对并发问题开发出来的工具而已，此时的 SDK 并发包可以任你“盘”了。</p><p>  并发编程涉及操作系统、CPU、内存等等多方面的知识。</p><p>  问题背后的本质、问题的起源，同时站在理论、模型的角度讲解 Java 并发，让你的知识更成体系，融会贯通。</p><p>  要理解可见性，就需要了解一些 CPU 和缓存的知识；要理解原子性，就需要理解一些操作系统的知识；很多无锁算法的实现往往也需要理解 CPU 缓存。</p><p>可见性：一个线程对共享变量的修改，另外一个线程能够立刻看到。<br>  CPU缓存、内存 数据不一致导致。<br>原子性：一个或者多个操作在 CPU 执行的过程中不被中断的特性。<br>  线程切换导致。<br>有序性：程序按照代码的先后顺序执行。<br>  重排序导致。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[0] <a href="https://time.geekbang.org/column/article/83087" target="_blank" rel="noopener">为什么需要学习并发编程</a><br>[0] <a href="https://time.geekbang.org/column/article/83267" target="_blank" rel="noopener">学习攻略 | 如何才能学好并发编程？</a></p><p>[1] <a href="https://time.geekbang.org/column/article/83682" target="_blank" rel="noopener">01 | 可见性、原子性和有序性问题：并发编程Bug的源头</a><br>[2] <a href="https://time.geekbang.org/column/article/84017" target="_blank" rel="noopener">02 | Java内存模型：看Java如何解决可见性和有序性问题</a><br>[3] <a href="https://time.geekbang.org/column/article/84344" target="_blank" rel="noopener">03 | 互斥锁（上）：解决原子性问题</a><br>[4] <a href="https://time.geekbang.org/column/article/84601" target="_blank" rel="noopener">04 | 互斥锁（下）：如何用一把锁保护多个资源？</a><br>[5] <a href="https://time.geekbang.org/column/article/85001" target="_blank" rel="noopener">05 | 一不小心就死锁了，怎么办？</a><br>[6] <a href="https://time.geekbang.org/column/article/85241" target="_blank" rel="noopener">06 | 用“等待-通知”机制优化循环等待</a><br>[7] <a href="https://time.geekbang.org/column/article/85702" target="_blank" rel="noopener">07 | 安全性、活跃性以及性能问题</a><br>[8] <a href="https://time.geekbang.org/column/article/86089" target="_blank" rel="noopener">08 | 管程：并发编程的万能钥匙</a><br>[9] <a href="https://time.geekbang.org/column/article/86366" target="_blank" rel="noopener">09 | Java线程（上）：Java线程的生命周期</a><br>[10] <a href="https://time.geekbang.org/column/article/86666" target="_blank" rel="noopener">10 | Java线程（中）：创建多少线程才是合适的？</a><br>[11] <a href="https://time.geekbang.org/column/article/86695" target="_blank" rel="noopener">11 | Java线程（下）：为什么局部变量是线程安全的？</a><br>[] <a href></a><br>[] <a href></a><br>[] <a href></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  并发编程最早的应用领域就是操作系统的实现。&lt;/p&gt;
&lt;p&gt;  随着硬件的发展，互联网系统并发量轻松过百万，传统的中间件和数据库已经不能满足需求，成为瓶颈所在。&lt;/p&gt;
&lt;p&gt;  Java 里 synchronized、wait()/notify() 相关的知识很琐碎，看懂难，会用更难。但实际上 synchronized、wait()、notify() 不过是操作系统领域里管程模型的一种实现而已，Java SDK 并发包里的条件变量 Condition 也是管程里的概念，synchronized、wait()/notify()、条件变量这些知识如果单独理解，自然是管中窥豹。但是如果站在管程这个理论模型的高度，你就会发现这些知识原来这么简单，同时用起来也就得心应手了。管程作为一种解决并发问题的模型，是继信号量模型之后的一项重大创新，它与信号量在逻辑上是等价的（可以用管程实现信号量，也可以用信号量实现管程），但是相比之下管程更易用。而且，很多编程语言都支持管程，搞懂管程，对学习其他很多语言的并发编程有很大帮助。然而，很多人急于学习 Java 并发编程技术，却忽略了技术背后的理论和模型，而理论和模型却往往比具体的技术更为重要。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://weikeqin.com/categories/java/"/>
    
    
      <category term="java" scheme="http://weikeqin.com/tags/java/"/>
    
      <category term="concurrent" scheme="http://weikeqin.com/tags/concurrent/"/>
    
  </entry>
  
  <entry>
    <title>新冠形病毒疫情传染数据模拟</title>
    <link href="http://weikeqin.com/2020/02/02/novel-coronavirus-pneumonia-infection-data-simulation/"/>
    <id>http://weikeqin.com/2020/02/02/novel-coronavirus-pneumonia-infection-data-simulation/</id>
    <published>2020-02-02T07:42:33.000Z</published>
    <updated>2020-02-17T08:09:43.687Z</updated>
    
    <content type="html"><![CDATA[<p>  新冠形病毒(Novel Conronavirus Pneumonia)疫情数据模拟。</p><p>  该模拟参考网上公开数据，模拟(数据可能不准确)只是为了让大家心里有个数，不要出门或尽量少出门。<br>  由于建模使用数据误差较大，结果仅供参考。</p><p>  需要数据 </p><ol><li>全国人口统计数据</li><li>行政区划分数据</li><li>人口流动数据</li><li>全国各小区数据</li><li>高考各大高校录取数据</li><li><p>疫情数据 ( 卫健委公布的各省市确诊人数、 同行数据 )</p><p>使模型更加准确所需数据</p></li><li>通信运营商数据  (从2019.12.01~2020.02.16 用于通过手机定位)<br>中国联通已经开始行动了，发送 cxmyd#身份证后四位 到 10010 可查询近14日内到访的省市信息(驻留超过4小时)，公益服务。</li><li><p>确诊人数经纬度坐标数据  (用于预防)</p><p>使模型更加准确需要优化的点：</p></li><li>数据层面<br>人口数据更详细，具体到 城市具体到街道、小区，城镇具体到 村 甚至 小组。<br>人口流动数据更详细， @通信运营商@中国电信@中国移动@中国联通@今日头条@美团@阿里巴巴@京东</li><li>建模层面<br>数据统计需要耗费大量人力物力，不可能做到100%<br>在当前数据的情况下，需要部分数据缺失，部分数据延迟<br>根据 概率论和数理统计 以及 离散数学 去估计、模拟可能的情况。         </li></ol><a id="more"></a><h1 id="1-数据准备"><a href="#1-数据准备" class="headerlink" title="(1) 数据准备"></a>(1) 数据准备</h1><ol><li>全国人口统计数据</li><li>行政区划分数据</li><li>人口流动数据</li><li>全国各小区数据<br>高考各大高校录取数据</li><li>卫健委每天确诊数据</li><li><p>确诊数据 + 疑似数据</p><p>使模型更加准确所需数据</p></li><li>通信运营商数据  (从2019.12.01~2020.02.16 用于通过手机定位)</li><li>确诊人数经纬度坐标数据  (用于预防)</li></ol><h2 id="1-1-国家统计局-人口普查数据"><a href="#1-1-国家统计局-人口普查数据" class="headerlink" title="(1.1) 国家统计局-人口普查数据"></a>(1.1) 国家统计局-人口普查数据</h2><p> <a href="http://www.gov.cn/shuju/2017sjcs/sjxqpage.htm" target="_blank" rel="noopener">中华人民共和国中央人民政府-数据-数据详情-总人口</a><br> <a href="http://spcx.www.gov.cn/ZFW-AccessPlatform/gov/np/export.do?selectLegend=%25E5%25B9%25B4%25E6%259C%25AB%25E4%25BA%25BA%25E5%258F%25A3%25EF%25BC%2588%25E4%25B8%2587%25E4%25BA%25BA%25EF%25BC%2589&amp;startYear=2002&amp;endYear=2018" target="_blank" rel="noopener">总人口数据下载</a></p><p> <a href="http://www.stats.gov.cn/tjsj/pcsj/" target="_blank" rel="noopener">国家统计局-普查数据</a><br> <a href="http://www.stats.gov.cn/tjsj/pcsj/rkpc/6rp/indexce.htm" target="_blank" rel="noopener">2010年第6次人口普查数据</a></p><p> <a href="http://www.stats.gov.cn/tjsj/pcsj/rkpc/6rp/lefte.htm" target="_blank" rel="noopener">第6次人口普查数据 索引</a></p><p> 对应下载文件  <a href="http://www.stats.gov.cn/tjsj/pcsj/rkpc/6rp/excel/A0101a.xls" target="_blank" rel="noopener">http://www.stats.gov.cn/tjsj/pcsj/rkpc/6rp/excel/A0101a.xls</a></p><p> 各县市人口通过百度百科获取，结果基本准确。数据会有一些偏差。<br> 村镇人口通过百度百科获取，结果不太准确</p><h3 id="1-1-1-各年全国总人口"><a href="#1-1-1-各年全国总人口" class="headerlink" title="(1.1.1) 各年全国总人口"></a>(1.1.1) 各年全国总人口</h3><table><thead><tr><th>序号</th><th>统计时间</th><th>年末人口（万人）</th></tr></thead><tbody><tr><td>17</td><td>2018</td><td>139538</td></tr><tr><td>16</td><td>2017</td><td>139008</td></tr><tr><td>15</td><td>2016</td><td>138271</td></tr><tr><td>14</td><td>2015</td><td>137462</td></tr><tr><td>13</td><td>2014</td><td>136782</td></tr><tr><td>12</td><td>2013</td><td>136072</td></tr><tr><td>11</td><td>2012</td><td>135404</td></tr><tr><td>10</td><td>2011</td><td>134735</td></tr><tr><td>9</td><td>2010</td><td>134091</td></tr><tr><td>8</td><td>2009</td><td>133450</td></tr><tr><td>7</td><td>2008</td><td>132802</td></tr><tr><td>6</td><td>2007</td><td>132129</td></tr><tr><td>5</td><td>2006</td><td>131448</td></tr><tr><td>4</td><td>2005</td><td>130756</td></tr><tr><td>3</td><td>2004</td><td>129988</td></tr><tr><td>2</td><td>2003</td><td>129227</td></tr><tr><td>1</td><td>2002</td><td>128453</td></tr></tbody></table><h3 id="1-1-2-全国总人口详细"><a href="#1-1-2-全国总人口详细" class="headerlink" title="(1.1.2) 全国总人口详细"></a>(1.1.2) 全国总人口详细</h3><table><thead><tr><th>地区</th><th>户数 合计</th><th>户数  家庭户</th><th>户数   集体户</th><th>合计</th><th>(合计)男</th><th>(合计)女</th><th>性别比(女=100)</th><th>(家庭户)小计</th><th>(家庭户) 男</th><th>(家庭户)女</th><th>(家庭户) 性别比  (女=100)</th><th>(集体户)小计</th><th>(集体户)男</th><th>(集体户)女</th><th>(集体户) 性别比 (女=100)</th><th>平均家庭  户规模 （人/户）</th></tr></thead><tbody><tr><td>全    国</td><td>417722698</td><td>401934196</td><td>15788502</td><td>1332810869</td><td>682329104</td><td>650481765</td><td>104.90</td><td>1239981250</td><td>627410399</td><td>612570851</td><td>102.42</td><td>92829619</td><td>54918705</td><td>37910914</td><td>144.86</td><td>3.09</td></tr><tr><td>北    京</td><td>7355291</td><td>6680552</td><td>674739</td><td>19612368</td><td>10126430</td><td>9485938</td><td>106.75</td><td>16389723</td><td>8173161</td><td>8216562</td><td>99.47</td><td>3222645</td><td>1953269</td><td>1269376</td><td>153.88</td><td>2.45</td></tr><tr><td>天    津</td><td>3963604</td><td>3661992</td><td>301612</td><td>12938693</td><td>6907091</td><td>6031602</td><td>114.52</td><td>10262186</td><td>5129604</td><td>5132582</td><td>99.94</td><td>2676507</td><td>1777487</td><td>899020</td><td>197.71</td><td>2.80</td></tr><tr><td>河    北</td><td>20813492</td><td>20395116</td><td>418376</td><td>71854210</td><td>36430286</td><td>35423924</td><td>102.84</td><td>68538709</td><td>34552649</td><td>33986060</td><td>101.67</td><td>3315501</td><td>1877637</td><td>1437864</td><td>130.59</td><td>3.36</td></tr><tr><td>山    西</td><td>10654162</td><td>10330207</td><td>323955</td><td>35712101</td><td>18338760</td><td>17373341</td><td>105.56</td><td>33484131</td><td>16988087</td><td>16496044</td><td>102.98</td><td>2227970</td><td>1350673</td><td>877297</td><td>153.96</td><td>3.24</td></tr><tr><td>内 蒙 古</td><td>8470472</td><td>8205498</td><td>264974</td><td>24706291</td><td>12838243</td><td>11868048</td><td>108.17</td><td>23071690</td><td>11725291</td><td>11346399</td><td>103.34</td><td>1634601</td><td>1112952</td><td>521649</td><td>213.35</td><td>2.81</td></tr><tr><td>辽    宁</td><td>15334912</td><td>14994046</td><td>340866</td><td>43746323</td><td>22147745</td><td>21598578</td><td>102.54</td><td>41755874</td><td>20956756</td><td>20799118</td><td>100.76</td><td>1990449</td><td>1190989</td><td>799460</td><td>148.97</td><td>2.78</td></tr><tr><td>吉    林</td><td>9162183</td><td>8998492</td><td>163691</td><td>27452815</td><td>13907218</td><td>13545597</td><td>102.67</td><td>26457769</td><td>13358390</td><td>13099379</td><td>101.98</td><td>995046</td><td>548828</td><td>446218</td><td>123.00</td><td>2.94</td></tr><tr><td>黑 龙 江</td><td>13192935</td><td>13000088</td><td>192847</td><td>38313991</td><td>19426106</td><td>18887885</td><td>102.85</td><td>36884039</td><td>18603181</td><td>18280858</td><td>101.76</td><td>1429952</td><td>822925</td><td>607027</td><td>135.57</td><td>2.84</td></tr><tr><td>上    海</td><td>8893483</td><td>8253257</td><td>640226</td><td>23019196</td><td>11854916</td><td>11164280</td><td>106.19</td><td>20593430</td><td>10318168</td><td>10275262</td><td>100.42</td><td>2425766</td><td>1536748</td><td>889018</td><td>172.86</td><td>2.50</td></tr><tr><td>江    苏</td><td>25635291</td><td>24381782</td><td>1253509</td><td>78660941</td><td>39626707</td><td>39034234</td><td>101.52</td><td>71685839</td><td>35542124</td><td>36143715</td><td>98.34</td><td>6975102</td><td>4084583</td><td>2890519</td><td>141.31</td><td>2.94</td></tr><tr><td>浙    江</td><td>20060115</td><td>18854021</td><td>1206094</td><td>54426891</td><td>27965641</td><td>26461250</td><td>105.69</td><td>49425543</td><td>25037320</td><td>24388223</td><td>102.66</td><td>5001348</td><td>2928321</td><td>2073027</td><td>141.26</td><td>2.62</td></tr><tr><td>安    徽</td><td>19322432</td><td>18861956</td><td>460476</td><td>59500468</td><td>30245513</td><td>29254955</td><td>103.39</td><td>56493891</td><td>28462853</td><td>28031038</td><td>101.54</td><td>3006577</td><td>1782660</td><td>1223917</td><td>145.65</td><td>3.00</td></tr><tr><td>福    建</td><td>11971873</td><td>11206317</td><td>765556</td><td>36894217</td><td>18981054</td><td>17913163</td><td>105.96</td><td>33397663</td><td>16901083</td><td>16496580</td><td>102.45</td><td>3496554</td><td>2079971</td><td>1416583</td><td>146.83</td><td>2.98</td></tr><tr><td>江    西</td><td>11847841</td><td>11542527</td><td>305314</td><td>44567797</td><td>23003521</td><td>21564276</td><td>106.67</td><td>42181417</td><td>21600070</td><td>20581347</td><td>104.95</td><td>2386380</td><td>1403451</td><td>982929</td><td>142.78</td><td>3.65</td></tr><tr><td>山    东</td><td>30794664</td><td>30105454</td><td>689210</td><td>95792719</td><td>48446944</td><td>47345775</td><td>102.33</td><td>89855501</td><td>45023357</td><td>44832144</td><td>100.43</td><td>5937218</td><td>3423587</td><td>2513631</td><td>136.20</td><td>2.98</td></tr><tr><td>河    南</td><td>26404973</td><td>25928729</td><td>476244</td><td>94029939</td><td>47493063</td><td>46536876</td><td>102.05</td><td>90028072</td><td>45262137</td><td>44765935</td><td>101.11</td><td>4001867</td><td>2230926</td><td>1770941</td><td>125.97</td><td>3.47</td></tr><tr><td>湖    北</td><td>17253385</td><td>16695121</td><td>558264</td><td>57237727</td><td>29391247</td><td>27846480</td><td>105.55</td><td>52745625</td><td>26826301</td><td>25919324</td><td>103.50</td><td>4492102</td><td>2564946</td><td>1927156</td><td>133.09</td><td>3.16</td></tr><tr><td>湖    南</td><td>19029894</td><td>18625710</td><td>404184</td><td>65700762</td><td>33776459</td><td>31924303</td><td>105.80</td><td>61911446</td><td>31611459</td><td>30299987</td><td>104.33</td><td>3789316</td><td>2165000</td><td>1624316</td><td>133.29</td><td>3.32</td></tr><tr><td>广    东</td><td>32222752</td><td>28630609</td><td>3592143</td><td>104320459</td><td>54400538</td><td>49919921</td><td>108.98</td><td>88979305</td><td>45465958</td><td>43513347</td><td>104.49</td><td>15341154</td><td>8934580</td><td>6406574</td><td>139.46</td><td>3.11</td></tr><tr><td>广    西</td><td>13467663</td><td>13151404</td><td>316259</td><td>46023761</td><td>23924704</td><td>22099057</td><td>108.26</td><td>43970320</td><td>22733969</td><td>21236351</td><td>107.05</td><td>2053441</td><td>1190735</td><td>862706</td><td>138.02</td><td>3.34</td></tr><tr><td>海    南</td><td>2451819</td><td>2331149</td><td>120670</td><td>8671485</td><td>4592283</td><td>4079202</td><td>112.58</td><td>8060519</td><td>4231490</td><td>3829029</td><td>110.51</td><td>610966</td><td>360793</td><td>250173</td><td>144.22</td><td>3.46</td></tr><tr><td>重    庆</td><td>10272559</td><td>10000965</td><td>271594</td><td>28846170</td><td>14608870</td><td>14237300</td><td>102.61</td><td>26994017</td><td>13542424</td><td>13451593</td><td>100.68</td><td>1852153</td><td>1066446</td><td>785707</td><td>135.73</td><td>2.70</td></tr><tr><td>四    川</td><td>26383458</td><td>25794161</td><td>589297</td><td>80417528</td><td>40827834</td><td>39589694</td><td>103.13</td><td>76207174</td><td>38380622</td><td>37826552</td><td>101.46</td><td>4210354</td><td>2447212</td><td>1763142</td><td>138.80</td><td>2.95</td></tr><tr><td>贵    州</td><td>10745630</td><td>10558461</td><td>187169</td><td>34748556</td><td>17905471</td><td>16843085</td><td>106.31</td><td>33571308</td><td>17153547</td><td>16417761</td><td>104.48</td><td>1177248</td><td>751924</td><td>425324</td><td>176.79</td><td>3.18</td></tr><tr><td>云    南</td><td>12695396</td><td>12339961</td><td>355435</td><td>45966766</td><td>23856696</td><td>22110070</td><td>107.90</td><td>43626674</td><td>22391253</td><td>21235421</td><td>105.44</td><td>2340092</td><td>1465443</td><td>874649</td><td>167.55</td><td>3.54</td></tr><tr><td>西    藏</td><td>689521</td><td>670838</td><td>18683</td><td>3002165</td><td>1542652</td><td>1459513</td><td>105.70</td><td>2837769</td><td>1429541</td><td>1408228</td><td>101.51</td><td>164396</td><td>113111</td><td>51285</td><td>220.55</td><td>4.23</td></tr><tr><td>陕    西</td><td>11084516</td><td>10718563</td><td>365953</td><td>37327379</td><td>19287575</td><td>18039804</td><td>106.92</td><td>34462115</td><td>17556257</td><td>16905858</td><td>103.85</td><td>2865264</td><td>1731318</td><td>1133946</td><td>152.68</td><td>3.22</td></tr><tr><td>甘    肃</td><td>7113833</td><td>6900369</td><td>213464</td><td>25575263</td><td>13064193</td><td>12511070</td><td>104.42</td><td>24052594</td><td>12141360</td><td>11911234</td><td>101.93</td><td>1522669</td><td>922833</td><td>599836</td><td>153.85</td><td>3.49</td></tr><tr><td>青    海</td><td>1586635</td><td>1529039</td><td>57596</td><td>5626723</td><td>2913793</td><td>2712930</td><td>107.40</td><td>5284525</td><td>2675766</td><td>2608759</td><td>102.57</td><td>342198</td><td>238027</td><td>104171</td><td>228.50</td><td>3.46</td></tr><tr><td>宁    夏</td><td>1945064</td><td>1882205</td><td>62859</td><td>6301350</td><td>3227404</td><td>3073946</td><td>104.99</td><td>5970133</td><td>3015722</td><td>2954411</td><td>102.08</td><td>331217</td><td>211682</td><td>119535</td><td>177.09</td><td>3.17</td></tr><tr><td>新    疆</td><td>6902850</td><td>6705607</td><td>197243</td><td>21815815</td><td>11270147</td><td>10545668</td><td>106.87</td><td>20802249</td><td>10620499</td><td>10181750</td><td>104.31</td><td>1013566</td><td>649648</td><td>363918</td><td>178.51</td><td>3.10</td></tr></tbody></table><h2 id="1-2-民政局-行政区划数据"><a href="#1-2-民政局-行政区划数据" class="headerlink" title="(1.2) 民政局-行政区划数据"></a>(1.2) 民政局-行政区划数据</h2><p>民政部、国家统计局：</p><p>  <a href="http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2018/index.html" target="_blank" rel="noopener">国家统计局-2018年统计用区划代码和城乡划分代码(截止2018年10月31日)</a></p><p>  <a href="http://www.mca.gov.cn/article/sj/xzqh/2019/" target="_blank" rel="noopener">中华人民共和国民政部-中华人民共和国行政区划代码</a><br>  <a href="http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/" target="_blank" rel="noopener">中华人民共和国国家统计局-统计用区划和城乡划分代码</a><br>  <a href="http://www.stats.gov.cn/tjsj/tjbz/200911/t20091125_8667.html" target="_blank" rel="noopener">中华人民共和国国家统计局-统计用区划代码和城乡划分代码编制规则</a></p><p>  <a href="http://www.mca.gov.cn/article/sj/xzqh/1980/201903/201903011447.html" target="_blank" rel="noopener">2018年12月中华人民共和国县以上行政区划代码</a><br>  <a href="http://www.mca.gov.cn/article/sj/xzqh/2019/201912/20191200022455.shtml" target="_blank" rel="noopener">2019年11月中华人民共和国县以上行政区划代码</a></p><h2 id="1-3-人口流动数据"><a href="#1-3-人口流动数据" class="headerlink" title="(1.3) 人口流动数据"></a>(1.3) 人口流动数据</h2><p>  假设流动人口 ≈ 春运期间 飞机 + 火车(高铁) + 汽车 + 摩托车 总和 </p><p>  <a href="http://www.umetrip.com/mskyweb/main/index.html?hrefParam=tk" target="_blank" rel="noopener">机票-航旅纵横</a><br>  <a href="https://flights.ctrip.com/" target="_blank" rel="noopener">机票-携程</a><br>  <a href="https://www.12306.cn/index/" target="_blank" rel="noopener">火车票</a><br>  <a href="https://bus.ctrip.com/" target="_blank" rel="noopener">汽车票</a></p><h2 id="1-4-全国各小区数据"><a href="#1-4-全国各小区数据" class="headerlink" title="(1.4) 全国各小区数据"></a>(1.4) 全国各小区数据</h2><p>  小区 + 村(屯)</p><p>  <a href="http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2018/index.html" target="_blank" rel="noopener">国家统计局-2018年统计用区划代码和城乡划分代码(截止2018年10月31日)</a></p><p>  房地产中介 网站获取小区数据<br>  <a href="https://bj.lianjia.com/xiaoqu/dongcheng/" target="_blank" rel="noopener">北京-东城-小区</a>  <a href="https://www.lianjia.com/city/" target="_blank" rel="noopener">链家-所有城市</a><br>  <a href="https://bj.5i5j.com/xiaoqu/n2/" target="_blank" rel="noopener">北京-小区</a>  <a href>我爱我家-所有城市</a><br> <a href="https://beijing.anjuke.com/" target="_blank" rel="noopener">北京小区</a>    <a href="https://www.anjuke.com/sy-city.html" target="_blank" rel="noopener">安居客-所有城市</a></p><h3 id="1-4-1-高考各大高校录取数据"><a href="#1-4-1-高考各大高校录取数据" class="headerlink" title="(1.4.1) 高考各大高校录取数据"></a>(1.4.1) 高考各大高校录取数据</h3><p>  这个是为了统计武汉到各个省市的学生数据 </p><h2 id="1-5-公布的疫情数据"><a href="#1-5-公布的疫情数据" class="headerlink" title="(1.5)  公布的疫情数据"></a>(1.5)  公布的疫情数据</h2><p>  <a href="http://www.nhc.gov.cn/xcs/xxgzbd/gzbd_index.shtml" target="_blank" rel="noopener">国家卫生健康委员会-&gt;疫情通报</a></p><p>  <a href="https://h5.peopleapp.com/txcx/index.html" target="_blank" rel="noopener">新型冠状病毒感染的肺炎-确诊患者同行程查询工具-人民日报</a><br>  <a href="https://2019ncov.nosugartech.com/data.json?439373" target="_blank" rel="noopener">https://2019ncov.nosugartech.com/data.json?439373</a>   </p><p>  <a href="https://ncov.dxy.cn/ncovh5/view/pneumonia" target="_blank" rel="noopener">新型冠状病毒肺炎-疫情实时动态-丁香园</a></p><p>  <a href="https://news.163.com/special/epidemic/" target="_blank" rel="noopener">肺炎疫情实时动态播报-网易新闻</a><br>  <a href="https://c.m.163.com/ug/api/wuhan/app/data/list-total?t=1581731399558" target="_blank" rel="noopener">https://c.m.163.com/ug/api/wuhan/app/data/list-total?t=1581731399558</a> </p><p>  <a href="https://news.qq.com//zt2020/page/feiyan.htm" target="_blank" rel="noopener">新型冠状病毒肺炎-疫情实时追踪</a><br>  <a href="https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&amp;callback=jQuery341008224555239086584_1581732532940&amp;_=1581732532941" target="_blank" rel="noopener">https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&amp;callback=jQuery341008224555239086584_1581732532940&amp;_=1581732532941</a></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1]  <a href="http://www.gov.cn/shuju/2017sjcs/sjxqpage.htm" target="_blank" rel="noopener">中华人民共和国中央人民政府-数据-数据详情-总人口</a><br>[2] <a href="http://spcx.www.gov.cn/ZFW-AccessPlatform/gov/np/export.do?selectLegend=%25E5%25B9%25B4%25E6%259C%25AB%25E4%25BA%25BA%25E5%258F%25A3%25EF%25BC%2588%25E4%25B8%2587%25E4%25BA%25BA%25EF%25BC%2589&amp;startYear=2002&amp;endYear=2018" target="_blank" rel="noopener">总人口数据下载</a>ß<br>[3] <a href="http://www.stats.gov.cn/tjsj/tjbz/tjyqhdmhcxhfdm/2018/index.html" target="_blank" rel="noopener">国家统计局-2018年统计用区划代码和城乡划分代码(截止2018年10月31日)</a><br>[4] <a href="http://www.umetrip.com/mskyweb/main/index.html?hrefParam=tk" target="_blank" rel="noopener">机票-航旅纵横</a><br>[5] <a href="https://flights.ctrip.com/" target="_blank" rel="noopener">机票-携程</a><br>[6] <a href="https://www.12306.cn/index/" target="_blank" rel="noopener">火车票</a><br>[7] <a href="https://bus.ctrip.com/" target="_blank" rel="noopener">汽车票</a><br>[8]   <a href="https://bj.lianjia.com/xiaoqu/dongcheng/" target="_blank" rel="noopener">北京-东城-小区</a><br>[9] <a href="https://bj.5i5j.com/xiaoqu/n2/" target="_blank" rel="noopener">北京-小区</a>  <a href>我爱我家-所有城市</a><br>[10] <a href="https://beijing.anjuke.com/" target="_blank" rel="noopener">北京小区</a>    <a href="https://www.anjuke.com/sy-city.html" target="_blank" rel="noopener">安居客-所有城市</a><br>[11] <a href="http://www.nhc.gov.cn/xcs/xxgzbd/gzbd_index.shtml" target="_blank" rel="noopener">国家卫生健康委员会-&gt;疫情通报</a><br>[12] <a href="https://h5.peopleapp.com/txcx/index.html" target="_blank" rel="noopener">新型冠状病毒感染的肺炎-确诊患者同行程查询工具</a><br>[13] <a href="https://ncov.dxy.cn/ncovh5/view/pneumonia" target="_blank" rel="noopener">新型冠状病毒肺炎-疫情实时动态-丁香园</a><br>[14] <a href="https://news.163.com/special/epidemic/" target="_blank" rel="noopener">肺炎疫情实时动态播报-网易新闻</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  新冠形病毒(Novel Conronavirus Pneumonia)疫情数据模拟。&lt;/p&gt;
&lt;p&gt;  该模拟参考网上公开数据，模拟(数据可能不准确)只是为了让大家心里有个数，不要出门或尽量少出门。&lt;br&gt;  由于建模使用数据误差较大，结果仅供参考。&lt;/p&gt;
&lt;p&gt;  需要数据 &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全国人口统计数据&lt;/li&gt;
&lt;li&gt;行政区划分数据&lt;/li&gt;
&lt;li&gt;人口流动数据&lt;/li&gt;
&lt;li&gt;全国各小区数据&lt;/li&gt;
&lt;li&gt;高考各大高校录取数据&lt;/li&gt;
&lt;li&gt;&lt;p&gt;疫情数据 ( 卫健委公布的各省市确诊人数、 同行数据 )&lt;/p&gt;
&lt;p&gt;使模型更加准确所需数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;通信运营商数据  (从2019.12.01~2020.02.16 用于通过手机定位)&lt;br&gt;中国联通已经开始行动了，发送 cxmyd#身份证后四位 到 10010 可查询近14日内到访的省市信息(驻留超过4小时)，公益服务。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确诊人数经纬度坐标数据  (用于预防)&lt;/p&gt;
&lt;p&gt;使模型更加准确需要优化的点：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;数据层面&lt;br&gt;人口数据更详细，具体到 城市具体到街道、小区，城镇具体到 村 甚至 小组。&lt;br&gt;人口流动数据更详细， @通信运营商@中国电信@中国移动@中国联通@今日头条@美团@阿里巴巴@京东&lt;/li&gt;
&lt;li&gt;建模层面&lt;br&gt;数据统计需要耗费大量人力物力，不可能做到100%&lt;br&gt;在当前数据的情况下，需要部分数据缺失，部分数据延迟&lt;br&gt;根据 概率论和数理统计 以及 离散数学 去估计、模拟可能的情况。         &lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="data" scheme="http://weikeqin.com/categories/data/"/>
    
    
      <category term="data" scheme="http://weikeqin.com/tags/data/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 映射和分析</title>
    <link href="http://weikeqin.com/2020/01/21/elasticsearch-mapping-analysis/"/>
    <id>http://weikeqin.com/2020/01/21/elasticsearch-mapping-analysis/</id>
    <published>2020-01-21T02:12:46.000Z</published>
    <updated>2020-01-21T11:23:04.898Z</updated>
    
    <content type="html"><![CDATA[<p>  当摆弄索引里面的数据时，我们发现一些奇怪的事情。一些事情看起来被打乱了：在我们的索引中有12条推文，其中只有一条包含日期 2014-09-15 ，但是看一看下面查询命中的 总数 （total）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /_search?q=2014              # 12 results</span><br><span class="line">GET /_search?q=2014-09-15        # 12 results !</span><br><span class="line">GET /_search?q=date:2014-09-15   # 1  result</span><br><span class="line">GET /_search?q=date:2014         # 0  results !</span><br></pre></td></tr></table></figure><p>  为什么在 _all 字段查询日期返回所有推文，而在 date 字段只查询年份却没有返回结果？为什么我们在 _all 字段和 date 字段的查询结果有差别？<br>  因为数据在 _all 字段与 date 字段的索引方式不同。</p><a id="more"></a><h1 id="1-精确值-VS-全文"><a href="#1-精确值-VS-全文" class="headerlink" title="(1) 精确值 VS 全文"></a>(1) 精确值 VS 全文</h1><p>  Elasticsearch 中的数据可以概括的分为两类：精确值和全文。</p><p>  精确值 如它们听起来那样精确。例如日期或者用户 ID，但字符串也可以表示精确值，例如用户名或邮箱地址。 </p><p>  另一方面，全文 是指文本数据（通常以人类容易识别的语言书写），例如一个推文的内容或一封邮件的内容。</p><p>  全文通常是指非结构化的数据，但这里有一个误解：自然语言是高度结构化的。问题在于自然语言的规则是复杂的，导致计算机难以正确解析。</p><p>精确值很容易查询。结果是二进制的：要么匹配查询，要么不匹配。这种查询很容易用 SQL 表示：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WHERE name    = "John Smith"</span><br><span class="line">AND user_id = 2</span><br><span class="line">AND date    &gt; "2014-09-15"</span><br></pre></td></tr></table></figure></p><p>  查询全文数据要微妙的多。我们问的不只是“这个文档匹配查询吗”，而是“该文档匹配查询的程度有多大？”换句话说，该文档与给定查询的相关性如何？<br>  我们很少对全文类型的域做精确匹配。相反，我们希望在文本类型的域中搜索。不仅如此，我们还希望搜索能够理解我们的 意图 ：</p><pre><code>搜索 UK ，会返回包含 United Kindom 的文档。搜索 jump ，会匹配 jumped ， jumps ， jumping ，甚至是 leap 。搜索 johnny walker 会匹配 Johnnie Walker ， johnnie depp 应该匹配 Johnny Depp 。fox news hunting 应该返回福克斯新闻（ Foxs News ）中关于狩猎的故事，同时， fox hunting news 应该返回关于猎狐的故事。</code></pre><p>为了促进这类在全文域中的查询，Elasticsearch 首先 分析 文档，之后根据结果创建 倒排索引 。</p><h1 id="2-倒排索引"><a href="#2-倒排索引" class="headerlink" title="(2) 倒排索引"></a>(2) 倒排索引</h1><p>Elasticsearch 使用一种称为 倒排索引 的结构，它适用于快速的全文搜索。一个倒排索引由文档中所有不重复词的列表构成，对于其中每个词，有一个包含它的文档列表。</p><p>例如，假设我们有两个文档，每个文档的 content 域包含如下内容：</p><pre><code>The quick brown fox jumped over the lazy dogQuick brown foxes leap over lazy dogs in summer</code></pre><p>为了创建倒排索引，我们首先将每个文档的 content 域拆分成单独的 词（我们称它为 词条 或 tokens ），创建一个包含所有不重复词条的排序列表，然后列出每个词条出现在哪个文档。结果如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Trem       Doc_1       Doc_2</span><br><span class="line">-------------------------------</span><br><span class="line">Quick   |          |     X     </span><br><span class="line">The     |    X     |            </span><br><span class="line">brown   |    X     |     X    </span><br><span class="line">dog     |    X     |           </span><br><span class="line">dogs    |          |     X      </span><br><span class="line">fox     |    X     |           </span><br><span class="line">foxes   |          |     X     </span><br><span class="line">in      |          |     X      </span><br><span class="line">jumped  |    X     |           </span><br><span class="line">lazy    |    X     |     X     </span><br><span class="line">leap    |          |     X     </span><br><span class="line">over    |    X     |     X     </span><br><span class="line">quick   |    X     |           </span><br><span class="line">summer  |          |     X </span><br><span class="line">the     |    X     |      </span><br><span class="line">-------------------------------</span><br></pre></td></tr></table></figure></p><p>  现在，如果我们想搜索 <code>quick brown</code>，我们只需要查找包含每个词条的文档：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Trem       Doc_1       Doc_2</span><br><span class="line">-------------------------------</span><br><span class="line">brown   |    X     |     X     </span><br><span class="line">quick   |    X     |            </span><br><span class="line">-------------------------------</span><br><span class="line">Total   |    2     |     1</span><br></pre></td></tr></table></figure></p><p> 两个文档都匹配，但是第一个文档比第二个匹配度更高。如果我们使用仅计算匹配词条数量的简单 相似性算法 ，那么，我们可以说，对于我们查询的相关性来讲，第一个文档比第二个文档更佳。</p><p> 但是，我们目前的倒排索引有一些问题：</p><pre><code>Quick 和 quick 以独立的词条出现，然而用户可能认为它们是相同的词。fox 和 foxes 非常相似, 就像 dog 和 dogs ；他们有相同的词根。jumped 和 leap, 尽管没有相同的词根，但他们的意思很相近。他们是同义词。</code></pre><p>使用前面的索引搜索 +Quick +fox 不会得到任何匹配文档。（记住，+ 前缀表明这个词必须存在。）只有同时出现 Quick 和 fox 的文档才满足这个查询条件，但是第一个文档包含 quick fox ，第二个文档包含 Quick foxes 。</p><p>我们的用户可以合理的期望两个文档与查询匹配。我们可以做的更好。</p><p>如果我们将词条规范为标准模式，那么我们可以找到与用户搜索的词条不完全一致，但具有足够相关性的文档。例如：</p><pre><code>Quick 可以小写化为 quick 。foxes 可以 词干提取 --变为词根的格式-- 为 fox 。类似的， dogs 可以为提取为 dog 。jumped 和 leap 是同义词，可以索引为相同的单词 jump 。</code></pre><p>现在索引看上去像这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Trem       Doc_1       Doc_2</span><br><span class="line">------------------------------- </span><br><span class="line">brown   |    X     |     X    </span><br><span class="line">dog     |    X     |     X         </span><br><span class="line">fox     |    X     |     X       </span><br><span class="line">in      |          |     X      </span><br><span class="line">jumped  |    X     |     X     </span><br><span class="line">lazy    |    X     |     X       </span><br><span class="line">over    |    X     |     X     </span><br><span class="line">quick   |    X     |     X     </span><br><span class="line">summer  |          |     X </span><br><span class="line">the     |    X     |     X</span><br><span class="line">-------------------------------</span><br></pre></td></tr></table></figure></p><p>  这还远远不够。我们搜索 +Quick +fox 仍然 会失败，因为在我们的索引中，已经没有 Quick 了。但是，如果我们对搜索的字符串使用与 content 域相同的标准化规则，会变成查询 +quick +fox ，这样两个文档都会匹配！</p><h2 id="2-分析与分析器"><a href="#2-分析与分析器" class="headerlink" title="(2) 分析与分析器"></a>(2) 分析与分析器</h2><p>分析 包含下面的过程：</p><pre><code>首先，将一块文本分成适合于倒排索引的独立的 词条 ，之后，将这些词条统一化为标准格式以提高它们的“可搜索性”，或者 recall</code></pre><p>分析器执行上面的工作。 分析器 实际上是将三个功能封装到了一个包里：</p><p><code>字符过滤器</code><br>    首先，字符串按顺序通过每个 字符过滤器 。他们的任务是在分词前整理字符串。一个字符过滤器可以用来去掉HTML，或者将 &amp; 转化成 and。<br><code>分词器</code><br>    其次，字符串被 分词器 分为单个的词条。一个简单的分词器遇到空格和标点的时候，可能会将文本拆分成词条。<br><code>Token 过滤器</code><br>    最后，词条按顺序通过每个 token 过滤器 。这个过程可能会改变词条（例如，小写化 Quick ），删除词条（例如， 像 a， and， the 等无用词），或者增加词条（例如，像 jump 和 leap 这种同义词）。 </p><p>  Elasticsearch提供了开箱即用的字符过滤器、分词器和token 过滤器。 这些可以组合起来形成自定义的分析器以用于不同的目的。</p><h2 id="2-1-内置分析器"><a href="#2-1-内置分析器" class="headerlink" title="(2.1)  内置分析器"></a>(2.1)  内置分析器</h2><p>   Elasticsearch还附带了可以直接使用的预包装的分析器。接下来我们会列出最重要的分析器。为了证明它们的差异，我们看看每个分析器会从下面的字符串得到哪些词条：</p><p>“Set the shape to semi-transparent by calling set_trans(5)”</p><p><code>标准分析器</code></p><pre><code>标准分析器是Elasticsearch默认使用的分析器。它是分析各种语言文本最常用的选择。它根据 Unicode 联盟 定义的 单词边界 划分文本。删除绝大部分标点。最后，将词条小写。它会产生set, the, shape, to, semi, transparent, by, calling, set_trans, 5</code></pre><p><code>简单分析器</code></p><pre><code>简单分析器在任何不是字母的地方分隔文本，将词条小写。它会产生set, the, shape, to, semi, transparent, by, calling, set, trans</code></pre><p><code>空格分析器</code></p><pre><code>空格分析器在空格的地方划分文本。它会产生Set, the, shape, to, semi-transparent, by, calling, set_trans(5)</code></pre><p><code>语言分析器</code></p><pre><code>特定语言分析器可用于 很多语言。它们可以考虑指定语言的特点。例如， 英语 分析器附带了一组英语无用词（常用单词，例如 and 或者 the ，它们对相关性没有多少影响），它们会被删除。 由于理解英语语法的规则，这个分词器可以提取英语单词的 词干 。英语 分词器会产生下面的词条：set, shape, semi, transpar, call, set_tran, 5注意看 transparent、 calling 和 set_trans 已经变为词根格式。</code></pre><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[0] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/mapping-analysis.html" target="_blank" rel="noopener">映射和分析</a><br>[1] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_exact_values_versus_full_text.html" target="_blank" rel="noopener">精确值 VS 全文</a><br>[2] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/inverted-index.html" target="_blank" rel="noopener">倒排索引</a><br>[3] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/analysis-intro.html" target="_blank" rel="noopener">分析与分析器</a><br>[] <a href></a><br>[] <a href></a><br>[] <a href></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  当摆弄索引里面的数据时，我们发现一些奇怪的事情。一些事情看起来被打乱了：在我们的索引中有12条推文，其中只有一条包含日期 2014-09-15 ，但是看一看下面查询命中的 总数 （total）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;GET /_search?q=2014              # 12 results&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET /_search?q=2014-09-15        # 12 results !&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET /_search?q=date:2014-09-15   # 1  result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GET /_search?q=date:2014         # 0  results !&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  为什么在 _all 字段查询日期返回所有推文，而在 date 字段只查询年份却没有返回结果？为什么我们在 _all 字段和 date 字段的查询结果有差别？&lt;br&gt;  因为数据在 _all 字段与 date 字段的索引方式不同。&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://weikeqin.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://weikeqin.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch-search</title>
    <link href="http://weikeqin.com/2020/01/20/elasticsearch-search/"/>
    <id>http://weikeqin.com/2020/01/20/elasticsearch-search/</id>
    <published>2020-01-20T10:22:49.000Z</published>
    <updated>2020-01-21T03:36:44.808Z</updated>
    
    <content type="html"><![CDATA[<p> search 最基本的工具</p><p>  Elasticsearch 不只会<em>存储（stores）</em> 文档，为了能被搜索到也会为文档添加<em>索引（indexes）</em> ，这也是为什么我们使用结构化的 JSON 文档，而不是无结构的二进制数据。</p><p>  文档中的每个字段都将被索引并且可以被查询 。不仅如此，在简单查询时，Elasticsearch 可以使用 所有（all） 这些索引字段，以惊人的速度返回结果。</p><p>搜索（search） 可以做到：<br>    在类似于 gender 或者 age 这样的字段上使用结构化查询，join_date 这样的字段上使用排序，就像SQL的结构化查询一样。<br>    全文检索，找出所有匹配关键字的文档并按照<em>相关性（relevance）</em> 排序后返回结果。<br>    以上二者兼而有之。</p><p>很多搜索都是开箱即用的，为了充分挖掘 Elasticsearch 的潜力，你需要理解以下三个概念：</p><p>映射（Mapping）<br>    描述数据在每个字段内如何存储<br>分析（Analysis）<br>    全文是如何处理使之可以被搜索的<br>领域特定查询语言（Query DSL）<br>    Elasticsearch 中强大灵活的查询语言 </p><a id="more"></a> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST <span class="string">'http://localhost:9200/_bulk?pretty'</span> -H <span class="string">'Content-Type: application/json'</span> -d <span class="string">'</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "user", "_type": "doc", "_id": "1" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "email" : "john@smith.com", "name" : "John Smith", "username" : "@john" &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "user", "_type": "doc", "_id": "2" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "email" : "mary@jones.com", "name" : "Mary Jones", "username" : "@mary" &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "3" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-13", "name" : "Mary Jones", "tweet" : "Elasticsearch means full text search has never been so easy", "user_id" : 2 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "4" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-14", "name" : "John Smith", "tweet" : "@mary it is not just text, it does everything", "user_id" : 1 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "5" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-15", "name" : "Mary Jones", "tweet" : "However did I manage before Elasticsearch?", "user_id" : 2 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "6" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-16", "name" : "John Smith",  "tweet" : "The Elasticsearch API is really easy to use", "user_id" : 1 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "7" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-17", "name" : "Mary Jones", "tweet" : "The Query DSL is really powerful and flexible", "user_id" : 2 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "8" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-18", "name" : "John Smith", "user_id" : 1 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "9" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-19", "name" : "Mary Jones", "tweet" : "Geo-location aggregations are really cool", "user_id" : 2 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "10" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-20", "name" : "John Smith", "tweet" : "Elasticsearch surely is one of the hottest new NoSQL products", "user_id" : 1 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "11" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-21", "name" : "Mary Jones", "tweet" : "Elasticsearch is built for the cloud, easy to scale", "user_id" : 2 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "12" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-22", "name" : "John Smith", "tweet" : "Elasticsearch and I have left the honeymoon stage, and I still love her.", "user_id" : 1 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "13" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-23", "name" : "Mary Jones", "tweet" : "So yes, I am an Elasticsearch fanboy", "user_id" : 2 &#125;</span></span><br><span class="line"><span class="string">&#123; "create": &#123; "_index": "tweet", "_type": "doc", "_id": "14" &#125;&#125;</span></span><br><span class="line"><span class="string">&#123; "date" : "2014-09-24", "name" : "John Smith", "tweet" : "How many more cheesy tweets do I have to write?", "user_id" : 1 &#125;</span></span><br><span class="line"><span class="string">'</span></span><br></pre></td></tr></table></figure><h1 id="1-空搜索"><a href="#1-空搜索" class="headerlink" title="(1) 空搜索"></a>(1) 空搜索</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/_search?pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 16,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 13,</span><br><span class="line">    <span class="string">"successful"</span> : 13,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 8,</span><br><span class="line">    <span class="string">"max_score"</span> : 1.0,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"123"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"title"</span> : <span class="string">"My updated blog post"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 32,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1qMXwm8BXjhxAah64Ysk"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"title"</span> : <span class="string">"My second blog post"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-1-hits"><a href="#1-1-hits" class="headerlink" title="(1.1) hits"></a>(1.1) hits</h2><p>  返回结果中最重要的部分是 hits ，它包含 total 字段来表示匹配到的文档总数，并且一个 hits 数组包含所查询结果的前十个文档。</p><p>  在 hits 数组中每个结果包含文档的 _index 、 _type 、 _id ，加上 _source 字段。这意味着我们可以直接从返回的搜索结果中使用整个文档。这不像其他的搜索引擎，仅仅返回文档的ID，需要你单独去获取文档。</p><p>  每个结果还有一个 _score ，它衡量了文档与查询的匹配程度。默认情况下，首先返回最相关的文档结果，就是说，返回的文档是按照 _score 降序排列的。在这个例子中，我们没有指定任何查询，故所有的文档具有相同的相关性，因此对所有的结果而言 1 是中性的 _score 。</p><p>  max_score 值是与查询所匹配文档的 _score 的最大值。</p><h2 id="1-2-took"><a href="#1-2-took" class="headerlink" title="(1.2) took"></a>(1.2) took</h2><p>  took 值告诉我们执行整个搜索请求耗费了多少毫秒。</p><h2 id="1-3-shards"><a href="#1-3-shards" class="headerlink" title="(1.3) shards"></a>(1.3) shards</h2><p>  _shards 部分告诉我们在查询中参与分片的总数，以及这些分片成功了多少个失败了多少个。正常情况下我们不希望分片失败，但是分片失败是可能发生的。如果我们遭遇到一种灾难级别的故障，在这个故障中丢失了相同分片的原始数据和副本，那么对这个分片将没有可用副本来对搜索请求作出响应。假若这样，Elasticsearch 将报告这个分片是失败的，但是会继续返回剩余分片的结果。</p><h2 id="1-4-timeout"><a href="#1-4-timeout" class="headerlink" title="(1.4) timeout"></a>(1.4) timeout</h2><p>  timed_out 值告诉我们查询是否超时。默认情况下，搜索请求不会超时。如果低响应时间比完成结果更重要，你可以指定 timeout 为 10 或者 10ms（10毫秒），或者 1s（1秒）:<br> <code>$ curl -X GET &quot;localhost:9200/_search?timeout=10ms&amp;pretty&quot;</code></p><p>  在请求超时之前，Elasticsearch 将会返回已经成功从每个分片获取的结果。</p><p>  应当注意的是 timeout 不是停止执行查询，它仅仅是告知正在协调的节点返回到目前为止收集的结果并且关闭连接。在后台，其他的分片可能仍在执行查询即使是结果已经被发送了。</p><p>  使用超时是因为 SLA(服务等级协议)对你是很重要的，而不是因为想去中止长时间运行的查询。</p><h1 id="2-多索引，多类型"><a href="#2-多索引，多类型" class="headerlink" title="(2) 多索引，多类型"></a>(2) 多索引，多类型</h1><p>如果不对某一特殊的索引或者类型做限制，就会搜索集群中的所有文档。Elasticsearch 转发搜索请求到每一个主分片或者副本分片，汇集查询出的前10个结果，并且返回给我们。</p><p>然而，经常的情况下，你想在一个或多个特殊的索引并且在一个或者多个特殊的类型中进行搜索。我们可以通过在URL中指定特殊的索引和类型达到这种效果，如下所示：</p><p>/_search<br>    在所有的索引中搜索所有的类型<br>/gb/_search<br>    在 gb 索引中搜索所有的类型<br>/gb,us/_search<br>    在 gb 和 us 索引中搜索所有的文档<br>/g<em>,u</em>/_search<br>    在任何以 g 或者 u 开头的索引中搜索所有的类型<br>/gb/user/_search<br>    在 gb 索引中搜索 user 类型<br>/gb,us/user,tweet/_search<br>    在 gb 和 us 索引中搜索 user 和 tweet 类型<br>/_all/user,tweet/_search<br>    在所有的索引中搜索 user 和 tweet 类型 </p><p>当在单一的索引下进行搜索的时候，Elasticsearch 转发请求到索引的每个分片中，可以是主分片也可以是副本分片，然后从每个分片中收集结果。多索引搜索恰好也是用相同的方式工作的—​只是会涉及到更多的分片。</p><p> 搜索一个索引有五个主分片和搜索五个索引各有一个分片准确来所说是等价的。</p><h1 id="3-分页"><a href="#3-分页" class="headerlink" title="(3) 分页"></a>(3) 分页</h1><p>  和 SQL 使用 LIMIT 关键字返回单个 page 结果的方法相同，Elasticsearch 接受 from 和 size 参数：</p><p>size<br>    显示应该返回的结果数量，默认是 10<br>from<br>    显示应该跳过的初始结果数量，默认是 0 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET &quot;localhost:9200/_search?size=5&amp;pretty&quot;</span><br><span class="line">curl -X GET &quot;localhost:9200/_search?size=5&amp;from=5&amp;pretty&quot;</span><br><span class="line">curl -X GET &quot;localhost:9200/_search?size=5&amp;from=10&amp;pretty&quot;</span><br></pre></td></tr></table></figure><p>  考虑到分页过深以及一次请求太多结果的情况，结果集在返回之前先进行排序。 但请记住一个请求经常跨越多个分片，每个分片都产生自己的排序结果，这些结果需要进行集中排序以保证整体顺序是正确的。</p><h2 id="3-1-在分布式系统中深度分页"><a href="#3-1-在分布式系统中深度分页" class="headerlink" title="(3.1) 在分布式系统中深度分页"></a>(3.1) 在分布式系统中深度分页</h2><p>  理解为什么深度分页是有问题的，我们可以假设在一个有 5 个主分片的索引中搜索。 当我们请求结果的第一页（结果从 1 到 10 ），每一个分片产生前 10 的结果，并且返回给 协调节点 ，协调节点对 50 个结果排序得到全部结果的前 10 个。</p><p>  现在假设我们请求第 1000 页—​结果从 10001 到 10010 。所有都以相同的方式工作除了每个分片不得不产生前10010个结果以外。 然后协调节点对全部 50050 个结果排序最后丢弃掉这些结果中的 50040 个结果。</p><p>  可以看到，在分布式系统中，对结果排序的成本随分页的深度成指数上升。这就是 web 搜索引擎对任何查询都不要返回超过 1000 个结果的原因。</p><h1 id="4-轻量搜索"><a href="#4-轻量搜索" class="headerlink" title="(4) 轻量搜索"></a>(4) 轻量搜索</h1><p>  有两种形式的 搜索 API：一种是 “轻量的” 查询字符串 版本，要求在查询字符串中传递所有的参数，另一种是更完整的 请求体 版本，要求使用 JSON 格式和更丰富的查询表达式作为搜索语言。</p><h2 id="4-1-查询字符串搜索"><a href="#4-1-查询字符串搜索" class="headerlink" title="(4.1) 查询字符串搜索"></a>(4.1) 查询字符串搜索</h2><p>  查询字符串搜索非常适用于通过命令行做即席查询。</p><h3 id="4-1-1-条件查询"><a href="#4-1-1-条件查询" class="headerlink" title="(4.1.1) 条件查询"></a>(4.1.1) 条件查询</h3><p>  例如，查询在 tweet 类型中 tweet 字段包含 elasticsearch 单词的所有文档：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET <span class="string">"localhost:9200/_all/tweet/_search?q=tweet:elasticsearch&amp;pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 156,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 13,</span><br><span class="line">    <span class="string">"successful"</span> : 13,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 0,</span><br><span class="line">    <span class="string">"max_score"</span> : null,</span><br><span class="line">    <span class="string">"hits"</span> : [ ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-1-2-多条件查询"><a href="#4-1-2-多条件查询" class="headerlink" title="(4.1.2) 多条件查询"></a>(4.1.2) 多条件查询</h3><p>下一个查询在 name 字段中包含 john 并且在 tweet 字段中包含 mary 的文档。实际的查询就是这样</p><p> <code>+name:john +tweet:mary</code></p><p>但是查询字符串参数所需要的 百分比编码 （译者注：URL编码）实际上更加难懂：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET <span class="string">"localhost:9200/_search?q=%2Bname%3Ajohn+%2Btweet%3Amary&amp;pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 21,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 13,</span><br><span class="line">    <span class="string">"successful"</span> : 13,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 0,</span><br><span class="line">    <span class="string">"max_score"</span> : null,</span><br><span class="line">    <span class="string">"hits"</span> : [ ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>前缀表示必须与查询条件匹配。类似地， - 前缀表示一定不与查询条件匹配。没有 + 或者 - 的所有其他条件都是可选的——匹配的越多，文档就越相关。</li></ul><h3 id="4-1-3-全字段查询"><a href="#4-1-3-全字段查询" class="headerlink" title="(4.1.3) 全字段查询"></a>(4.1.3) 全字段查询</h3><p>  这个简单搜索返回包含 mary 的所有文档：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/_search?q=mary&amp;pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 38,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 13,</span><br><span class="line">    <span class="string">"successful"</span> : 13,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 0,</span><br><span class="line">    <span class="string">"max_score"</span> : null,</span><br><span class="line">    <span class="string">"hits"</span> : [ ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Elasticsearch 是如何在三个不同的字段中查找到结果的呢？</p><p>当索引一个文档的时候，Elasticsearch 取出所有字段的值拼接成一个大的字符串，作为 _all 字段进行索引。例如，当索引这个文档时：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"tweet"</span>:    <span class="string">"However did I manage before Elasticsearch?"</span>,</span><br><span class="line">    <span class="attr">"date"</span>:     <span class="string">"2014-09-14"</span>,</span><br><span class="line">    <span class="attr">"name"</span>:     <span class="string">"Mary Jones"</span>,</span><br><span class="line">    <span class="attr">"user_id"</span>:  <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  这就好似增加了一个名叫 _all 的额外字段：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;However did I manage before Elasticsearch? 2014-09-14 Mary Jones 1&quot;</span><br></pre></td></tr></table></figure></p><p>  除非设置特定字段，否则查询字符串就使用 _all 字段进行搜索。</p><p>  在刚开始开发一个应用时，_all 字段是一个很实用的特性。之后，你会发现如果搜索时用指定字段来代替 _all 字段，将会更好控制搜索结果。当 _all 字段不再有用的时候，可以将它置为失效，正如在 元数据: _all 字段 中所解释的。</p><h2 id="4-2-更复杂的查询"><a href="#4-2-更复杂的查询" class="headerlink" title="(4.2) 更复杂的查询"></a>(4.2) 更复杂的查询</h2><p>下面的查询针对tweents类型，并使用以下的条件：</p><pre><code>name 字段中包含 mary 或者 johndate 值大于 2014-09-10_all 字段包含 aggregations 或者 geo</code></pre><p>  查询字符串搜索允许任何用户在索引的任意字段上执行可能较慢且重量级的查询，这可能会暴露隐私信息，甚至将集群拖垮。</p><p>  因为这些原因，不推荐直接向用户暴露查询字符串搜索功能，除非对于集群和数据来说非常信任他们。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[0] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/search.html" target="_blank" rel="noopener">最基本的工具</a><br>[1] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/empty-search.html" target="_blank" rel="noopener">空搜索</a><br>[2] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/multi-index-multi-type.html" target="_blank" rel="noopener">多索引，多类型</a><br>[3] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/pagination.html" target="_blank" rel="noopener">分页</a><br>[4] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/search-lite.html" target="_blank" rel="noopener">轻量搜索</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; search 最基本的工具&lt;/p&gt;
&lt;p&gt;  Elasticsearch 不只会&lt;em&gt;存储（stores）&lt;/em&gt; 文档，为了能被搜索到也会为文档添加&lt;em&gt;索引（indexes）&lt;/em&gt; ，这也是为什么我们使用结构化的 JSON 文档，而不是无结构的二进制数据。&lt;/p&gt;
&lt;p&gt;  文档中的每个字段都将被索引并且可以被查询 。不仅如此，在简单查询时，Elasticsearch 可以使用 所有（all） 这些索引字段，以惊人的速度返回结果。&lt;/p&gt;
&lt;p&gt;搜索（search） 可以做到：&lt;br&gt;    在类似于 gender 或者 age 这样的字段上使用结构化查询，join_date 这样的字段上使用排序，就像SQL的结构化查询一样。&lt;br&gt;    全文检索，找出所有匹配关键字的文档并按照&lt;em&gt;相关性（relevance）&lt;/em&gt; 排序后返回结果。&lt;br&gt;    以上二者兼而有之。&lt;/p&gt;
&lt;p&gt;很多搜索都是开箱即用的，为了充分挖掘 Elasticsearch 的潜力，你需要理解以下三个概念：&lt;/p&gt;
&lt;p&gt;映射（Mapping）&lt;br&gt;    描述数据在每个字段内如何存储&lt;br&gt;分析（Analysis）&lt;br&gt;    全文是如何处理使之可以被搜索的&lt;br&gt;领域特定查询语言（Query DSL）&lt;br&gt;    Elasticsearch 中强大灵活的查询语言 &lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://weikeqin.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://weikeqin.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 分布式文档存储</title>
    <link href="http://weikeqin.com/2020/01/20/elasticsearch-distributed-docs/"/>
    <id>http://weikeqin.com/2020/01/20/elasticsearch-distributed-docs/</id>
    <published>2020-01-20T08:41:10.000Z</published>
    <updated>2020-01-21T02:50:21.416Z</updated>
    
    <content type="html"><![CDATA[<p>  文件是如何分布到集群的，又是如何从集群中获取的。</p><h1 id="1-路由一个文档到一个分片中"><a href="#1-路由一个文档到一个分片中" class="headerlink" title="(1) 路由一个文档到一个分片中"></a>(1) 路由一个文档到一个分片中</h1><p>  当索引一个文档的时候，文档会被存储到一个主分片中。<br>  这个过程是根据下面这个公式决定的：<br>  <code>shard = hash(routing) % number_of_primary_shards</code></p><p>  routing 是一个可变值，默认是文档的 _id ，也可以设置成一个自定义的值。 routing 通过 hash 函数生成一个数字，然后这个数字再除以 number_of_primary_shards （主分片的数量）后得到 余数 。这个分布在 0 到 number_of_primary_shards-1 之间的余数，就是我们所寻求的文档所在分片的位置。</p><p>  这就解释了为什么我们要在创建索引的时候就确定好主分片的数量 并且永远不会改变这个数量：因为如果数量变化了，那么所有之前路由的值都会无效，文档也再也找不到了。</p><p>  所有的文档 API（ get 、 index 、 delete 、 bulk 、 update 以及 mget ）都接受一个叫做 routing 的路由参数 ，通过这个参数我们可以自定义文档到分片的映射。一个自定义的路由参数可以用来确保所有相关的文档——例如所有属于同一个用户的文档——都被存储到同一个分片中。</p><a id="more"></a><h1 id="2-主分片和副本分片如何交互"><a href="#2-主分片和副本分片如何交互" class="headerlink" title="(2) 主分片和副本分片如何交互"></a>(2) 主分片和副本分片如何交互</h1><p>  假设有一个集群由三个节点组成。 它包含一个叫 blogs 的索引，有两个主分片，每个主分片有两个副本分片。相同分片的副本不会放在同一节点。</p><p>  我们可以发送请求到集群中的任一节点。 每个节点都有能力处理任意请求。 每个节点都知道集群中任一文档位置，所以可以直接将请求转发到需要的节点上。 </p><p>  在下面的例子中，将所有的请求发送到 Node 1 ，我们将其称为 协调节点(coordinating node) 。</p><p>  当发送请求的时候， 为了扩展负载，更好的做法是轮询集群中所有的节点。</p><h1 id="3-新建、索引和删除文档"><a href="#3-新建、索引和删除文档" class="headerlink" title="(3) 新建、索引和删除文档"></a>(3) 新建、索引和删除文档</h1><p>  新建、索引和删除 请求都是 写 操作， 必须在主分片上面完成之后才能被复制到相关的副本分片。</p><p>  <img src="/img/database/elasticsearch/distributed-docs/elasticsearch-distrib-write.png" alt="elasticsearch-distrib-write"></p><p>  以下是在主副分片和任何副本分片上面 成功新建，索引和删除文档所需要的步骤顺序：</p><pre><code>1. 客户端向 Node 1 发送新建、索引或者删除请求。2. 节点使用文档的 _id 确定文档属于分片 0 。请求会被转发到 Node 3，因为分片 0 的主分片目前被分配在 Node 3 上。3. Node 3 在主分片上面执行请求。如果成功了，它将请求并行转发到 Node 1 和 Node 2 的副本分片上。一旦所有的副本分片都报告成功, Node 3 将向协调节点报告成功，协调节点向客户端报告成功。</code></pre><p>  在客户端收到成功响应时，文档变更已经在主分片和所有副本分片执行完成，变更是安全的。</p><p>有一些可选的请求参数允许影响这个过程，可能以数据安全为代价提升性能。这些选项很少使用，因为Elasticsearch已经很快，但是为了完整起见，在这里阐述如下：</p><p> <code>consistency</code></p><p>  consistency，即一致性。在默认设置下，即使仅仅是在试图执行一个_写<em>操作之前，主分片都会要求 必须要有 规定数量(quorum)（或者换种说法，也即必须要有大多数）的分片副本处于活跃可用状态，才会去执行</em>写<em>操作(其中分片副本可以是主分片或者副本分片)。这是为了避免在发生网络分区故障（network partition）的时候进行</em>写<em>操作，进而导致数据不一致。</em>规定数量_即：</p><p>   <code>int( (primary + number_of_replicas) / 2 ) + 1</code></p><p>  consistency 参数的值可以设为 one （只要主分片状态 ok 就允许执行_写<em>操作）,all（必须要主分片和所有副本分片的状态没问题才允许执行</em>写<em>操作）, 或 quorum 。默认值为 quorum , 即大多数的分片副本状态没问题就允许执行</em>写_操作。</p><p>  注意，规定数量 的计算公式中 number_of_replicas 指的是在索引设置中的设定副本分片数，而不是指当前处理活动状态的副本分片数。如果你的索引设置中指定了当前索引拥有三个副本分片，那规定数量的计算结果即：</p><p>  <code>int( (primary + 3 replicas) / 2 ) + 1 = 3</code></p><p>  如果此时你只启动两个节点，那么处于活跃状态的分片副本数量就达不到规定数量，也因此您将无法索引和删除任何文档。</p><p> <code>timeout</code></p><p>  如果没有足够的副本分片会发生什么？ Elasticsearch会等待，希望更多的分片出现。默认情况下，它最多等待1分钟。 如果你需要，你可以使用 timeout 参数 使它更早终止： 100 100毫秒，30s 是30秒。</p><p>  新索引默认有 1 个副本分片，这意味着为满足 规定数量 应该 需要两个活动的分片副本。 但是，这些默认的设置会阻止我们在单一节点上做任何事情。为了避免这个问题，要求只有当 number_of_replicas 大于1的时候，规定数量才会执行。</p><h1 id="4-取回一个文档"><a href="#4-取回一个文档" class="headerlink" title="(4) 取回一个文档"></a>(4) 取回一个文档</h1><p>  可以从主分片或者从其它任意副本分片检索文档。</p><p>  <img src="/img/database/elasticsearch/distributed-docs/elasticsearch-distrib-read.png" alt="elasticsearch-distrib-read"><br>  以下是从主分片或者副本分片检索文档的步骤顺序：<br>  1、客户端向 Node 1 发送获取请求。<br>  2、节点使用文档的 _id 来确定文档属于分片 0 。分片 0 的副本分片存在于所有的三个节点上。 在这种情况下，它将请求转发到 Node 2 。<br>  3、Node 2 将文档返回给 Node 1 ，然后将文档返回给客户端。</p><p>  在处理读取请求时，协调结点在每次请求的时候都会通过轮询所有的副本分片来达到负载均衡。</p><p>  在文档被检索时，已经被索引的文档可能已经存在于主分片上但是还没有复制到副本分片。 在这种情况下，副本分片可能会报告文档不存在，但是主分片可能成功返回文档。 一旦索引请求成功返回给用户，文档在主分片和副本分片都是可用的。</p><h1 id="5-局部更新文档"><a href="#5-局部更新文档" class="headerlink" title="(5) 局部更新文档"></a>(5) 局部更新文档</h1><p> <img src="/img/database/elasticsearch/distributed-docs/elasticsearch-distrib-update.png" alt="elasticsearch-distrib-update.png"></p><p>以下是部分更新一个文档的步骤：</p><ol><li>客户端向 Node 1 发送更新请求。</li><li>它将请求转发到主分片所在的 Node 3 。</li><li>Node 3 从主分片检索文档，修改 _source 字段中的 JSON ，并且尝试重新索引主分片的文档。 如果文档已经被另一个进程修改，它会重试步骤 3 ，超过 retry_on_conflict 次后放弃。</li><li>如果 Node 3 成功地更新文档，它将新版本的文档并行转发到 Node 1 和 Node 2 上的副本分片，重新建立索引。 一旦所有副本分片都返回成功， Node 3 向协调节点也返回成功，协调节点向客户端返回成功。</li></ol><p>基于文档的复制<br>  当主分片把更改转发到副本分片时， 它不会转发更新请求。 相反，它转发完整文档的新版本。请记住，这些更改将会异步转发到副本分片，并且不能保证它们以发送它们相同的顺序到达。 如果Elasticsearch仅转发更改请求，则可能以错误的顺序应用更改，导致得到损坏的文档。</p><h1 id="6-多文档模式"><a href="#6-多文档模式" class="headerlink" title="(6) 多文档模式"></a>(6) 多文档模式</h1><p>  mget 和 bulk API 的模式类似于单文档模式。区别在于协调节点知道每个文档存在于哪个分片中。 它将整个多文档请求分解成 每个分片 的多文档请求，并且将这些请求并行转发到每个参与节点。</p><p>  协调节点一旦收到来自每个节点的应答，就将每个节点的响应收集整理成单个响应，返回给客户端。</p><p> <img src="/img/database/elasticsearch/distributed-docs/elasticsearch-distrib-mget.png" alt="elasticsearch-distrib-mget.png"></p><p>以下是使用单个 mget 请求取回多个文档所需的步骤顺序：</p><ol><li>客户端向 Node 1 发送 mget 请求。</li><li><p>Node 1 为每个分片构建多文档获取请求，然后并行转发这些请求到托管在每个所需的主分片或者副本分片的节点上。一旦收到所有答复， Node 1 构建响应并将其返回给客户端。<br>可以对 docs 数组中每个文档设置 routing 参数。</p><p><img src="/img/database/elasticsearch/distributed-docs/elasticsearch-distrib-bulk.png" alt="elasticsearch-distrib-bulk.png"><br>bulk API 按如下步骤顺序执行：</p></li><li>客户端向 Node 1 发送 bulk 请求。</li><li>Node 1 为每个节点创建一个批量请求，并将这些请求并行转发到每个包含主分片的节点主机。</li><li><p>主分片一个接一个按顺序执行每个操作。当每个操作成功时，主分片并行转发新文档（或删除）到副本分片，然后执行下一个操作。 一旦所有的副本分片报告所有操作成功，该节点将向协调节点报告成功，协调节点将这些响应收集整理并返回给客户端。</p><p>bulk API 还可以在整个批量请求的最顶层使用 consistency 参数，以及在每个请求中的元数据中使用 routing 参数。</p></li></ol><p>  在批量请求中引用的每个文档可能属于不同的主分片， 每个文档可能被分配给集群中的任何节点。这意味着批量请求 bulk 中的每个 操作 都需要被转发到正确节点上的正确分片。<br>  Elasticsearch可以直接读取被网络缓冲区接收的原始数据。 它使用换行符字符来识别和解析小的 action/metadata 行来决定哪个分片应该处理每个请求。<br>  这些原始请求会被直接转发到正确的分片。没有冗余的数据复制，没有浪费的数据结构。整个请求尽可能在最小的内存中处理。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[0] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/distributed-docs.html" target="_blank" rel="noopener">分布式文档存储</a><br>[1] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/routing-value.html" target="_blank" rel="noopener">路由一个文档到一个分片中</a><br>[2] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/how-primary-and-replica-shards-interact.html" target="_blank" rel="noopener">主分片和副本分片如何交互</a><br>[3] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/distrib-write.html" target="_blank" rel="noopener">新建、索引和删除文档</a><br>[4] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/distrib-read.html" target="_blank" rel="noopener">取回一个文档</a><br>[5] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_partial_updates_to_a_document.html" target="_blank" rel="noopener">局部更新文档</a><br>[6] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/distrib-multi-doc.html" target="_blank" rel="noopener">多文档模式</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  文件是如何分布到集群的，又是如何从集群中获取的。&lt;/p&gt;
&lt;h1 id=&quot;1-路由一个文档到一个分片中&quot;&gt;&lt;a href=&quot;#1-路由一个文档到一个分片中&quot; class=&quot;headerlink&quot; title=&quot;(1) 路由一个文档到一个分片中&quot;&gt;&lt;/a&gt;(1) 路由一个文档到一个分片中&lt;/h1&gt;&lt;p&gt;  当索引一个文档的时候，文档会被存储到一个主分片中。&lt;br&gt;  这个过程是根据下面这个公式决定的：&lt;br&gt;  &lt;code&gt;shard = hash(routing) % number_of_primary_shards&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;  routing 是一个可变值，默认是文档的 _id ，也可以设置成一个自定义的值。 routing 通过 hash 函数生成一个数字，然后这个数字再除以 number_of_primary_shards （主分片的数量）后得到 余数 。这个分布在 0 到 number_of_primary_shards-1 之间的余数，就是我们所寻求的文档所在分片的位置。&lt;/p&gt;
&lt;p&gt;  这就解释了为什么我们要在创建索引的时候就确定好主分片的数量 并且永远不会改变这个数量：因为如果数量变化了，那么所有之前路由的值都会无效，文档也再也找不到了。&lt;/p&gt;
&lt;p&gt;  所有的文档 API（ get 、 index 、 delete 、 bulk 、 update 以及 mget ）都接受一个叫做 routing 的路由参数 ，通过这个参数我们可以自定义文档到分片的映射。一个自定义的路由参数可以用来确保所有相关的文档——例如所有属于同一个用户的文档——都被存储到同一个分片中。&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://weikeqin.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://weikeqin.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 数据输入和输出</title>
    <link href="http://weikeqin.com/2020/01/20/elasticsearch-data-in-data-out/"/>
    <id>http://weikeqin.com/2020/01/20/elasticsearch-data-in-data-out/</id>
    <published>2020-01-20T03:26:55.000Z</published>
    <updated>2020-01-21T02:50:09.684Z</updated>
    
    <content type="html"><![CDATA[<p>  Elastcisearch 是分布式的 文档 存储。它能存储和检索复杂的数据结构—​序列化成为JSON文档—​以 实时 的方式。 换句话说，一旦一个文档被存储在 Elasticsearch 中，它就是可以被集群中的任意节点检索到。</p><p>  在 Elasticsearch 中， 每个字段的所有数据 都是 默认被索引的 。 即每个字段都有为了快速检索设置的专用倒排索引。而且，不像其他多数的数据库，它能在 同一个查询中 使用所有这些倒排索引，并以惊人的速度返回结果。</p><p>ElasticSearch 和 MySQL 结构对照</p><p>ES              MySQL<br>Node/Cluster    Cluster<br>Index            Database<br>Type            table<br>Document        row (一行)<br>field            field (一列)</p><h1 id="1-什么是文档"><a href="#1-什么是文档" class="headerlink" title="(1) 什么是文档?"></a>(1) 什么是文档?</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>:         <span class="string">"John Smith"</span>,</span><br><span class="line">    <span class="attr">"age"</span>:          <span class="number">42</span>,</span><br><span class="line">    <span class="attr">"confirmed"</span>:    <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"join_date"</span>:    <span class="string">"2014-06-01"</span>,</span><br><span class="line">    <span class="attr">"home"</span>: &#123;</span><br><span class="line">        <span class="attr">"lat"</span>:      <span class="number">51.5</span>,</span><br><span class="line">        <span class="attr">"lon"</span>:      <span class="number">0.1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"accounts"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"facebook"</span>,</span><br><span class="line">            <span class="attr">"id"</span>:   <span class="string">"johnsmith"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"twitter"</span>,</span><br><span class="line">            <span class="attr">"id"</span>:   <span class="string">"johnsmith"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  在 Elasticsearch 中，术语 文档 有着特定的含义。它是指最顶层或者根对象, 这个根对象被序列化成 JSON 并存储到 Elasticsearch 中，指定了唯一 ID。</p><p>  字段的名字可以是任何合法的字符串，但 不可以 包含英文句号(.)。</p><a id="more"></a><h1 id="2-文档元数据"><a href="#2-文档元数据" class="headerlink" title="(2) 文档元数据"></a>(2) 文档元数据</h1><p>  一个文档不仅仅包含它的数据 ，也包含 元数据 —— 有关 文档的信息。 三个必须的元数据元素如下：</p><p>  <code>_index</code>  文档在哪存放 </p><p>  <code>_type</code>  文档表示的对象类别<br>  <code>_id</code>  文档唯一标识 </p><h2 id="2-1-index"><a href="#2-1-index" class="headerlink" title="(2.1)  _index"></a>(2.1)  _index</h2><p>  一个 索引 应该是因共同的特性被分组到一起的文档集合。 例如，你可能存储所有的产品在索引 products 中，而存储所有销售的交易到索引 sales 中。 虽然也允许存储不相关的数据到一个索引中，但这通常看作是一个反模式的做法。</p><p>  实际上，在 Elasticsearch 中，我们的数据是被存储和索引在 分片 中，而一个索引仅仅是逻辑上的命名空间， 这个命名空间由一个或者多个分片组合在一起。 然而，这是一个内部细节，我们的应用程序根本不应该关心分片，对于应用程序而言，只需知道文档位于一个 索引 内。 Elasticsearch 会处理所有的细节。</p><h2 id="2-2-type"><a href="#2-2-type" class="headerlink" title="(2.2) _type"></a>(2.2) _type</h2><p>  数据可能在索引中只是松散的组合在一起，但是通常明确定义一些数据中的子分区是很有用的。 例如，所有的产品都放在一个索引中，但是你有许多不同的产品类别，比如 “electronics” 、 “kitchen” 和 “lawn-care”。</p><p>  这些文档共享一种相同的（或非常相似）的模式：他们有一个标题、描述、产品代码和价格。他们只是正好属于“产品”下的一些子类。</p><p>  Elasticsearch 公开了一个称为 types （类型）的特性，它允许您在索引中对数据进行逻辑分区。不同 types 的文档可能有不同的字段，但最好能够非常相似。 我们将在 类型和映射 中更多的讨论关于 types 的一些应用和限制。</p><p>  一个 _type 命名可以是大写或者小写，但是不能以下划线或者句号开头，不应该包含逗号， 并且长度限制为256个字符. 我们使用 blog 作为类型名举例。</p><h2 id="2-3-id"><a href="#2-3-id" class="headerlink" title="(2.3) _id"></a>(2.3) _id</h2><p>  ID 是一个字符串，当它和 _index 以及 _type 组合就可以唯一确定 Elasticsearch 中的一个文档。 当你创建一个新的文档，要么提供自己的 _id ，要么让 Elasticsearch 帮你生成。</p><h1 id="3-索引文档"><a href="#3-索引文档" class="headerlink" title="(3) 索引文档"></a>(3) 索引文档</h1><p>  通过使用 index API ，文档可以被 索引 —— 存储和使文档可被搜索。 但是首先，我们要确定文档的位置。正如我们刚刚讨论的，一个文档的 _index 、 _type 和 _id 唯一标识一个文档。 我们可以提供自定义的 _id 值，或者让 index API 自动生成。</p><h2 id="3-1-使用自定义id"><a href="#3-1-使用自定义id" class="headerlink" title="(3.1) 使用自定义id"></a>(3.1) 使用自定义id</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PUT ip:port/&#123;index&#125;/&#123;<span class="built_in">type</span>&#125;/&#123;id&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"field"</span>: <span class="string">"value"</span>,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  如果我们的索引称为 website ，类型称为 blog ，并且选择 123 作为 ID ，那么索引请求应该是下面这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT &quot;localhost:9200/website/blog/123?pretty&quot; -H &apos;Content-Type: application/json&apos; -d&apos;</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;   &quot;title&quot;: &quot;My first blog entry&quot;,</span><br><span class="line">&gt;   &quot;text&quot;:  &quot;Just trying this out...&quot;,</span><br><span class="line">&gt;   &quot;date&quot;:  &quot;2014/01/01&quot;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;website&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;blog&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;123&quot;,</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;result&quot; : &quot;created&quot;,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 2,</span><br><span class="line">    &quot;successful&quot; : 1,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_seq_no&quot; : 0,</span><br><span class="line">  &quot;_primary_term&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  该响应表明文档已经成功创建，该索引包括 _index 、 _type 和 _id 元数据， 以及一个新元素： _version 。</p><p>  在 Elasticsearch 中每个文档都有一个版本号。当每次对文档进行修改时（包括删除）， _version 的值会递增。 在 处理冲突 中，我们讨论了怎样使用 _version 号码确保你的应用程序中的一部分修改不会覆盖另一部分所做的修改。</p><h2 id="3-2-Autogenerating-IDs"><a href="#3-2-Autogenerating-IDs" class="headerlink" title="(3.2) Autogenerating IDs"></a>(3.2) Autogenerating IDs</h2><p>  如果你的数据没有自然的 ID， Elasticsearch 可以帮我们自动生成 ID 。 请求的结构调整为： 不再使用 PUT 谓词(“使用这个 URL 存储这个文档”)， 而是使用 POST 谓词(“存储文档在这个 URL 命名空间下”)。</p><p>  现在该 URL 只需包含 _index 和 _type :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X POST &quot;localhost:9200/website/blog/?pretty&quot; -H &apos;Content-Type: application/json&apos; -d&apos;</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;   &quot;title&quot;: &quot;My second blog entry&quot;,</span><br><span class="line">&gt;   &quot;text&quot;:  &quot;Still trying this out...&quot;,</span><br><span class="line">&gt;   &quot;date&quot;:  &quot;2014/01/01&quot;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;website&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;blog&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;1aMWwW8BXjhxAah6xIse&quot;,</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;result&quot; : &quot;created&quot;,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 2,</span><br><span class="line">    &quot;successful&quot; : 1,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_seq_no&quot; : 0,</span><br><span class="line">  &quot;_primary_term&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  自动生成的 ID 是 URL-safe、 基于 Base64 编码且长度为20个字符的 GUID 字符串。 这些 GUID 字符串由可修改的 FlakeID 模式生成，这种模式允许多个节点并行生成唯一 ID ，且互相之间的冲突概率几乎为零。</p><h1 id="4-取回一个文档"><a href="#4-取回一个文档" class="headerlink" title="(4) 取回一个文档"></a>(4) 取回一个文档</h1><p>  为了从 Elasticsearch 中检索出文档，我们仍然使用相同的 _index , _type , 和 _id ，但是 HTTP 谓词更改为 GET :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/website/blog/123?pretty&amp;pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"123"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 1,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 0,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">  <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"title"</span> : <span class="string">"My first blog entry"</span>,</span><br><span class="line">    <span class="string">"text"</span> : <span class="string">"Just trying this out..."</span>,</span><br><span class="line">    <span class="string">"date"</span> : <span class="string">"2014/01/01"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  在请求的查询串参数中加上 pretty 参数，正如前面的例子中看到的，这将会调用 Elasticsearch 的 pretty-print 功能，该功能 使得 JSON 响应体更加可读。但是， _source 字段不能被格式化打印出来。相反，我们得到的 _source 字段中的 JSON 串，刚好是和我们传给它的一样。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ curl -i -XGET http://localhost:9200/website/blog/124?pretty</span><br><span class="line">HTTP/1.1 404 Not Found</span><br><span class="line">content-type: application/json; charset=UTF-8</span><br><span class="line">content-length: 83</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"124"</span>,</span><br><span class="line">  <span class="string">"found"</span> : <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  返回文档的一部分</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/website/blog/123?_source=title,text&amp;pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"123"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 1,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 0,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">  <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"text"</span> : <span class="string">"Just trying this out..."</span>,</span><br><span class="line">    <span class="string">"title"</span> : <span class="string">"My first blog entry"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  只想得到 _source 字段，不需要任何元数据，你能使用 _source 端点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET &quot;localhost:9200/website/blog/123/_source?pretty&quot;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;title&quot; : &quot;My first blog entry&quot;,</span><br><span class="line">  &quot;text&quot; : &quot;Just trying this out...&quot;,</span><br><span class="line">  &quot;date&quot; : &quot;2014/01/01&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-检查文档是否存在"><a href="#5-检查文档是否存在" class="headerlink" title="(5) 检查文档是否存在"></a>(5) 检查文档是否存在</h1><p>如果只想检查一个文档是否存在–根本不想关心内容—​那么用 HEAD 方法来代替 GET 方法。 HEAD 请求没有返回体，只返回一个 HTTP 请求报头</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -i -XHEAD http://localhost:9200/website/blog/123</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">content-type: application/json; charset=UTF-8</span><br><span class="line">content-length: 215</span><br></pre></td></tr></table></figure><p>  果文档存在， Elasticsearch 将返回一个 200 ok 的状态码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -i -XHEAD http://localhost:9200/website/blog/124</span><br><span class="line">HTTP/1.1 404 Not Found</span><br><span class="line">content-type: application/json; charset=UTF-8</span><br><span class="line">content-length: 61</span><br></pre></td></tr></table></figure><p>  文档不存在， Elasticsearch 将返回一个 404 Not Found 的状态码</p><h1 id="6-更新整个文档"><a href="#6-更新整个文档" class="headerlink" title="(6) 更新整个文档"></a>(6) 更新整个文档</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT <span class="string">"localhost:9200/website/blog/123?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;   "title": "My first blog entry",</span></span><br><span class="line"><span class="string">&gt;   "text":  "I am starting to get the hang of this...",</span></span><br><span class="line"><span class="string">&gt;   "date":  "2014/01/02"</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"123"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 2,</span><br><span class="line">  <span class="string">"result"</span> : <span class="string">"updated"</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 1,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  created 标志设置成 false ，是因为相同的索引、类型和 ID 的文档已经存在。</p><p>  在内部，Elasticsearch 已将旧文档标记为已删除，并增加一个全新的文档。 尽管你不能再对旧版本的文档进行访问，但它并不会立即消失。当继续索引更多的数据，Elasticsearch 会在后台清理这些已删除文档。</p><h1 id="7-创建新文档"><a href="#7-创建新文档" class="headerlink" title="(7) 创建新文档"></a>(7) 创建新文档</h1><p>  当我们索引一个文档，怎么确认我们正在创建一个完全新的文档，而不是覆盖现有的呢？</p><p>  请记住， _index 、 _type 和 _id 的组合可以唯一标识一个文档。所以，确保创建一个新文档的最简单办法是，使用索引请求的 POST 形式让 Elasticsearch 自动生成唯一 _id :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl POST <span class="string">"localhost:9200//website/blog/"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&#123; </span></span><br><span class="line"><span class="string">    ... </span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'</span></span><br></pre></td></tr></table></figure><p>  如果已经有自己的 _id ，那么我们必须告诉 Elasticsearch ，只有在相同的 _index 、 _type 和 _id 不存在时才接受我们的索引请求。</p><p>  第一种方法使用 op_type 查询-字符串参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PUT /website/blog/123?op_type=create</span><br><span class="line">&#123; ... &#125;</span><br></pre></td></tr></table></figure></p><p>  第二种方法是在 URL 末端使用 /_create :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PUT /website/blog/123/_create</span><br><span class="line">&#123; ... &#125;</span><br></pre></td></tr></table></figure></p><p>  如果创建新文档的请求成功执行，Elasticsearch 会返回元数据和一个 201 Created 的 HTTP 响应码。</p><p>  另一方面，如果具有相同的 _index 、 _type 和 _id 的文档已经存在，Elasticsearch 将会返回 409 Conflict 响应码，以及如下的错误信息：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"error"</span>: &#123;</span><br><span class="line">      <span class="attr">"root_cause"</span>: [</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"document_already_exists_exception"</span>,</span><br><span class="line">            <span class="attr">"reason"</span>: <span class="string">"[blog][123]: document already exists"</span>,</span><br><span class="line">            <span class="attr">"shard"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="attr">"index"</span>: <span class="string">"website"</span></span><br><span class="line">         &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"document_already_exists_exception"</span>,</span><br><span class="line">      <span class="attr">"reason"</span>: <span class="string">"[blog][123]: document already exists"</span>,</span><br><span class="line">      <span class="attr">"shard"</span>: <span class="string">"0"</span>,</span><br><span class="line">      <span class="attr">"index"</span>: <span class="string">"website"</span></span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">"status"</span>: <span class="number">409</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="8-删除文档"><a href="#8-删除文档" class="headerlink" title="(8) 删除文档"></a>(8) 删除文档</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X DELETE <span class="string">"localhost:9200/website/blog/123?pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"123"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 3,</span><br><span class="line">  <span class="string">"result"</span> : <span class="string">"deleted"</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 2,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  删除文档不会立即将文档从磁盘中删除，只是将文档标记为已删除状态。随着你不断的索引更多的数据，Elasticsearch 将会在后台清理标记为已删除的文档。</p><p>  如果文档没有找到，我们将得到 404 Not Found 的响应码和类似这样的响应体：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"found"</span> :    <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_index"</span> :   <span class="string">"website"</span>,</span><br><span class="line">  <span class="attr">"_type"</span> :    <span class="string">"blog"</span>,</span><br><span class="line">  <span class="attr">"_id"</span> :      <span class="string">"123"</span>,</span><br><span class="line">  <span class="attr">"_version"</span> : <span class="number">4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  即使文档不存在（ Found 是 false ）， _version 值仍然会增加。</p><h1 id="9-处理冲突"><a href="#9-处理冲突" class="headerlink" title="(9) 处理冲突"></a>(9) 处理冲突</h1><p>  丢失了一个变更就是 非常严重的 。</p><p>  变更越频繁，读数据和更新数据的间隙越长，也就越可能丢失变更。</p><h2 id="9-1-冲突解决"><a href="#9-1-冲突解决" class="headerlink" title="(9.1) 冲突解决"></a>(9.1) 冲突解决</h2><p>  在数据库领域中，有两种方法通常被用来确保并发更新时变更不会丢失：</p><h3 id="9-1-1-悲观并发控制"><a href="#9-1-1-悲观并发控制" class="headerlink" title="(9.1.1) 悲观并发控制"></a>(9.1.1) 悲观并发控制</h3><pre><code>这种方法被关系型数据库广泛使用，它假定有变更冲突可能发生，因此阻塞访问资源以防止冲突。 一个典型的例子是读取一行数据之前先将其锁住，确保只有放置锁的线程能够对这行数据进行修改。 </code></pre><h3 id="9-1-2-乐观并发控制"><a href="#9-1-2-乐观并发控制" class="headerlink" title="(9.1.2) 乐观并发控制"></a>(9.1.2) 乐观并发控制</h3><pre><code>Elasticsearch 中使用的这种方法假定冲突是不可能发生的，并且不会阻塞正在尝试的操作。 然而，如果源数据在读写当中被修改，更新将会失败。应用程序接下来将决定该如何解决冲突。 例如，可以重试更新、使用新的数据、或者将相关情况报告给用户。 </code></pre><h1 id="10-乐观并发控制"><a href="#10-乐观并发控制" class="headerlink" title="(10) 乐观并发控制"></a>(10) 乐观并发控制</h1><p>  Elasticsearch 是分布式的。当文档创建、更新或删除时， 新版本的文档必须复制到集群中的其他节点。Elasticsearch 也是异步和并发的，这意味着这些复制请求被并行发送，并且到达目的地时也许 顺序是乱的 。 Elasticsearch 需要一种方法确保文档的旧版本不会覆盖新的版本。</p><p>  当我们之前讨论 index ， GET 和 delete 请求时，我们指出每个文档都有一个 _version （版本）号，当文档被修改时版本号递增。 Elasticsearch 使用这个 _version 号来确保变更以正确顺序得到执行。如果旧版本的文档在新版本之后到达，它可以被简单的忽略。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT <span class="string">"localhost:9200/website/blog/1/_create?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;   "title": "My first blog entry",</span></span><br><span class="line"><span class="string">&gt;   "text":  "Just trying this out..."</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 1,</span><br><span class="line">  <span class="string">"result"</span> : <span class="string">"created"</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 0,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  响应体告诉我们，这个新创建的文档 _version 版本号是 1 。现在假设我们想编辑这个文档：我们加载其数据到 web 表单中， 做一些修改，然后保存新的版本。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/website/blog/1?pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 1,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 0,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">  <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"title"</span> : <span class="string">"My first blog entry"</span>,</span><br><span class="line">    <span class="string">"text"</span> : <span class="string">"Just trying this out..."</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  当我们尝试通过重建文档的索引来保存修改，我们指定 version 为我们的修改会被应用的版本：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT <span class="string">"localhost:9200/website/blog/1?version=1&amp;pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;   "title": "My first blog entry",</span></span><br><span class="line"><span class="string">&gt;   "text":  "Starting to get the hang of this..."</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 2,</span><br><span class="line">  <span class="string">"result"</span> : <span class="string">"updated"</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 1,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  我们想这个在我们索引中的文档只有现在的 _version 为 1 时，本次更新才能成功。</p><p>  重新运行相同的索引请求，仍然指定 version=1 ， Elasticsearch 返回 409 Conflict HTTP 响应码，和一个如下所示的响应体：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT <span class="string">"localhost:9200/website/blog/1?version=1&amp;pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;   "title": "My first blog entry",</span></span><br><span class="line"><span class="string">&gt;   "text":  "Starting to get the hang of this..."</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"error"</span> : &#123;</span><br><span class="line">    <span class="string">"root_cause"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"type"</span> : <span class="string">"version_conflict_engine_exception"</span>,</span><br><span class="line">        <span class="string">"reason"</span> : <span class="string">"[blog][1]: version conflict, current version [2] is different than the one provided [1]"</span>,</span><br><span class="line">        <span class="string">"index_uuid"</span> : <span class="string">"1Ptx5N-iTR2nDNtVgVMEpw"</span>,</span><br><span class="line">        <span class="string">"shard"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"index"</span> : <span class="string">"website"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"type"</span> : <span class="string">"version_conflict_engine_exception"</span>,</span><br><span class="line">    <span class="string">"reason"</span> : <span class="string">"[blog][1]: version conflict, current version [2] is different than the one provided [1]"</span>,</span><br><span class="line">    <span class="string">"index_uuid"</span> : <span class="string">"1Ptx5N-iTR2nDNtVgVMEpw"</span>,</span><br><span class="line">    <span class="string">"shard"</span> : <span class="string">"3"</span>,</span><br><span class="line">    <span class="string">"index"</span> : <span class="string">"website"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"status"</span> : 409</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  所有文档的更新或删除 API，都可以接受 version 参数，这允许你在代码中使用乐观的并发控制，这是一种明智的做法。</p><h2 id="10-2-通过外部系统使用版本控制"><a href="#10-2-通过外部系统使用版本控制" class="headerlink" title="(10.2) 通过外部系统使用版本控制"></a>(10.2) 通过外部系统使用版本控制</h2><p>  一个常见的设置是使用其它数据库作为主要的数据存储，使用 Elasticsearch 做数据检索， 这意味着主数据库的所有更改发生时都需要被复制到 Elasticsearch ，如果多个进程负责这一数据同步，你可能遇到类似于之前描述的并发问题。</p><p>  如果你的主数据库已经有了版本号 — 或一个能作为版本号的字段值比如 timestamp — 那么你就可以在 Elasticsearch 中通过增加 version_type=external 到查询字符串的方式重用这些相同的版本号， 版本号必须是大于零的整数， 且小于 9.2E+18 — 一个 Java 中 long 类型的正值。</p><p>  外部版本号的处理方式和我们之前讨论的内部版本号的处理方式有些不同， Elasticsearch 不是检查当前 _version 和请求中指定的版本号是否相同， 而是检查当前 _version 是否 小于 指定的版本号。 如果请求成功，外部的版本号作为文档的新 _version 进行存储。</p><p>  外部版本号不仅在索引和删除请求是可以指定，而且在 创建 新文档时也可以指定。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT <span class="string">"localhost:9200/website/blog/2?version=5&amp;version_type=external&amp;pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;   "title": "My first external blog entry",</span></span><br><span class="line"><span class="string">&gt;   "text":  "Starting to get the hang of this..."</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 5,</span><br><span class="line">  <span class="string">"result"</span> : <span class="string">"created"</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 0,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  在响应中，我们能看到当前的 _version 版本号是 5 </p><p>  现在我们更新这个文档，指定一个新的 version 号是 10<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT <span class="string">"localhost:9200/website/blog/2?version=10&amp;version_type=external&amp;pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;   "title": "My first external blog entry",</span></span><br><span class="line"><span class="string">&gt;   "text":  "This is a piece of cake..."</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 10,</span><br><span class="line">  <span class="string">"result"</span> : <span class="string">"updated"</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 1,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  请求成功并将当前 _version 设为 10</p><h1 id="11-文档的部分更新"><a href="#11-文档的部分更新" class="headerlink" title="(11) 文档的部分更新"></a>(11) 文档的部分更新</h1><p>  我们也介绍过文档是不可变的：他们不能被修改，只能被替换。 update API 必须遵循同样的规则。 从外部来看，我们在一个文档的某个位置进行部分更新。然而在内部， update API 简单使用与之前描述相同的 检索-修改-重建索引 的处理过程。 区别在于这个过程发生在分片内部，这样就避免了多次请求的网络开销。通过减少检索和重建索引步骤之间的时间，我们也减少了其他进程的变更带来冲突的可能性。</p><p>  update 请求最简单的一种形式是接收文档的一部分作为 doc 的参数， 它只是与现有的文档进行合并。对象被合并到一起，覆盖现有的字段，增加新的字段。 例如，我们增加字段 tags 和 views 到我们的博客文章，如下所示：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X POST <span class="string">"localhost:9200/website/blog/1/_update?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;    "doc" : &#123;</span></span><br><span class="line"><span class="string">&gt;       "tags" : [ "testing" ],</span></span><br><span class="line"><span class="string">&gt;       "views": 0</span></span><br><span class="line"><span class="string">&gt;    &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 3,</span><br><span class="line">  <span class="string">"result"</span> : <span class="string">"updated"</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 2,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  查询更新后的文档<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/website/blog/1?pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 3,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 2,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">  <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"title"</span> : <span class="string">"My first blog entry"</span>,</span><br><span class="line">    <span class="string">"text"</span> : <span class="string">"Starting to get the hang of this..."</span>,</span><br><span class="line">    <span class="string">"views"</span> : 0,</span><br><span class="line">    <span class="string">"tags"</span> : [</span><br><span class="line">      <span class="string">"testing"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="11-1-使用脚本部分更新文档"><a href="#11-1-使用脚本部分更新文档" class="headerlink" title="(11.1) 使用脚本部分更新文档"></a>(11.1) 使用脚本部分更新文档</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X POST <span class="string">"localhost:9200/website/blog/1/_update?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;    "script" : "ctx._source.views+=1"</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 4,</span><br><span class="line">  <span class="string">"result"</span> : <span class="string">"updated"</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 3,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-2-使用脚本部分更新文档"><a href="#11-2-使用脚本部分更新文档" class="headerlink" title="(11.2) 使用脚本部分更新文档"></a>(11.2) 使用脚本部分更新文档</h2><p>对于那些 API 不能满足需求的情况，Elasticsearch 允许你使用脚本编写自定义的逻辑。 许多API都支持脚本的使用，包括搜索、排序、聚合和文档更新。 脚本可以作为请求的一部分被传递，从特殊的 .scripts 索引中检索，或者从磁盘加载脚本。</p><p>默认的脚本语言 是 Groovy，一种快速表达的脚本语言，在语法上与 JavaScript 类似。 它在 Elasticsearch V1.3.0 版本首次引入并运行在 沙盒 中，然而 Groovy 脚本引擎存在漏洞， 允许攻击者通过构建 Groovy 脚本，在 Elasticsearch Java VM 运行时脱离沙盒并执行 shell 命令。</p><p>因此，在版本 v1.3.8 、 1.4.3 和 V1.5.0 及更高的版本中，它已经被默认禁用。 此外，您可以通过设置集群中的所有节点的 config/elasticsearch.yml 文件来禁用动态 Groovy 脚本：</p><p> <code>script.groovy.sandbox.enabled: false</code></p><p>这将关闭 Groovy 沙盒，从而防止动态 Groovy 脚本作为请求的一部分被接受， 或者从特殊的 .scripts 索引中被检索。当然，你仍然可以使用存储在每个节点的 config/scripts/ 目录下的 Groovy 脚本。</p><p>如果你的架构和安全性不需要担心漏洞攻击，例如你的 Elasticsearch 终端仅暴露和提供给可信赖的应用， 当它是你的应用需要的特性时，你可以选择重新启用动态脚本。</p><p>你可以在 <a href="https://www.elastic.co/guide/en/elasticsearch/reference/5.6/modules-scripting.html" target="_blank" rel="noopener">scripting reference documentation</a> 获取更多关于脚本的资料。</p><p>  通过设置参数 retry_on_conflict 来自动完成， 这个参数规定了失败之前 update 应该重试的次数，它的默认值为 0</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X POST <span class="string">"localhost:9200/website/blog/1/_update?retry_on_conflict=5&amp;pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;    "script" : "ctx._source.views+=1",</span></span><br><span class="line"><span class="string">&gt;    "upsert": &#123;</span></span><br><span class="line"><span class="string">&gt;        "views": 0</span></span><br><span class="line"><span class="string">&gt;    &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 6,</span><br><span class="line">  <span class="string">"result"</span> : <span class="string">"updated"</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 5,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="12-取回多个文档"><a href="#12-取回多个文档" class="headerlink" title="(12) 取回多个文档"></a>(12) 取回多个文档</h1><p>  Elasticsearch 的速度已经很快了，但甚至能更快。 将多个请求合并成一个，避免单独处理每个请求花费的网络延时和开销。 如果你需要从 Elasticsearch 检索很多文档，那么使用 multi-get 或者 mget API 来将这些检索请求放在一个请求中，将比逐个文档请求更快地检索到全部文档。</p><p>  mget API 要求有一个 docs 数组作为参数，每个元素包含需要检索文档的元数据， 包括 _index 、 _type 和 _id 。如果你想检索一个或者多个特定的字段，那么你可以通过 _source 参数来指定这些字段的名字：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/_mget?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;    "docs" : [</span></span><br><span class="line"><span class="string">&gt;       &#123;</span></span><br><span class="line"><span class="string">&gt;          "_index" : "website",</span></span><br><span class="line"><span class="string">&gt;          "_type" :  "blog",</span></span><br><span class="line"><span class="string">&gt;          "_id" :    2</span></span><br><span class="line"><span class="string">&gt;       &#125;,</span></span><br><span class="line"><span class="string">&gt;       &#123;</span></span><br><span class="line"><span class="string">&gt;          "_index" : "website",</span></span><br><span class="line"><span class="string">&gt;          "_type" :  "pageviews",</span></span><br><span class="line"><span class="string">&gt;          "_id" :    1,</span></span><br><span class="line"><span class="string">&gt;          "_source": "views"</span></span><br><span class="line"><span class="string">&gt;       &#125;</span></span><br><span class="line"><span class="string">&gt;    ]</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"docs"</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">      <span class="string">"_version"</span> : 10,</span><br><span class="line">      <span class="string">"_seq_no"</span> : 1,</span><br><span class="line">      <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">      <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">      <span class="string">"_source"</span> : &#123;</span><br><span class="line">        <span class="string">"title"</span> : <span class="string">"My first external blog entry"</span>,</span><br><span class="line">        <span class="string">"text"</span> : <span class="string">"This is a piece of cake..."</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"pageviews"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">      <span class="string">"found"</span> : <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  该响应体也包含一个 docs 数组， 对于每一个在请求中指定的文档，这个数组中都包含有一个对应的响应，且顺序与请求中的顺序相同。 其中的每一个响应都和使用单个 get request 请求所得到的响应体相同</p><p>如果想检索的数据都在相同的 _index 中（甚至相同的 _type 中），则可以在 URL 中指定默认的 /_index 或者默认的 /_index/_type 。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/website/blog/_mget?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;    "docs" : [</span></span><br><span class="line"><span class="string">&gt;       &#123; "_id" : 2 &#125;,</span></span><br><span class="line"><span class="string">&gt;       &#123; "_type" : "pageviews", "_id" :   1 &#125;</span></span><br><span class="line"><span class="string">&gt;    ]</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"docs"</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">      <span class="string">"_version"</span> : 10,</span><br><span class="line">      <span class="string">"_seq_no"</span> : 1,</span><br><span class="line">      <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">      <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">      <span class="string">"_source"</span> : &#123;</span><br><span class="line">        <span class="string">"title"</span> : <span class="string">"My first external blog entry"</span>,</span><br><span class="line">        <span class="string">"text"</span> : <span class="string">"This is a piece of cake..."</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"pageviews"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">      <span class="string">"found"</span> : <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/website/blog/_mget?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;    "ids" : [ "2", "1" ]</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"docs"</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">      <span class="string">"_version"</span> : 10,</span><br><span class="line">      <span class="string">"_seq_no"</span> : 1,</span><br><span class="line">      <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">      <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">      <span class="string">"_source"</span> : &#123;</span><br><span class="line">        <span class="string">"title"</span> : <span class="string">"My first external blog entry"</span>,</span><br><span class="line">        <span class="string">"text"</span> : <span class="string">"This is a piece of cake..."</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">      <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">      <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">      <span class="string">"_version"</span> : 6,</span><br><span class="line">      <span class="string">"_seq_no"</span> : 5,</span><br><span class="line">      <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">      <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">      <span class="string">"_source"</span> : &#123;</span><br><span class="line">        <span class="string">"title"</span> : <span class="string">"My first blog entry"</span>,</span><br><span class="line">        <span class="string">"text"</span> : <span class="string">"Starting to get the hang of this..."</span>,</span><br><span class="line">        <span class="string">"views"</span> : 3,</span><br><span class="line">        <span class="string">"tags"</span> : [</span><br><span class="line">          <span class="string">"testing"</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="13-代价较小的批量操作"><a href="#13-代价较小的批量操作" class="headerlink" title="(13) 代价较小的批量操作"></a>(13) 代价较小的批量操作</h1><p>  与 mget 可以使我们一次取回多个文档同样的方式， bulk API 允许在单个步骤中进行多次 create 、 index 、 update 或 delete 请求。 如果你需要索引一个数据流比如日志事件，它可以排队和索引数百或数千批次。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123; action: &#123; metadata &#125;&#125;\n</span><br><span class="line">&#123; request body        &#125;\n</span><br><span class="line">&#123; action: &#123; metadata &#125;&#125;\n</span><br><span class="line">&#123; request body        &#125;\n</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>这种格式类似一个有效的单行 JSON 文档 流 ，它通过换行符(\n)连接到一起。注意两个要点：<br>    每行一定要以换行符(\n)结尾， 包括最后一行 。这些换行符被用作一个标记，可以有效分隔行。<br>    这些行不能包含未转义的换行符，因为他们将会对解析造成干扰。这意味着这个 JSON 不 能使用 pretty 参数打印。</p><p>action/metadata 行指定 哪一个文档 做 什么操作 。</p><p>action 必须是以下选项之一:<br>  <code>create</code> 如果文档不存在，那么就创建它。详情请见 创建新文档。<br>  <code>index</code>  创建一个新文档或者替换一个现有的文档。详情请见 索引文档 和 更新整个文档。<br>  <code>update</code> 部分更新一个文档。详情请见 文档的部分更新。<br>  <code>delete</code> 删除一个文档。详情请见 删除文档。<br>  <code>metadata</code> 应该指定被索引、创建、更新或者删除的文档的 _index 、 _type 和 _id 。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X POST <span class="string">"localhost:9200/_bulk?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123; "delete": &#123; "_index": "website", "_type": "blog", "_id": "123" &#125;&#125;</span></span><br><span class="line"><span class="string">&gt; &#123; "create": &#123; "_index": "website", "_type": "blog", "_id": "123" &#125;&#125;</span></span><br><span class="line"><span class="string">&gt; &#123; "title":    "My first blog post" &#125;</span></span><br><span class="line"><span class="string">&gt; &#123; "index":  &#123; "_index": "website", "_type": "blog" &#125;&#125;</span></span><br><span class="line"><span class="string">&gt; &#123; "title":    "My second blog post" &#125;</span></span><br><span class="line"><span class="string">&gt; &#123; "update": &#123; "_index": "website", "_type": "blog", "_id": "123", "_retry_on_conflict" : 3&#125; &#125;</span></span><br><span class="line"><span class="string">&gt; &#123; "doc" : &#123;"title" : "My updated blog post"&#125; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 69,</span><br><span class="line">  <span class="string">"errors"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"items"</span> : [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"delete"</span> : &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"123"</span>,</span><br><span class="line">        <span class="string">"_version"</span> : 1,</span><br><span class="line">        <span class="string">"result"</span> : <span class="string">"not_found"</span>,</span><br><span class="line">        <span class="string">"_shards"</span> : &#123;</span><br><span class="line">          <span class="string">"total"</span> : 2,</span><br><span class="line">          <span class="string">"successful"</span> : 1,</span><br><span class="line">          <span class="string">"failed"</span> : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"_seq_no"</span> : 3,</span><br><span class="line">        <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">        <span class="string">"status"</span> : 404</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"create"</span> : &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"123"</span>,</span><br><span class="line">        <span class="string">"_version"</span> : 2,</span><br><span class="line">        <span class="string">"result"</span> : <span class="string">"created"</span>,</span><br><span class="line">        <span class="string">"_shards"</span> : &#123;</span><br><span class="line">          <span class="string">"total"</span> : 2,</span><br><span class="line">          <span class="string">"successful"</span> : 1,</span><br><span class="line">          <span class="string">"failed"</span> : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"_seq_no"</span> : 4,</span><br><span class="line">        <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">        <span class="string">"status"</span> : 201</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"index"</span> : &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1qMXwm8BXjhxAah64Ysk"</span>,</span><br><span class="line">        <span class="string">"_version"</span> : 1,</span><br><span class="line">        <span class="string">"result"</span> : <span class="string">"created"</span>,</span><br><span class="line">        <span class="string">"_shards"</span> : &#123;</span><br><span class="line">          <span class="string">"total"</span> : 2,</span><br><span class="line">          <span class="string">"successful"</span> : 1,</span><br><span class="line">          <span class="string">"failed"</span> : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"_seq_no"</span> : 1,</span><br><span class="line">        <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">        <span class="string">"status"</span> : 201</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"update"</span> : &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"website"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"blog"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"123"</span>,</span><br><span class="line">        <span class="string">"_version"</span> : 3,</span><br><span class="line">        <span class="string">"result"</span> : <span class="string">"updated"</span>,</span><br><span class="line">        <span class="string">"_shards"</span> : &#123;</span><br><span class="line">          <span class="string">"total"</span> : 2,</span><br><span class="line">          <span class="string">"successful"</span> : 1,</span><br><span class="line">          <span class="string">"failed"</span> : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"_seq_no"</span> : 5,</span><br><span class="line">        <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">        <span class="string">"status"</span> : 200</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个子请求都是独立执行，因此某个子请求的失败不会对其他子请求的成功与否造成影响。 如果其中任何子请求失败，最顶层的 error 标志被设置为 true ，并且在相应的请求报告出错误明细</p><h2 id="13-1-批量执行时多大效率最好"><a href="#13-1-批量执行时多大效率最好" class="headerlink" title="(13.1) 批量执行时多大效率最好"></a>(13.1) 批量执行时多大效率最好</h2><p>整个批量请求都需要由接收到请求的节点加载到内存中，因此该请求越大，其他请求所能获得的内存就越少。 批量请求的大小有一个最佳值，大于这个值，性能将不再提升，甚至会下降。 但是最佳值不是一个固定的值。它完全取决于硬件、文档的大小和复杂度、索引和搜索的负载的整体情况。</p><p>幸运的是，很容易找到这个 最佳点 ：通过批量索引典型文档，并不断增加批量大小进行尝试。 当性能开始下降，那么你的批量大小就太大了。一个好的办法是开始时将 1,000 到 5,000 个文档作为一个批次, 如果你的文档非常大，那么就减少批量的文档个数。</p><p>密切关注你的批量请求的物理大小往往非常有用，一千个 1KB 的文档是完全不同于一千个 1MB 文档所占的物理大小。 一个好的批量大小在开始处理后所占用的物理大小约为 5-15 MB。</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[0] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/data-in-data-out.html" target="_blank" rel="noopener">数据输入和输出</a><br>[1] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/document.html" target="_blank" rel="noopener">什么是文档?</a><br>[2] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_Document_Metadata.html" target="_blank" rel="noopener">文档元数据</a><br>[3] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/index-doc.html" target="_blank" rel="noopener">索引文档</a><br>[4] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/get-doc.html" target="_blank" rel="noopener">取回一个文档</a><br>[5] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/doc-exists.html" target="_blank" rel="noopener">检查文档是否存在</a><br>[6] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/update-doc.html" target="_blank" rel="noopener">更新整个文档</a><br>[7] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/create-doc.html" target="_blank" rel="noopener">创建新文档</a><br>[8] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/delete-doc.html" target="_blank" rel="noopener">删除文档</a><br>[9] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/version-control.html" target="_blank" rel="noopener">处理冲突</a><br>[10] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/optimistic-concurrency-control.html" target="_blank" rel="noopener">乐观并发控制</a><br>[11] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/partial-updates.html" target="_blank" rel="noopener">文档的部分更新</a><br>[12] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_Retrieving_Multiple_Documents.html" target="_blank" rel="noopener">取回多个文档</a><br>[13] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/bulk.html" target="_blank" rel="noopener">代价较小的批量操作</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  Elastcisearch 是分布式的 文档 存储。它能存储和检索复杂的数据结构—​序列化成为JSON文档—​以 实时 的方式。 换句话说，一旦一个文档被存储在 Elasticsearch 中，它就是可以被集群中的任意节点检索到。&lt;/p&gt;
&lt;p&gt;  在 Elasticsearch 中， 每个字段的所有数据 都是 默认被索引的 。 即每个字段都有为了快速检索设置的专用倒排索引。而且，不像其他多数的数据库，它能在 同一个查询中 使用所有这些倒排索引，并以惊人的速度返回结果。&lt;/p&gt;
&lt;p&gt;ElasticSearch 和 MySQL 结构对照&lt;/p&gt;
&lt;p&gt;ES              MySQL&lt;br&gt;Node/Cluster    Cluster&lt;br&gt;Index            Database&lt;br&gt;Type            table&lt;br&gt;Document        row (一行)&lt;br&gt;field            field (一列)&lt;/p&gt;
&lt;h1 id=&quot;1-什么是文档&quot;&gt;&lt;a href=&quot;#1-什么是文档&quot; class=&quot;headerlink&quot; title=&quot;(1) 什么是文档?&quot;&gt;&lt;/a&gt;(1) 什么是文档?&lt;/h1&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;name&quot;&lt;/span&gt;:         &lt;span class=&quot;string&quot;&gt;&quot;John Smith&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;age&quot;&lt;/span&gt;:          &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;confirmed&quot;&lt;/span&gt;:    &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;join_date&quot;&lt;/span&gt;:    &lt;span class=&quot;string&quot;&gt;&quot;2014-06-01&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;home&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;lat&quot;&lt;/span&gt;:      &lt;span class=&quot;number&quot;&gt;51.5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;lon&quot;&lt;/span&gt;:      &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;accounts&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;facebook&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;:   &lt;span class=&quot;string&quot;&gt;&quot;johnsmith&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;twitter&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;:   &lt;span class=&quot;string&quot;&gt;&quot;johnsmith&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  在 Elasticsearch 中，术语 文档 有着特定的含义。它是指最顶层或者根对象, 这个根对象被序列化成 JSON 并存储到 Elasticsearch 中，指定了唯一 ID。&lt;/p&gt;
&lt;p&gt;  字段的名字可以是任何合法的字符串，但 不可以 包含英文句号(.)。&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://weikeqin.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://weikeqin.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch-restful-api</title>
    <link href="http://weikeqin.com/2020/01/19/elasticsearch-restful-api/"/>
    <id>http://weikeqin.com/2020/01/19/elasticsearch-restful-api/</id>
    <published>2020-01-19T08:56:47.000Z</published>
    <updated>2020-04-18T08:43:19.052Z</updated>
    
    <content type="html"><![CDATA[<p>  elasticsearch 的 resuful api 笔记</p><h1 id="1-查看ES及索引信息"><a href="#1-查看ES及索引信息" class="headerlink" title="(1) 查看ES及索引信息"></a>(1) 查看ES及索引信息</h1><h2 id="1-1-查看ES基本信息"><a href="#1-1-查看ES基本信息" class="headerlink" title="(1.1)  查看ES基本信息"></a>(1.1)  查看ES基本信息</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ curl <span class="string">'http://localhost:9200?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"elasticsearch_001_data"</span>,</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elasticsearch_test"</span>,</span><br><span class="line">  <span class="string">"cluster_uuid"</span> : <span class="string">"NsxYKhI1Qw63MzaPKl34dA"</span>,</span><br><span class="line">  <span class="string">"version"</span> : &#123;</span><br><span class="line">    <span class="string">"number"</span> : <span class="string">"6.6.2"</span>,</span><br><span class="line">    <span class="string">"build_flavor"</span> : <span class="string">"default"</span>,</span><br><span class="line">    <span class="string">"build_type"</span> : <span class="string">"tar"</span>,</span><br><span class="line">    <span class="string">"build_hash"</span> : <span class="string">"3bd3e59"</span>,</span><br><span class="line">    <span class="string">"build_date"</span> : <span class="string">"2019-03-06T15:16:26.864148Z"</span>,</span><br><span class="line">    <span class="string">"build_snapshot"</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"lucene_version"</span> : <span class="string">"7.6.0"</span>,</span><br><span class="line">    <span class="string">"minimum_wire_compatibility_version"</span> : <span class="string">"5.6.0"</span>,</span><br><span class="line">    <span class="string">"minimum_index_compatibility_version"</span> : <span class="string">"5.0.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"tagline"</span> : <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-计算集群中文档的数量"><a href="#1-2-计算集群中文档的数量" class="headerlink" title="(1.2)  计算集群中文档的数量"></a>(1.2)  计算集群中文档的数量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ curl  <span class="string">'http://localhost:9200/_count?pretty'</span> </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"count"</span> : 3,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  可以看到返回结果是3</p><h2 id="1-3-查看ES里所有索引"><a href="#1-3-查看ES里所有索引" class="headerlink" title="(1.3)  查看ES里所有索引"></a>(1.3)  查看ES里所有索引</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[wkq@VM_77_25_centos ~]$ curl &apos;localhost:9200/_cat/indices?v&apos;</span><br><span class="line">health status index    uuid                   pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">yellow open   megacorp EUu3nzyRQN2Mp7tRw2u_nQ   5   1          3            0     17.5kb         17.5kb</span><br><span class="line">yellow open   gb       kAXZAJZTRg2X0Wm72-n5qQ   5   1          1            0      5.7kb          5.7kb</span><br><span class="line">yellow open   us       Q6ubyCClQvyMB5iX8f9BZA   5   1          1            0      5.7kb          5.7kb</span><br><span class="line">yellow open   tweet    hNRmZ9RETWWPoUMIK3BivA   5   1         12            0       26kb           26kb</span><br><span class="line">yellow open   website  1Ptx5N-iTR2nDNtVgVMEpw   5   1          5            0     21.2kb         21.2kb</span><br><span class="line">yellow open   blogs    bW_JTJkfS2GVN8FE_gX-Hg   3   2          0            0       783b           783b</span><br><span class="line">yellow open   user     rOprq90rQsuyP0mad7I6iQ   5   1          2            0     10.2kb         10.2kb</span><br><span class="line">[wkq@VM_77_25_centos ~]$</span><br></pre></td></tr></table></figure><h2 id="1-3-插入数据"><a href="#1-3-插入数据" class="headerlink" title="(1.3) 插入数据"></a>(1.3) 插入数据</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT <span class="string">"localhost:9200/megacorp/employee/1"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;     "first_name" : "John",</span></span><br><span class="line"><span class="string">&gt;     "last_name" :  "Smith",</span></span><br><span class="line"><span class="string">&gt;     "age" :        25,</span></span><br><span class="line"><span class="string">&gt;     "about" :      "I love to go rock climbing",</span></span><br><span class="line"><span class="string">&gt;     "interests": [ "sports", "music" ]</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;<span class="string">"_index"</span>:<span class="string">"megacorp"</span>,<span class="string">"_type"</span>:<span class="string">"employee"</span>,<span class="string">"_id"</span>:<span class="string">"1"</span>,<span class="string">"_version"</span>:2,<span class="string">"result"</span>:<span class="string">"updated"</span>,<span class="string">"_shards"</span>:&#123;<span class="string">"total"</span>:2,<span class="string">"successful"</span>:1,<span class="string">"failed"</span>:0&#125;,<span class="string">"_seq_no"</span>:1,<span class="string">"_primary_term"</span>:1&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="1-4-根据id查询数据"><a href="#1-4-根据id查询数据" class="headerlink" title="(1.4) 根据id查询数据"></a>(1.4) 根据id查询数据</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/1?pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : 2,</span><br><span class="line">  <span class="string">"_seq_no"</span> : 1,</span><br><span class="line">  <span class="string">"_primary_term"</span> : 1,</span><br><span class="line">  <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">    <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">    <span class="string">"age"</span> : 25,</span><br><span class="line">    <span class="string">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">    <span class="string">"interests"</span> : [</span><br><span class="line">      <span class="string">"sports"</span>,</span><br><span class="line">      <span class="string">"music"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-5-查询某个索引里的所有数据"><a href="#1-5-查询某个索引里的所有数据" class="headerlink" title="(1.5) 查询某个索引里的所有数据"></a>(1.5) 查询某个索引里的所有数据</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/_search?pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 17,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 3,</span><br><span class="line">    <span class="string">"max_score"</span> : 1.0,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 32,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 25,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Douglas"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Fir"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 35,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to build cabinets"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"forestry"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-5-根据某个字段搜索"><a href="#1-5-根据某个字段搜索" class="headerlink" title="(1.5) 根据某个字段搜索"></a>(1.5) 根据某个字段搜索</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/_search?q=last_name:Smith&amp;pretty"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 112,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"max_score"</span> : 0.2876821,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.2876821,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 32,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.2876821,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 25,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-6-查看索引mapping"><a href="#1-6-查看索引mapping" class="headerlink" title="(1.6) 查看索引mapping"></a>(1.6) 查看索引mapping</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">$ curl <span class="string">'http://localhost:9200/megacorp/_mapping?pretty=true'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"megacorp"</span> : &#123;</span><br><span class="line">    <span class="string">"mappings"</span> : &#123;</span><br><span class="line">      <span class="string">"employee"</span> : &#123;</span><br><span class="line">        <span class="string">"properties"</span> : &#123;</span><br><span class="line">          <span class="string">"about"</span> : &#123;</span><br><span class="line">            <span class="string">"type"</span> : <span class="string">"text"</span>,</span><br><span class="line">            <span class="string">"fields"</span> : &#123;</span><br><span class="line">              <span class="string">"keyword"</span> : &#123;</span><br><span class="line">                <span class="string">"type"</span> : <span class="string">"keyword"</span>,</span><br><span class="line">                <span class="string">"ignore_above"</span> : 256</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"age"</span> : &#123;</span><br><span class="line">            <span class="string">"type"</span> : <span class="string">"long"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"first_name"</span> : &#123;</span><br><span class="line">            <span class="string">"type"</span> : <span class="string">"text"</span>,</span><br><span class="line">            <span class="string">"fields"</span> : &#123;</span><br><span class="line">              <span class="string">"keyword"</span> : &#123;</span><br><span class="line">                <span class="string">"type"</span> : <span class="string">"keyword"</span>,</span><br><span class="line">                <span class="string">"ignore_above"</span> : 256</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"interests"</span> : &#123;</span><br><span class="line">            <span class="string">"type"</span> : <span class="string">"text"</span>,</span><br><span class="line">            <span class="string">"fields"</span> : &#123;</span><br><span class="line">              <span class="string">"keyword"</span> : &#123;</span><br><span class="line">                <span class="string">"type"</span> : <span class="string">"keyword"</span>,</span><br><span class="line">                <span class="string">"ignore_above"</span> : 256</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"fielddata"</span> : <span class="literal">true</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="string">"last_name"</span> : &#123;</span><br><span class="line">            <span class="string">"type"</span> : <span class="string">"text"</span>,</span><br><span class="line">            <span class="string">"fields"</span> : &#123;</span><br><span class="line">              <span class="string">"keyword"</span> : &#123;</span><br><span class="line">                <span class="string">"type"</span> : <span class="string">"keyword"</span>,</span><br><span class="line">                <span class="string">"ignore_above"</span> : 256</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-x"><a href="#1-x" class="headerlink" title="(1.x)"></a>(1.x)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"_source"</span>: &#123;</span><br><span class="line">        <span class="string">"includes"</span>: [ <span class="string">"obj1.*"</span>, <span class="string">"obj2.*"</span> ],</span><br><span class="line">        <span class="string">"excludes"</span>: [ <span class="string">"*.description"</span> ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"query"</span> : &#123;</span><br><span class="line">        <span class="string">"term"</span> : &#123; <span class="string">"user"</span> : <span class="string">"kimchy"</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="（2-领域特定语言-DSL-搜索"><a href="#（2-领域特定语言-DSL-搜索" class="headerlink" title="（2) 领域特定语言(DSL)搜索"></a>（2) 领域特定语言(DSL)搜索</h1><p> 领域特定语言(DSL)，使用 JSON 构造了一个请求。</p><h2 id="2-1-计算集群中文档的数量"><a href="#2-1-计算集群中文档的数量" class="headerlink" title="(2.1) 计算集群中文档的数量"></a>(2.1) 计算集群中文档的数量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ curl   -XGET <span class="string">'http://localhost:9200/_count?pretty'</span> -H <span class="string">"Content-Type: application/json"</span> -d <span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;     "query": &#123;</span></span><br><span class="line"><span class="string">&gt;         "match_all": &#123;&#125;</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"count"</span> : 3,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  可以看到结果是3</p><h2 id="2-2-使用查询表达式搜索"><a href="#2-2-使用查询表达式搜索" class="headerlink" title="(2.2) 使用查询表达式搜索"></a>(2.2) 使用查询表达式搜索</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/_search?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;     "query" : &#123;</span></span><br><span class="line"><span class="string">&gt;         "match" : &#123;</span></span><br><span class="line"><span class="string">&gt;             "last_name" : "Smith"</span></span><br><span class="line"><span class="string">&gt;         &#125;</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 7,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"max_score"</span> : 0.2876821,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.2876821,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 32,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.2876821,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 25,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure><h2 id="2-3-多条件查询"><a href="#2-3-多条件查询" class="headerlink" title="(2.3) 多条件查询"></a>(2.3) 多条件查询</h2><p>  搜索姓氏为 Smith 的员工，但这次我们只需要年龄大于 30 的</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/_search?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;     "query" : &#123;</span></span><br><span class="line"><span class="string">&gt;         "bool": &#123;</span></span><br><span class="line"><span class="string">&gt;             "must": &#123;</span></span><br><span class="line"><span class="string">&gt;                 "match" : &#123;</span></span><br><span class="line"><span class="string">&gt;                     "last_name" : "smith"</span></span><br><span class="line"><span class="string">&gt;                 &#125;</span></span><br><span class="line"><span class="string">&gt;             &#125;,</span></span><br><span class="line"><span class="string">&gt;             "filter": &#123;</span></span><br><span class="line"><span class="string">&gt;                 "range" : &#123;</span></span><br><span class="line"><span class="string">&gt;                     "age" : &#123; "gt" : 30 &#125;</span></span><br><span class="line"><span class="string">&gt;                 &#125;</span></span><br><span class="line"><span class="string">&gt;             &#125;</span></span><br><span class="line"><span class="string">&gt;         &#125;</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 32,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"max_score"</span> : 0.2876821,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.2876821,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 32,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>  range 过滤器，它能找到年龄大于 30 的文档，其中 gt 表示_大于_(great than)</p><h2 id="2-4-全文搜索"><a href="#2-4-全文搜索" class="headerlink" title="(2.4) 全文搜索"></a>(2.4) 全文搜索</h2><p>  搜索下所有喜欢攀岩（rock climbing）的员工</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/_search?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;     "query" : &#123;</span></span><br><span class="line"><span class="string">&gt;         "match" : &#123;</span></span><br><span class="line"><span class="string">&gt;             "about" : "rock climbing"</span></span><br><span class="line"><span class="string">&gt;         &#125;</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 13,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"max_score"</span> : 0.5753642,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.5753642,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 25,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.2876821,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 32,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-5-短语搜索"><a href="#2-5-短语搜索" class="headerlink" title="(2.5) 短语搜索"></a>(2.5) 短语搜索</h2><p>  精确匹配一系列单词或者_短语_ </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/_search?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;     "query" : &#123;</span></span><br><span class="line"><span class="string">&gt;         "match_phrase" : &#123;</span></span><br><span class="line"><span class="string">&gt;             "about" : "rock climbing"</span></span><br><span class="line"><span class="string">&gt;         &#125;</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 16,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"max_score"</span> : 0.5753642,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.5753642,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 25,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-6-高亮搜索"><a href="#2-6-高亮搜索" class="headerlink" title="(2.6) 高亮搜索"></a>(2.6) 高亮搜索</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/_search?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;     "query" : &#123;</span></span><br><span class="line"><span class="string">&gt;         "match_phrase" : &#123;</span></span><br><span class="line"><span class="string">&gt;             "about" : "rock climbing"</span></span><br><span class="line"><span class="string">&gt;         &#125;</span></span><br><span class="line"><span class="string">&gt;     &#125;,</span></span><br><span class="line"><span class="string">&gt;     "highlight": &#123;</span></span><br><span class="line"><span class="string">&gt;         "fields" : &#123;</span></span><br><span class="line"><span class="string">&gt;             "about" : &#123;&#125;</span></span><br><span class="line"><span class="string">&gt;         &#125;</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 305,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"max_score"</span> : 0.5753642,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.5753642,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 25,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"highlight"</span> : &#123;</span><br><span class="line">          <span class="string">"about"</span> : [</span><br><span class="line">            <span class="string">"I love to go &lt;em&gt;rock&lt;/em&gt; &lt;em&gt;climbing&lt;/em&gt;"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-7-聚合"><a href="#2-7-聚合" class="headerlink" title="(2.7) 聚合"></a>(2.7) 聚合</h2><p>  聚合与 SQL 中的 GROUP BY 类似但更强大。</p><p>  挖掘出员工中最受欢迎的兴趣爱好</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/_search?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;   "aggs": &#123;</span></span><br><span class="line"><span class="string">&gt;     "all_interests": &#123;</span></span><br><span class="line"><span class="string">&gt;       "terms": &#123; "field": "interests" &#125;</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt;   &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 139,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 3,</span><br><span class="line">    <span class="string">"max_score"</span> : 1.0,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 32,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 25,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Douglas"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Fir"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 35,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to build cabinets"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"forestry"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="string">"all_interests"</span> : &#123;</span><br><span class="line">      <span class="string">"doc_count_error_upper_bound"</span> : 0,</span><br><span class="line">      <span class="string">"sum_other_doc_count"</span> : 0,</span><br><span class="line">      <span class="string">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"key"</span> : <span class="string">"music"</span>,</span><br><span class="line">          <span class="string">"doc_count"</span> : 2</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"key"</span> : <span class="string">"forestry"</span>,</span><br><span class="line">          <span class="string">"doc_count"</span> : 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"key"</span> : <span class="string">"sports"</span>,</span><br><span class="line">          <span class="string">"doc_count"</span> : 1</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  可以看到，两位员工对音乐感兴趣，一位对林业感兴趣，一位对运动感兴趣。这些聚合的结果数据并非预先统计，而是根据匹配当前查询的文档即时生成的。</p><h2 id="2-8-条件聚合"><a href="#2-8-条件聚合" class="headerlink" title="(2.8) 条件聚合"></a>(2.8) 条件聚合</h2><p>  想知道叫 Smith 的员工中最受欢迎的兴趣爱好</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/_search?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;   "query": &#123;</span></span><br><span class="line"><span class="string">&gt;     "match": &#123;</span></span><br><span class="line"><span class="string">&gt;       "last_name": "smith"</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt;   &#125;,</span></span><br><span class="line"><span class="string">&gt;   "aggs": &#123;</span></span><br><span class="line"><span class="string">&gt;     "all_interests": &#123;</span></span><br><span class="line"><span class="string">&gt;       "terms": &#123;</span></span><br><span class="line"><span class="string">&gt;         "field": "interests"</span></span><br><span class="line"><span class="string">&gt;       &#125;</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt;   &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 11,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 2,</span><br><span class="line">    <span class="string">"max_score"</span> : 0.2876821,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.2876821,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 32,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 0.2876821,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 25,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="string">"all_interests"</span> : &#123;</span><br><span class="line">      <span class="string">"doc_count_error_upper_bound"</span> : 0,</span><br><span class="line">      <span class="string">"sum_other_doc_count"</span> : 0,</span><br><span class="line">      <span class="string">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"key"</span> : <span class="string">"music"</span>,</span><br><span class="line">          <span class="string">"doc_count"</span> : 2</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"key"</span> : <span class="string">"sports"</span>,</span><br><span class="line">          <span class="string">"doc_count"</span> : 1</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-9-聚合条件汇总"><a href="#2-9-聚合条件汇总" class="headerlink" title="(2.9) 聚合条件汇总"></a>(2.9) 聚合条件汇总</h2><p>  查询特定兴趣爱好员工的平均年龄</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/megacorp/employee/_search?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;     "aggs" : &#123;</span></span><br><span class="line"><span class="string">&gt;         "all_interests" : &#123;</span></span><br><span class="line"><span class="string">&gt;             "terms" : &#123; "field" : "interests" &#125;,</span></span><br><span class="line"><span class="string">&gt;             "aggs" : &#123;</span></span><br><span class="line"><span class="string">&gt;                 "avg_age" : &#123;</span></span><br><span class="line"><span class="string">&gt;                     "avg" : &#123; "field" : "age" &#125;</span></span><br><span class="line"><span class="string">&gt;                 &#125;</span></span><br><span class="line"><span class="string">&gt;             &#125;</span></span><br><span class="line"><span class="string">&gt;         &#125;</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"took"</span> : 36,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 5,</span><br><span class="line">    <span class="string">"successful"</span> : 5,</span><br><span class="line">    <span class="string">"skipped"</span> : 0,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"hits"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 3,</span><br><span class="line">    <span class="string">"max_score"</span> : 1.0,</span><br><span class="line">    <span class="string">"hits"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"2"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Jane"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 32,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to collect rock albums"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"John"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Smith"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 25,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I love to go rock climbing"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"sports"</span>,</span><br><span class="line">            <span class="string">"music"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"_index"</span> : <span class="string">"megacorp"</span>,</span><br><span class="line">        <span class="string">"_type"</span> : <span class="string">"employee"</span>,</span><br><span class="line">        <span class="string">"_id"</span> : <span class="string">"3"</span>,</span><br><span class="line">        <span class="string">"_score"</span> : 1.0,</span><br><span class="line">        <span class="string">"_source"</span> : &#123;</span><br><span class="line">          <span class="string">"first_name"</span> : <span class="string">"Douglas"</span>,</span><br><span class="line">          <span class="string">"last_name"</span> : <span class="string">"Fir"</span>,</span><br><span class="line">          <span class="string">"age"</span> : 35,</span><br><span class="line">          <span class="string">"about"</span> : <span class="string">"I like to build cabinets"</span>,</span><br><span class="line">          <span class="string">"interests"</span> : [</span><br><span class="line">            <span class="string">"forestry"</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="string">"all_interests"</span> : &#123;</span><br><span class="line">      <span class="string">"doc_count_error_upper_bound"</span> : 0,</span><br><span class="line">      <span class="string">"sum_other_doc_count"</span> : 0,</span><br><span class="line">      <span class="string">"buckets"</span> : [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"key"</span> : <span class="string">"music"</span>,</span><br><span class="line">          <span class="string">"doc_count"</span> : 2,</span><br><span class="line">          <span class="string">"avg_age"</span> : &#123;</span><br><span class="line">            <span class="string">"value"</span> : 28.5</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"key"</span> : <span class="string">"forestry"</span>,</span><br><span class="line">          <span class="string">"doc_count"</span> : 1,</span><br><span class="line">          <span class="string">"avg_age"</span> : &#123;</span><br><span class="line">            <span class="string">"value"</span> : 35.0</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"key"</span> : <span class="string">"sports"</span>,</span><br><span class="line">          <span class="string">"doc_count"</span> : 1,</span><br><span class="line">          <span class="string">"avg_age"</span> : &#123;</span><br><span class="line">            <span class="string">"value"</span> : 25.0</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-ES修改配置语句"><a href="#3-ES修改配置语句" class="headerlink" title="(3) ES修改配置语句"></a>(3) ES修改配置语句</h1><h2 id="3-1-es-5-x-开启全文检索语句"><a href="#3-1-es-5-x-开启全文检索语句" class="headerlink" title="(3.1) es 5.x 开启全文检索语句"></a>(3.1) es 5.x 开启全文检索语句</h2><p> 5.x后对排序，聚合这些操作用单独的数据结构(fielddata)缓存到内存里了，需要单独开启</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT <span class="string">"localhost:9200/megacorp/_mapping/employee/"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;   "properties": &#123;</span></span><br><span class="line"><span class="string">&gt;     "interests": &#123;</span></span><br><span class="line"><span class="string">&gt;       "type":     "text",</span></span><br><span class="line"><span class="string">&gt;       "fielddata": true</span></span><br><span class="line"><span class="string">&gt;     &#125;</span></span><br><span class="line"><span class="string">&gt;   &#125;</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;<span class="string">"acknowledged"</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 推荐使用keyword聚合</p></blockquote><h2 id="3-2-创建索引并设置分片数和副本数"><a href="#3-2-创建索引并设置分片数和副本数" class="headerlink" title="(3.2) 创建索引并设置分片数和副本数"></a>(3.2) 创建索引并设置分片数和副本数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT &quot;localhost:9200/blogs?pretty&quot; -H &apos;Content-Type: application/json&apos; -d&apos;</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;    &quot;settings&quot; : &#123;</span><br><span class="line">&gt;       &quot;number_of_shards&quot; : 3,</span><br><span class="line">&gt;       &quot;number_of_replicas&quot; : 1</span><br><span class="line">&gt;    &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;acknowledged&quot; : true,</span><br><span class="line">  &quot;shards_acknowledged&quot; : true,</span><br><span class="line">  &quot;index&quot; : &quot;blogs&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-设置副本数"><a href="#3-3-设置副本数" class="headerlink" title="(3.3)  设置副本数"></a>(3.3)  设置副本数</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X PUT <span class="string">"localhost:9200/blogs/_settings?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d<span class="string">'</span></span><br><span class="line"><span class="string">&gt; &#123;</span></span><br><span class="line"><span class="string">&gt;    "number_of_replicas" : 2</span></span><br><span class="line"><span class="string">&gt; &#125;</span></span><br><span class="line"><span class="string">&gt; '</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"acknowledged"</span> : <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-4-get-set-up"><a href="#3-4-get-set-up" class="headerlink" title="(3.4) get set up"></a>(3.4) get set up</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X GET <span class="string">"localhost:9200/_nodes/transport?error_trace=true&amp;pretty=true"</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_nodes"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : 1,</span><br><span class="line">    <span class="string">"successful"</span> : 1,</span><br><span class="line">    <span class="string">"failed"</span> : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elasticsearch_test"</span>,</span><br><span class="line">  <span class="string">"nodes"</span> : &#123;</span><br><span class="line">    <span class="string">"urmXtplyRmyt_LKCTC6_3w"</span> : &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"elasticsearch_001_data"</span>,</span><br><span class="line">      <span class="string">"transport_address"</span> : <span class="string">"127.0.0.1:9300"</span>,</span><br><span class="line">      <span class="string">"host"</span> : <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="string">"ip"</span> : <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="string">"version"</span> : <span class="string">"6.6.2"</span>,</span><br><span class="line">      <span class="string">"build_flavor"</span> : <span class="string">"default"</span>,</span><br><span class="line">      <span class="string">"build_type"</span> : <span class="string">"tar"</span>,</span><br><span class="line">      <span class="string">"build_hash"</span> : <span class="string">"3bd3e59"</span>,</span><br><span class="line">      <span class="string">"roles"</span> : [</span><br><span class="line">        <span class="string">"master"</span>,</span><br><span class="line">        <span class="string">"data"</span>,</span><br><span class="line">        <span class="string">"ingest"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"attributes"</span> : &#123;</span><br><span class="line">        <span class="string">"ml.machine_memory"</span> : <span class="string">"1927528448"</span>,</span><br><span class="line">        <span class="string">"xpack.installed"</span> : <span class="string">"true"</span>,</span><br><span class="line">        <span class="string">"ml.max_open_jobs"</span> : <span class="string">"20"</span>,</span><br><span class="line">        <span class="string">"ml.enabled"</span> : <span class="string">"true"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"transport"</span> : &#123;</span><br><span class="line">        <span class="string">"bound_address"</span> : [</span><br><span class="line">          <span class="string">"127.0.0.1:9300"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"publish_address"</span> : <span class="string">"127.0.0.1:9300"</span>,</span><br><span class="line">        <span class="string">"profiles"</span> : &#123; &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_indexing_employee_documents.html" target="_blank" rel="noopener">索引员工文档</a><br>[2] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_retrieving_a_document.html" target="_blank" rel="noopener">检索文档</a><br>[3] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_search_lite.html" target="_blank" rel="noopener">轻量搜索</a><br>[4] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_search_with_query_dsl.html" target="_blank" rel="noopener">使用查询表达式搜索</a><br>[5] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_more_complicated_searches.html" target="_blank" rel="noopener">更复杂的搜索</a><br>[6] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_full_text_search.html" target="_blank" rel="noopener">全文搜索</a><br>[7] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_phrase_search.html" target="_blank" rel="noopener">短语搜索</a><br>[8] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/highlighting-intro.html" target="_blank" rel="noopener">高亮搜索</a><br>[9] <a href="https://www.elastic.co/guide/cn/elasticsearch/guide/cn/_analytics.html" target="_blank" rel="noopener">分析</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  elasticsearch 的 resuful api 笔记&lt;/p&gt;
&lt;h1 id=&quot;1-查看ES及索引信息&quot;&gt;&lt;a href=&quot;#1-查看ES及索引信息&quot; class=&quot;headerlink&quot; title=&quot;(1) 查看ES及索引信息&quot;&gt;&lt;/a&gt;(1) 查看ES及索引信息&lt;/h1&gt;&lt;h2 id=&quot;1-1-查看ES基本信息&quot;&gt;&lt;a href=&quot;#1-1-查看ES基本信息&quot; class=&quot;headerlink&quot; title=&quot;(1.1)  查看ES基本信息&quot;&gt;&lt;/a&gt;(1.1)  查看ES基本信息&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$ curl &lt;span class=&quot;string&quot;&gt;&#39;http://localhost:9200?pretty&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;elasticsearch_001_data&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;cluster_name&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;elasticsearch_test&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;cluster_uuid&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;NsxYKhI1Qw63MzaPKl34dA&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;version&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;number&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;6.6.2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;build_flavor&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;default&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;build_type&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;tar&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;build_hash&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;3bd3e59&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;build_date&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;2019-03-06T15:16:26.864148Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;build_snapshot&quot;&lt;/span&gt; : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;lucene_version&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;7.6.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;minimum_wire_compatibility_version&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;5.6.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;minimum_index_compatibility_version&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;5.0.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;tagline&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;You Know, for Search&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;1-2-计算集群中文档的数量&quot;&gt;&lt;a href=&quot;#1-2-计算集群中文档的数量&quot; class=&quot;headerlink&quot; title=&quot;(1.2)  计算集群中文档的数量&quot;&gt;&lt;/a&gt;(1.2)  计算集群中文档的数量&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ curl  &lt;span class=&quot;string&quot;&gt;&#39;http://localhost:9200/_count?pretty&#39;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;count&quot;&lt;/span&gt; : 3,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;_shards&quot;&lt;/span&gt; : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt; : 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;successful&quot;&lt;/span&gt; : 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;skipped&quot;&lt;/span&gt; : 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;failed&quot;&lt;/span&gt; : 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  可以看到返回结果是3&lt;/p&gt;
&lt;h2 id=&quot;1-3-查看ES里所有索引&quot;&gt;&lt;a href=&quot;#1-3-查看ES里所有索引&quot; class=&quot;headerlink&quot; title=&quot;(1.3)  查看ES里所有索引&quot;&gt;&lt;/a&gt;(1.3)  查看ES里所有索引&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$ curl &amp;apos;localhost:9200/_cat/indices?v&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;health status index    uuid                   pri rep docs.count docs.deleted store.size pri.store.size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yellow open   megacorp EUu3nzyRQN2Mp7tRw2u_nQ   5   1          3            0     17.5kb         17.5kb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yellow open   gb       kAXZAJZTRg2X0Wm72-n5qQ   5   1          1            0      5.7kb          5.7kb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yellow open   us       Q6ubyCClQvyMB5iX8f9BZA   5   1          1            0      5.7kb          5.7kb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yellow open   tweet    hNRmZ9RETWWPoUMIK3BivA   5   1         12            0       26kb           26kb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yellow open   website  1Ptx5N-iTR2nDNtVgVMEpw   5   1          5            0     21.2kb         21.2kb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yellow open   blogs    bW_JTJkfS2GVN8FE_gX-Hg   3   2          0            0       783b           783b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yellow open   user     rOprq90rQsuyP0mad7I6iQ   5   1          2            0     10.2kb         10.2kb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[wkq@VM_77_25_centos ~]$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;1-3-插入数据&quot;&gt;&lt;a href=&quot;#1-3-插入数据&quot; class=&quot;headerlink&quot; title=&quot;(1.3) 插入数据&quot;&gt;&lt;/a&gt;(1.3) 插入数据&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ curl -X PUT &lt;span class=&quot;string&quot;&gt;&quot;localhost:9200/megacorp/employee/1&quot;&lt;/span&gt; -H &lt;span class=&quot;string&quot;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt; -d&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;gt;     &quot;first_name&quot; : &quot;John&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;gt;     &quot;last_name&quot; :  &quot;Smith&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;gt;     &quot;age&quot; :        25,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;gt;     &quot;about&quot; :      &quot;I love to go rock climbing&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;gt;     &quot;interests&quot;: [ &quot;sports&quot;, &quot;music&quot; ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;gt; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;gt; &#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;_index&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;megacorp&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;_type&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;employee&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;_id&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;_version&quot;&lt;/span&gt;:2,&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;updated&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;_shards&quot;&lt;/span&gt;:&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;:2,&lt;span class=&quot;string&quot;&gt;&quot;successful&quot;&lt;/span&gt;:1,&lt;span class=&quot;string&quot;&gt;&quot;failed&quot;&lt;/span&gt;:0&amp;#125;,&lt;span class=&quot;string&quot;&gt;&quot;_seq_no&quot;&lt;/span&gt;:1,&lt;span class=&quot;string&quot;&gt;&quot;_primary_term&quot;&lt;/span&gt;:1&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://weikeqin.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://weikeqin.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>分布式锁</title>
    <link href="http://weikeqin.com/2019/12/29/distributed-lock/"/>
    <id>http://weikeqin.com/2019/12/29/distributed-lock/</id>
    <published>2019-12-29T13:39:47.000Z</published>
    <updated>2020-01-19T03:19:16.402Z</updated>
    
    <content type="html"><![CDATA[<p>  分享下一个基于redis来实现的分布式锁。</p><h1 id="加锁过程分析"><a href="#加锁过程分析" class="headerlink" title="加锁过程分析"></a>加锁过程分析</h1><p> <img src="/img/distributed/distributed-lock-redis-lock.jpg" alt="加锁过程分析"></p><a id="more"></a> <p>我第一次读代码的时候，有这么几个疑惑：</p><p>Q1：为什么不使用 SET key value [expiration EX seconds|PX milliseconds] [NX|XX]  这个指令来实现key的自动过期呢，反而放到应用代码判断key是否过期？</p><p>A1：我们的分布式锁开发的时候SET命令还不支持NX、PX，所以才想出这种办法来实现key过期，NX、PX在2.6.12以后开始支持；</p><p>Q2：已经判断了当前key对应的时间戳已经过期了，为什么还要使用getset再获取一次呢，直接使用set指令覆盖不可以吗？</p><p>A2：这里其实牵扯到并发的一些事情，如果直接使用set，那有可能多个客户端会同时获取到锁，如果使用getset然后判断旧值是否过期就不会有这个问题，设想一下如下场景：</p><p>C1加锁成功，不巧的是，这时C1意外的奔溃了，自然就不会释放锁；<br>C2，C3尝试加锁，这时key已存在，所以C2，C3去判断key是否已过期，这里假设key已经过期了，所以C2，C3使用set指令去设置值，那两个都会加锁成功，这就闯大祸了；如果使用getset指令，然后判断下返回值是否过期就可以避免这种问题，假如C2跑的快，那C3判断返回的时间戳已经过期，自然就加锁失败；</p><p>Q1：为什么释放锁时还需要判断key是否过期呢，直接del不是性能更高吗？</p><p>A1：考虑这样一种场景：</p><p>C1获取锁成功，开始执行自己的操作，不幸的是C1这时被阻塞了；<br>C2这时来获取锁，由于C1被阻塞了很长时间，所以key对应的value已经过期了，这时C2通过getset加锁成功；<br>C1尘封了太久终于被再次唤醒，对于释放锁这件事它可是认真的，伴随着一波del操作，悲剧即将发生；<br>C3来获取锁，好家伙，居然一下就成功了，接着就是一波操作猛如虎，接着就是一堆的客诉过来了；<br>为什么会这样呢？回想C1被唤醒以后的事情，居然敢直接del，C2活都没干完呢，锁就被C1给释放了，这时C3来直接就加锁成功，所以为了安全起见C3释放锁时得分成两步：1.判断value是否已经过期 2.如果已过期直接忽略，如果没过期就执行del。这样就真的安全了吗？安全了吗？安全了吗？假如第一步和第二步之间相隔了很久是不是也会出现锁被其他人释放的问题呢？是吧？是的！有没有别的解决办法呢？听说借助lua就可以解决这个问题了，感兴趣的直接给你传送过去可好。</p><h1 id="释放锁过程分析"><a href="#释放锁过程分析" class="headerlink" title="释放锁过程分析"></a>释放锁过程分析</h1><p> <img src="/img/distributed/distributed-lock-redis-unlock.png" alt="释放锁过程分析"></p><p>Q1：Redis锁的过期时间小于业务的执行时间该如何续期？</p><p>A1：这个暂时没有实现，据说有一个叫Redisson的家伙解决了这个问题，我们也有部分业务在使用，未来有可能会切换到Redisson。</p><p>Q2：怎么实现的高可用？</p><p>A2：我们采用Failover机制，初始化redis锁的时候会维护一个redis连接池，加锁或者释放锁的时候采用多写的方式来保障一致性，如果某个节点不可用的时候会自动切换到其他节点，但是这种机制可能会导致多个客户端同时获取到锁的情况，考虑这种情况：</p><p>C1去redis1加锁，加锁成功后会写到redis2，redis3；<br>C2也去redis1加锁，但是此时C2到redis1的网络出现问题，这时C2切换到redis2去加锁，由于第一步中的redis多写并不是原子的，所有就有可能导致C2也获取锁成功；<br>针对这种情况，目前有些业务方是通过数据库唯一索引的方式来规避的，未来会修复这个bug，具体方案目前还没有。</p><h1 id="java实现"><a href="#java实现" class="headerlink" title="java实现"></a>java实现</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.wkq.java.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.wkq.util.JedisPoolUtil;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单的基于Redis分布式锁</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;pre&gt;</span></span><br><span class="line"><span class="comment"> *     参考 https://www.cnblogs.com/chopper-poet/p/10802242.html</span></span><br><span class="line"><span class="comment"> *          https://github.com/wyzssw/DistributedLock/blob/master/src/main/java/com/wyzssw/distributedLock/DistributedLock.java</span></span><br><span class="line"><span class="comment"> * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: weikeqin.cn@gmail.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2019-12-29 21:27</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisLock</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * redis 无用户名密码 默认配置 测试使用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Jedis jedis = JedisPoolUtil.getJedis();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加锁</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;pre&gt;</span></span><br><span class="line"><span class="comment">     *     1. 尝试加锁 setNx，key是自己设置，value设置成 当前时间+过期时间   System.currentTimeMillis() + lockTimeOut</span></span><br><span class="line"><span class="comment">     *     2. 判断key是否存在，不存在，获取锁成功，返回 过期时间 ( expireTime = System.currentTimeMillis() + lockTimeOut )，结束。</span></span><br><span class="line"><span class="comment">     *     3. key已存在，获取锁失败</span></span><br><span class="line"><span class="comment">     *     4. 获取key对应的过期时间。 此时获取到的值是另一个设置的时间戳。</span></span><br><span class="line"><span class="comment">     *     5. 拿当前时间戳 和 上一步取到的时间戳对比，判断key是否过期。</span></span><br><span class="line"><span class="comment">     *     6. 过期，使用 getset 再次获取锁。  redis.getset(key, System.currentTimeMillis() + lockTimeOut)</span></span><br><span class="line"><span class="comment">     *     7. 用当前时间戳 对比 判断 返回的value是否过期。</span></span><br><span class="line"><span class="comment">     *     8. 如果过期，获取锁成功。</span></span><br><span class="line"><span class="comment">     *     9. 如果不过期，获取锁失败。</span></span><br><span class="line"><span class="comment">     *     10. 拿当前时间戳判断key是否过期，不过期，获取锁失败。</span></span><br><span class="line"><span class="comment">     * &lt;/pre&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> k</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lockTimeOut</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">tryLock</span><span class="params">(String k, <span class="keyword">long</span> lockTimeOut)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> expireTime = System.currentTimeMillis() + lockTimeOut;</span><br><span class="line">        <span class="comment">// SETNX KEY_NAME VALUE</span></span><br><span class="line">        <span class="comment">/** 1. 尝试加锁 setNx */</span></span><br><span class="line">        Long resNum = jedis.setnx(k, String.valueOf(expireTime));</span><br><span class="line">        <span class="comment">/** 2. 判断key是否存在，不存在，获取锁成功 */</span></span><br><span class="line">        <span class="keyword">if</span> (resNum == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">// 获取锁成功</span></span><br><span class="line">            <span class="keyword">return</span> expireTime;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** 3. key已存在，获取锁失败 */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/** 4. 获取key对应的过期时间。 */</span></span><br><span class="line">        String curLockTimeStr = jedis.get(k);</span><br><span class="line">        <span class="comment">/** 5. 拿当前时间戳 和 上一步取到的时间戳对比，判断key是否过期。 */</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(curLockTimeStr)</span><br><span class="line">                || System.currentTimeMillis() &gt; Long.valueOf(curLockTimeStr)) &#123;</span><br><span class="line">            expireTime = System.currentTimeMillis() + lockTimeOut;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/** 6. 过期，使用 getset 再次获取锁。 */</span></span><br><span class="line">            curLockTimeStr = jedis.getSet(k, String.valueOf(expireTime));</span><br><span class="line">            <span class="comment">/** 7. 用当前时间戳 对比 判断 返回的value是否过期 */</span></span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isBlank(curLockTimeStr) || System.currentTimeMillis() &gt; Long.valueOf(curLockTimeStr)) &#123;</span><br><span class="line">                <span class="comment">/** 8. 如果过期，获取锁成功。 */</span></span><br><span class="line">                <span class="keyword">return</span> expireTime;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">/** 9. 如果不过期，获取锁失败。 */</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** 10. 拿当前时间戳判断key是否过期，不过期，获取锁失败。(其实是第5步判断的结果) */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到锁返回设置的超时时间，得不到锁等待重试</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">lock</span><span class="params">(String key, <span class="keyword">int</span> lockTimeOut, <span class="keyword">int</span> perSleep)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> sleep = (perSleep == <span class="number">0</span> ? lockTimeOut / <span class="number">10</span> : perSleep);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> starttime = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到锁后设置的过期时间，未得到锁返回0</span></span><br><span class="line">        <span class="keyword">long</span> expireTime = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="keyword">long</span> getexpireTime = tryLock(key, lockTimeOut);</span><br><span class="line">            <span class="keyword">if</span> (getexpireTime &gt; System.currentTimeMillis()) &#123;</span><br><span class="line">                <span class="keyword">return</span> getexpireTime;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取锁失败，休眠一会</span></span><br><span class="line">            Thread.sleep(sleep);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (lockTimeOut &gt; <span class="number">0</span> &amp;&amp; ((System.currentTimeMillis() - starttime) &gt;= lockTimeOut)) &#123;</span><br><span class="line">                expireTime = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span> expireTime;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 先判断自己运行时间是否超过了锁设置时间，是则不用解锁</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> expireTime</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">(String key, <span class="keyword">long</span> expireTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (System.currentTimeMillis() - expireTime &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String curLockTimeStr = jedis.get(key);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(curLockTimeStr) &amp;&amp; Long.valueOf(curLockTimeStr) &gt; System.currentTimeMillis()) &#123;</span><br><span class="line">            jedis.del(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://www.cnblogs.com/chopper-poet/p/10802242.html" target="_blank" rel="noopener">我司使用了六年的分布式锁</a><br>[2] <a href="https://github.com/wyzssw/DistributedLock/blob/master/src/main/java/com/wyzssw/distributedLock/DistributedLock.java" target="_blank" rel="noopener">redis分布式锁-github/wyzssw/DistributedLock</a><br>[3] <a href="https://www.runoob.com/redis/redis-tutorial.html" target="_blank" rel="noopener">Redis教程</a><br>[4] <a href="https://juejin.im/post/5bbb0d8df265da0abd3533a5" target="_blank" rel="noopener">再有人问你分布式锁，这篇文章扔给他</a><br>[5] <a href="https://zhuanlan.zhihu.com/p/42056183" target="_blank" rel="noopener">分布式锁看这篇就够了</a></p><p>[6] <a href="https://blog.csdn.net/yinni11/article/details/82867237" target="_blank" rel="noopener">分布式锁的实现与应用场景对比</a><br>[7] <a href="https://www.jianshu.com/p/bb8c6c3113dd" target="_blank" rel="noopener">分布式锁的场景与实现</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  分享下一个基于redis来实现的分布式锁。&lt;/p&gt;
&lt;h1 id=&quot;加锁过程分析&quot;&gt;&lt;a href=&quot;#加锁过程分析&quot; class=&quot;headerlink&quot; title=&quot;加锁过程分析&quot;&gt;&lt;/a&gt;加锁过程分析&lt;/h1&gt;&lt;p&gt; &lt;img src=&quot;/img/distributed/distributed-lock-redis-lock.jpg&quot; alt=&quot;加锁过程分析&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="distributed" scheme="http://weikeqin.com/categories/distributed/"/>
    
    
      <category term="lock" scheme="http://weikeqin.com/tags/lock/"/>
    
      <category term="distributed" scheme="http://weikeqin.com/tags/distributed/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库开发规范</title>
    <link href="http://weikeqin.com/2019/11/20/mysql-norm/"/>
    <id>http://weikeqin.com/2019/11/20/mysql-norm/</id>
    <published>2019-11-20T10:40:11.000Z</published>
    <updated>2019-12-17T13:57:26.564Z</updated>
    
    <content type="html"><![CDATA[<p>一、基础规范</p><p>（1）必须使用InnoDB存储引擎</p><p>解读：支持事务、行级锁、并发性能更好、CPU及内存缓存页优化使得资源利用率更高</p><p>（2）必须使用UTF8MB4字符集</p><p>解读：万国码，无需转码，无乱码风险，节省空间</p><p>（3）数据表、数据字段必须加入中文注释</p><p>解读：N年后谁知道这个r1,r2,r3字段是干嘛的</p> <a id="more"></a><p>（4）禁止使用存储过程、视图、触发器、Event</p><p>解读：高并发大数据的互联网业务，架构设计思路是“解放数据库CPU，将计算转移到服务层”，并发量大的情况下，这些功能很可能将数据库拖死，业务逻辑放到服务层具备更好的扩展性，能够轻易实现“增机器就加性能”。数据库擅长存储与索引，CPU计算还是上移吧</p><p>（5）禁止存储大文件或者大照片</p><p>解读：为何要让数据库做它不擅长的事情？大文件和照片存储在文件系统，数据库里存URI多好</p><p>二、命名规范</p><p>（6）只允许使用内网域名，而不是ip连接数据库</p><p>（7）线上环境、开发环境、测试环境数据库内网域名遵循命名规范</p><p>业务名称：xxx</p><p>线上环境：pro</p><p>开发环境：dev</p><p>测试环境：test</p><p>从库在名称后加-s标识，备库在名称后加-ss标识</p><p>线上从库：</p><p>（8）库名、表名、字段名：小写，下划线风格，不超过32个字符，必须见名知意，禁止拼音英文混用</p><p>（9）表名t_xxx，非唯一索引名idx_xxx，唯一索引名uniq_xxx</p><p>三、表设计规范</p><p>（10）单实例表数目必须小于500</p><p>（11）单表列数目必须小于30</p><p>（12）表必须有主键，例如自增主键</p><p>解读：</p><p>a）主键递增，数据行写入可以提高插入性能，可以避免page分裂，减少表碎片提升空间和内存的使用</p><p>b）主键要选择较短的数据类型， Innodb引擎普通索引都会保存主键的值，较短的数据类型可以有效的减少索引的磁盘空间，提高索引的缓存效率</p><p>c） 无主键的表删除，在row模式的主从架构，会导致备库夯住</p><p>（13）禁止使用外键，如果有外键完整性约束，需要应用程序控制</p><p>解读：外键会导致表与表之间耦合，update与delete操作都会涉及相关联的表，十分影响sql 的性能，甚至会造成死锁。高并发情况下容易造成数据库性能，大数据高并发业务场景数据库使用以性能优先</p><p>四、字段设计规范</p><p>（14）必须把字段定义为NOT NULL并且提供默认值</p><p>解读：</p><p>a）null的列使索引/索引统计/值比较都更加复杂，对MySQL来说更难优化</p><p>b）null 这种类型MySQL内部需要进行特殊处理，增加数据库处理记录的复杂性；同等条件下，表中有较多空字段的时候，数据库的处理性能会降低很多</p><p>c）null值需要更多的存储空，无论是表还是索引中每行中的null的列都需要额外的空间来标识</p><p>d）对null 的处理时候，只能采用is null或is not null，而不能采用=、in、&lt;、&lt;&gt;、!=、not in这些操作符号。如：where name!=’shenjian’，如果存在name为null值的记录，查询结果就不会包含name为null值的记录</p><p>（15）禁止使用TEXT、BLOB类型</p><p>解读：会浪费更多的磁盘和内存空间，非必要的大量的大字段查询会淘汰掉热数据，导致内存命中率急剧降低，影响数据库性能</p><p>（16）禁止使用小数存储货币</p><p>解读：使用整数吧，小数容易导致钱对不上</p><p>（17）必须使用varchar(20)存储手机号</p><p>解读：</p><p>a）涉及到区号或者国家代号，可能出现+-()</p><p>b）手机号会去做数学运算么？</p><p>c）varchar可以支持模糊查询，例如：like“138%”</p><p>（18）禁止使用ENUM，可使用TINYINT代替</p><p>解读：</p><p>a）增加新的ENUM值要做DDL操作</p><p>b）ENUM的内部实际存储就是整数，你以为自己定义的是字符串？</p><p>五、索引设计规范</p><p>（19）单表索引建议控制在5个以内</p><p>（20）单索引字段数不允许超过5个</p><p>解读：字段超过5个时，实际已经起不到有效过滤数据的作用了</p><p>（21）禁止在更新十分频繁、区分度不高的属性上建立索引</p><p>解读：</p><p>a）更新会变更B+树，更新频繁的字段建立索引会大大降低数据库性能</p><p>b）“性别”这种区分度不大的属性，建立索引是没有什么意义的，不能有效过滤数据，性能与全表扫描类似</p><p>（22）建立组合索引，必须把区分度高的字段放在前面</p><p>解读：能够更加有效的过滤数据</p><p>六、SQL使用规范</p><p>（23）禁止使用SELECT *，只获取必要的字段，需要显示说明列属性</p><p>解读：</p><p>a）读取不需要的列会增加CPU、IO、NET消耗</p><p>b）不能有效的利用覆盖索引</p><p>c）使用SELECT *容易在增加或者删除字段后出现程序BUG</p><p>（24）禁止使用INSERT INTO t_xxx VALUES(xxx)，必须显示指定插入的列属性</p><p>解读：容易在增加或者删除字段后出现程序BUG</p><p>（25）禁止使用属性隐式转换</p><p>解读：SELECT uid FROM t_user WHERE phone=13800000000 会导致全表扫描，而不能命中phone索引，猜猜为什么？（这个线上问题不止出现过一次）</p><p>（26）禁止在WHERE条件的属性上使用函数或者表达式</p><p>解读：SELECT uid FROM t_user WHERE from_unixtime(day)&gt;=’2017-01-15’ 会导致全表扫描</p><p>正确的写法是：SELECT uid FROM t_user WHERE day&gt;= unix_timestamp(‘2017-01-15 00:00:00’)</p><p>（27）禁止负向查询，以及%开头的模糊查询</p><p>解读：</p><p>a）负向查询条件：NOT、!=、&lt;&gt;、!&lt;、!&gt;、NOT IN、NOT LIKE等，会导致全表扫描</p><p>b）%开头的模糊查询，会导致全表扫描</p><p>（28）禁止大表使用JOIN查询，禁止大表使用子查询</p><p>解读：会产生临时表，消耗较多内存与CPU，极大影响数据库性能</p><p>（29）禁止使用OR条件，必须改为IN查询</p><p>解读：旧版本Mysql的OR查询是不能命中索引的，即使能命中索引，为何要让数据库耗费更多的CPU帮助实施查询优化呢？</p><p>（30）应用程序必须捕获SQL异常，并有相应处理</p><p>（31）同表的增删字段、索引合并一条DDL语句执行，提高执行效率，减少与数据库的交互。</p><p>总结：大数据量高并发的互联网业务，极大影响数据库性能的都不让用，不让用哟。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、基础规范&lt;/p&gt;
&lt;p&gt;（1）必须使用InnoDB存储引擎&lt;/p&gt;
&lt;p&gt;解读：支持事务、行级锁、并发性能更好、CPU及内存缓存页优化使得资源利用率更高&lt;/p&gt;
&lt;p&gt;（2）必须使用UTF8MB4字符集&lt;/p&gt;
&lt;p&gt;解读：万国码，无需转码，无乱码风险，节省空间&lt;/p&gt;
&lt;p&gt;（3）数据表、数据字段必须加入中文注释&lt;/p&gt;
&lt;p&gt;解读：N年后谁知道这个r1,r2,r3字段是干嘛的&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://weikeqin.com/categories/mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>linux-memory-notes</title>
    <link href="http://weikeqin.com/2019/11/18/linux-memory-notes/"/>
    <id>http://weikeqin.com/2019/11/18/linux-memory-notes/</id>
    <published>2019-11-18T07:09:02.000Z</published>
    <updated>2020-03-16T02:36:25.916Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 用户空间内存，从低到高分别是五种不同的内存段。</p><ol><li>只读段，包括代码和常量等。</li><li>数据段，包括全局变量等。</li><li>堆，包括动态分配的内存，从低地址开始向上增长。</li><li>文件映射段，包括动态库、共享内存等，从高地址开始向下增长。</li><li>栈，包括局部变量和函数调用的上下文等。栈的大小是固定的，一般是 8 MB。<br>在这五个内存段中，堆和文件映射段的内存是动态分配的。</li></ol></blockquote><h1 id="调小数值-linux进程不被杀死"><a href="#调小数值-linux进程不被杀死" class="headerlink" title="调小数值 linux进程不被杀死"></a>调小数值 linux进程不被杀死</h1><p> <code>echo -16 &gt; /proc/$(pidof sshd)/oom_adj</code></p><h1 id="注意不同版本的free输出可能会有所不同"><a href="#注意不同版本的free输出可能会有所不同" class="headerlink" title="注意不同版本的free输出可能会有所不同"></a>注意不同版本的free输出可能会有所不同</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ free</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:        8169348      263524     6875352         668     1030472     7611064</span><br><span class="line">Swap:             0           0           0</span><br><span class="line"></span><br><span class="line">[wkq.stb@s_wkq_b ~]$ free</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:      16334056   16135076     198980       6948     130160     228828</span><br><span class="line">-/+ buffers/cache:   15776088     557968</span><br><span class="line">Swap:      8388604    1042220    7346384</span><br></pre></td></tr></table></figure><blockquote><p> 第一列，total 是总内存大小；<br> 第二列，used 是已使用内存的大小，包含了共享内存；<br> 第三列，free 是未使用内存的大小；<br> 第四列，shared 是共享内存的大小；<br> 第五列，buff/cache 是缓存和缓冲区的大小；<br> 最后一列，available 是新进程可用内存的大小。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[wkq.stb@s_wkq_b ~]$ top</span><br><span class="line">top - 14:49:12 up 151 days, 18:14,  2 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">Tasks: 146 total,   1 running, 145 sleeping,   0 stopped,   0 zombie</span><br><span class="line">Cpu0  :  0.3%us,  0.3%sy,  0.0%ni, 99.3%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</span><br><span class="line">Cpu1  :  0.0%us,  0.3%sy,  0.0%ni, 99.7%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</span><br><span class="line">Cpu2  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</span><br><span class="line">Cpu3  :  0.0%us,  0.0%sy,  0.0%ni,100.0%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</span><br><span class="line">Mem:  16334056k total, 16134976k used,   199080k free,   130144k buffers</span><br><span class="line">Swap:  8388604k total,  1042224k used,  7346380k free,   228824k cached</span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND</span><br><span class="line"> 1802 search    20   0 17.9g  14g 5276 S  0.7 92.6 826:18.86 java</span><br><span class="line"> 3914 wkq.stb    20   0 15024 1356 1004 R  0.3  0.0   0:00.02 top</span><br><span class="line">14363 root      20   0  359m  43m 4424 S  0.3  0.3  92:54.64 jdog-monitor.1.</span><br><span class="line">    1 root      20   0 19232  572  392 S  0.0  0.0   0:10.99 init</span><br><span class="line">    2 root      20   0     0    0    0 S  0.0  0.0   0:00.00 kthreadd</span><br><span class="line">    3 root      RT   0     0    0    0 S  0.0  0.0   4:08.02 migration/0</span><br><span class="line">    4 root      20   0     0    0    0 S  0.0  0.0   0:52.91 ksoftirqd/0</span><br><span class="line">    5 root      RT   0     0    0    0 S  0.0  0.0   0:00.00 stopper/0</span><br><span class="line">    6 root      RT   0     0    0    0 S  0.0  0.0   0:12.19 watchdog/0</span><br><span class="line">    7 root      RT   0     0    0    0 S  0.0  0.0   3:15.61 migration/1</span><br><span class="line">    8 root      RT   0     0    0    0 S  0.0  0.0   0:00.00 stopper/1</span><br><span class="line">    9 root      20   0     0    0    0 S  0.0  0.0   0:39.68 ksoftirqd/1</span><br><span class="line">   10 root      RT   0     0    0    0 S  0.0  0.0   0:10.27 watchdog/1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 按下M切换到内存排序</span><br><span class="line">[wkq.stb@s_wkq_b ~]$ top</span><br><span class="line">top - 14:49:55 up 151 days, 18:15,  2 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">Tasks: 146 total,   1 running, 145 sleeping,   0 stopped,   0 zombie</span><br><span class="line">Cpu(s):  0.1%us,  0.2%sy,  0.0%ni, 99.8%id,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</span><br><span class="line">Mem:  16334056k total, 16134976k used,   199080k free,   130144k buffers</span><br><span class="line">Swap:  8388604k total,  1042224k used,  7346380k free,   228824k cached</span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND</span><br><span class="line"> 1802 search    20   0 17.9g  14g 5276 S  0.3 92.6 826:19.00 java</span><br><span class="line"> 5945 jd.dev    20   0 7653m 244m 5092 S  0.3  1.5 275:00.32 java</span><br><span class="line"> 1515 root      20   0  825m  81m 4124 S  0.0  0.5 718:10.97 jcloudhids</span><br><span class="line">14363 root      20   0  359m  43m 4424 S  0.3  0.3  92:54.68 jdog-monitor.1.</span><br><span class="line">13321 root      20   0  748m  20m 5996 S  0.0  0.1 128:42.30 jdog-kunlunmirr</span><br><span class="line"> 3757 root      20   0 97.7m 3936 2976 S  0.0  0.0   0:00.00 sshd</span><br><span class="line">30572 root      20   0 97.7m 3932 2976 S  0.0  0.0   0:00.01 sshd</span><br><span class="line"> 1164 root      20   0  249m 3688  568 S  0.0  0.0   0:09.71 rsyslogd</span><br><span class="line">30637 wkq.stb    20   0 59980 3480 2536 S  0.0  0.0   0:05.60 ssh</span><br><span class="line"> 1448 root      20   0  186m 3004  968 S  0.0  0.0   2:19.88 python</span><br><span class="line">30574 wkq.stb    20   0 97.7m 2256 1280 S  0.0  0.0   0:08.71 sshd</span><br><span class="line"> 3759 wkq.stb    20   0 97.7m 2252 1272 S  0.0  0.0   0:00.00 sshd</span><br><span class="line"> 3760 wkq.stb    20   0  105m 1968 1504 S  0.0  0.0   0:00.01 bash</span><br><span class="line">30575 wkq.stb    20   0  105m 1960 1508 S  0.0  0.0   0:00.00 bash</span><br><span class="line"> 1481 root      20   0  175m 1472 1004 S  0.0  0.0  92:43.68 AgentMonitor</span><br><span class="line"> 3958 wkq.stb    20   0 15024 1360 1004 R  0.7  0.0   0:00.06 top</span><br><span class="line">  862 root      20   0 22356  932  644 S  0.0  0.0  24:56.74 qemu-ga</span><br><span class="line"> 1284 nscd      20   0  549m  920  576 S  0.0  0.0  10:17.28 nscd</span><br><span class="line"> 1091 root      20   0  9120  700  552 S  0.0  0.0   0:00.25 dhclient</span><br><span class="line"> 1574 root      20   0  158m  612  476 S  0.0  0.0   1:49.17 jcloudhidsupdat</span><br><span class="line"> 1440 root      20   0  114m  608  388 S  0.0  0.0   0:39.52 crond</span><br><span class="line">    1 root      20   0 19232  572  392 S  0.0  0.0   0:10.99 init</span><br></pre></td></tr></table></figure><blockquote><p> top 输出界面的顶端，也显示了系统整体的内存使用情况，这些数据跟 free 类似。<br> 接着看下面的内容，跟内存相关的几列数据，比如 VIRT、RES、SHR 以及 %MEM 等。这些数据，包含了进程最重要的几个内存使用情况，我们挨个来看。<br> VIRT 是进程虚拟内存的大小，只要是进程申请过的内存，即便还没有真正分配物理内存，也会计算在内。<br> RES 是常驻内存的大小，也就是进程实际使用的物理内存大小，但不包括 Swap 和共享内存。<br> SHR 是共享内存的大小，比如与其他进程共同使用的共享内存、加载的动态链接库以及程序的代码段等。<br> %MEM 是进程使用物理内存占系统总内存的百分比。</p></blockquote><p> <code>/proc/meminfo</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清理文件页、目录项、Inodes等各种缓存</span></span><br><span class="line">$ <span class="built_in">echo</span> 3 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每隔1秒输出1组数据</span></span><br><span class="line">$ vmstat 1</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line">r  b   swpd   free   buff  cache   si   so    bi    bo   <span class="keyword">in</span>   cs us sy id wa st</span><br><span class="line">0  0      0 7743608   1112  92168    0    0     0     0   52  152  0  1 100  0  0</span><br><span class="line">0  0      0 7743608   1112  92168    0    0     0     0   36   92  0  0 100  0  0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[jd.stb@s_legend_b ~]$ vmstat 1</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</span><br><span class="line"> 0  0 1042220 199476 130192 228868    0    0     0     5    1    0  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 199452 130192 228888    0    0     0     0  370  572  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 199452 130192 228888    0    0     0     0  311  569  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 199452 130192 228888    0    0     0     0  360  591  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 199256 130192 228888    0    0     0     4  658 1096  0  0 99  0  0</span><br><span class="line"> 0  0 1042220 199188 130200 228888    0    0     0   116  388  635  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 199188 130200 228888    0    0     0     0  351  582  0  0 100  0  0</span><br></pre></td></tr></table></figure><p> <code>$ dd if=/dev/urandom of=/tmp/file bs=1M count=500</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">[jd.stb@s_legend_b ~]$ vmstat 1</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</span><br><span class="line"> 0  0 1042220 196704 130204 229204    0    0     0     5    1    0  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196548 130204 229204    0    0     0    60  385  611  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196604 130204 229204    0    0     0     4  308  559  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196604 130204 229204    0    0     0     0  335  571  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196612 130204 229204    0    0     0     4  315  580  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196612 130204 229204    0    0     0     0  338  573  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196628 130204 229204    0    0     0     0  342  592  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0    40  361  609  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0     0  364  670  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0     0  352  584  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0     0  321  580  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0     0  351  592  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0    72  627 1205  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0     0  504  908  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0     0  563  958  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0     0  492  855  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0     0  684 1392  0  1 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0   100  343  570  0  0 100  0  0</span><br><span class="line"> 0  0 1042220 196636 130204 229204    0    0     0     0  295  560  0  0 100  0  0</span><br><span class="line"> 1  0 1042220 196636 130204 229204    0    0    52     0  566  634  0  4 96  0  0</span><br><span class="line"> 1  0 1042220 193884 130204 231304    0    0     0    52 1304  558  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 190908 130204 234376    0    0     0     0 1324  531  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 187808 130204 237300    0    0     0     0 1278  518  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 185824 130204 239496    0    0     0     0 1368  567  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 182724 130204 242420    0    0     0     8 1322  577  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 180616 130212 244616    0    0     0   116 1558  701  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 177640 130212 247540    0    0     0     4 1355  576  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 174540 130212 250612    0    0     0     8 1425  584  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 172432 130212 252808    0    0     0     0 1298  540  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 169456 130212 255732    0    0     0     0 1338  560  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 167348 130212 257928    0    0     0    56 1348  589  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 164248 130212 260852    0    0     0     4 1388  590  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 160756 130212 263924    0    0     0     0 1662  666  0 27 72  0  1</span><br><span class="line"> 1  0 1042220 158652 130212 266120    0    0     0     0 1345  535  0 25 75  0  0</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</span><br><span class="line"> 1  0 1042220 155552 130212 269044    0    0     0     0 1288  532  0 25 75  0  0</span><br><span class="line"> 1  0 1042220 153568 130212 271240    0    0     0    32 1421  652  0 26 73  0  1</span><br><span class="line"> 1  0 1045056 168572 125980 263304    0 2836     0  2836 1394  532  0 26 74  0  0</span><br><span class="line"> 1  0 1045056 166588 125980 265200    0    0     0    12 1309  491  0 25 75  0  0</span><br><span class="line"> 1  0 1045056 163496 125980 268272    0    0     0     0 1231  466  0 25 75  0  0</span><br><span class="line"> 1  0 1045056 160520 125980 271196    0    0     0     0 1309  490  0 25 75  0  0</span><br><span class="line"> 1  0 1045056 158412 125980 273392    0    0     0    32 1292  538  0 25 75  0  0</span><br><span class="line"> 1  0 1045056 155436 125980 276316    0    0     0     0 1371  555  0 25 75  0  0</span><br><span class="line"> 1  0 1045056 153212 125980 278512    0    0     0    12 1307  551  0 25 75  0  0</span><br><span class="line"> 1  0 1047004 167100 120572 271568    0 1948     0  1948 1418  574  0 26 74  0  0</span><br><span class="line"> 1  0 1047004 164124 120572 274640    0    0     0     0 1242  489  0 25 75  0  0</span><br><span class="line"> 1  0 1047004 162016 120572 276836    0    0     0    28 1318  524  0 25 75  0  0</span><br><span class="line"> 1  0 1047004 158916 120572 279760    0    0     0     0 1266  486  0 25 75  0  0</span><br><span class="line"> 1  0 1047004 156932 120572 281956    0    0     0     0 1345  598  0 25 74  0  1</span><br><span class="line"> 1  0 1047004 153832 120572 284884    0    0     0     0 1243  476  0 25 75  0  0</span><br><span class="line"> 1  0 1047408 166728 113704 279076    0  404     0   404 1356  506  0 26 74  0  0</span><br><span class="line"> 1  0 1047408 164620 113704 281272    0    0     0    28 1252  498  0 25 75  0  0</span><br><span class="line"> 1  0 1047408 161644 113704 284196    0    0     0     0 1350  584  0 25 75  0  0</span><br><span class="line"> 1  0 1047408 159040 113708 286400    0    0     4 86096 1480  620  0 27 72  0  1</span><br><span class="line"> 1  0 1047408 156064 113708 289324    0    0     0     0 1394  638  0 25 75  0  0</span><br><span class="line"> 1  0 1047408 153956 113708 291520    0    0     0     0 1290  537  0 25 75  0  0</span><br><span class="line"> 1  0 1047720 166960 105696 287132    0  312   128   344 2060  958  1 27 70  0  3</span><br><span class="line"> 1  0 1047720 163984 105696 290056    0    0     0     0 1336  550  0 25 75  0  0</span><br><span class="line"> 1  0 1047720 161876 105696 292252    0    0     0     0 1335  525  0 25 75  0  0</span><br><span class="line"> 1  0 1047720 158776 105696 295176    0    0     0     0 1262  504  0 25 75  0  0</span><br><span class="line"> 1  0 1047720 156792 105696 297372    0    0     0     4 1351  541  0 25 74  0  0</span><br><span class="line"> 1  0 1047720 153692 105696 300224    0    0     0    52 1338  542  0 25 75  0  0</span><br><span class="line"> 1  0 1047792 166340  97976 295228    0   72     0    72 1368  535  0 26 75  0  0</span><br><span class="line"> 1  0 1047792 164240  97976 297424    0    0     0     8 1258  501  0 25 75  0  0</span><br><span class="line"> 0  0 1047792 164256  97976 298300    0    0     0     0  849  548  0 13 87  0  0</span><br><span class="line"> 0  0 1047792 164388  97976 298448    0    0     0     0  266  515  0  0 100  0  0</span><br><span class="line"> 0  0 1047792 164388  97976 298448    0    0     0     0  404  578  0  0 100  0  0</span><br><span class="line"> 0  0 1047792 164332  97980 298452    0    0     0    32  341  599  0  0 100  0  0</span><br></pre></td></tr></table></figure><p>  Buffer 是对磁盘数据的缓存，而 Cache 是文件数据的缓存，它们既会用在读请求中，也会用在写请求中。</p><p>  如何统计出所有进程的物理内存使用量呢？</p><h1 id="哪些区域会内存泄露"><a href="#哪些区域会内存泄露" class="headerlink" title="哪些区域会内存泄露"></a>哪些区域会内存泄露</h1><ol><li><p>栈内存由系统自动分配和管理。一旦程序运行超出了这个局部变量的作用域，栈内存就会被系统自动回收，所以不会产生内存泄漏的问题。</p><p>再比如，很多时候，我们事先并不知道数据大小，所以你就要用到标准库函数malloc()_，_ 在程序中动态分配内存。这时候，系统就会从内存空间的堆中分配内存。</p></li><li><p>堆内存由应用程序自己来分配和管理。除非程序退出，这些堆内存并不会被系统自动释放，而是需要应用程序明确调用库函数free()来释放它们。如果应用程序没有正确释放堆内存，就会造成内存泄漏。这是两个栈和堆的例子，那么，其他内存段是否也会导致内存泄漏呢？</p></li><li><p>只读段，包括程序的代码和常量，由于是只读的，不会再去分配新的内存，所以也不会产生内存泄漏。</p></li><li>数据段，包括全局变量和静态变量，这些变量在定义时就已经确定了大小，所以也不会产生内存泄漏。</li><li><p>最后一个内存映射段，包括动态链接库和共享内存，其中共享内存由程序动态分配和管理。所以，如果程序在分配后忘了回收，就会导致跟堆内存类似的泄漏问题。</p><p>内存泄漏的危害非常大，这些忘记释放的内存，不仅应用程序自己不能访问，系统也不能把它们再次分配给其他应用。内存泄漏不断累积，甚至会耗尽系统内存。</p></li></ol><h2 id="检测内存泄露"><a href="#检测内存泄露" class="headerlink" title="检测内存泄露"></a>检测内存泄露</h2><p>  用 top 或 ps 来观察进程的内存使用情况，然后找出内存使用一直增长的进程，最后再通过 pmap 查看进程的内存分布。</p><p>  memleak 可以跟踪系统或指定进程的内存分配、释放请求，然后定期输出一个未释放内存和相应调用栈的汇总情况（默认 5 秒）。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -a 表示显示每个内存分配请求的大小以及地址</span></span><br><span class="line"><span class="comment"># -p 指定案例应用的PID号</span></span><br><span class="line">$ /usr/share/bcc/tools/memleak -a -p $(pidof app)</span><br><span class="line">WARNING: Couldn<span class="string">'t find .text section in /app</span></span><br><span class="line"><span class="string">WARNING: BCC can'</span>t handle sym look ups <span class="keyword">for</span> /app</span><br><span class="line">    addr = 7f8f704732b0 size = 8192</span><br><span class="line">    addr = 7f8f704772d0 size = 8192</span><br><span class="line">    addr = 7f8f704712a0 size = 8192</span><br><span class="line">    addr = 7f8f704752c0 size = 8192</span><br><span class="line">    32768 bytes <span class="keyword">in</span> 4 allocations from stack</span><br><span class="line">        [unknown] [app]</span><br><span class="line">        [unknown] [app]</span><br><span class="line">        start_thread+0xdb [libpthread-2.27.so]</span><br></pre></td></tr></table></figure><p>  从 memleak 的输出可以看到，案例应用在不停地分配内存，并且这些分配的地址没有被回收。</p><p>  free()调用，释放函数fibonacci()分配的内存，修复了内存泄漏的问题。就这个案例而言，还有没有其他更好的修复方法呢？</p><h1 id="Linux-Swap"><a href="#Linux-Swap" class="headerlink" title="Linux Swap"></a>Linux Swap</h1><p>  Linux 的 Swap 机制。Swap 把这些不常访问的内存先写到磁盘中，然后释放这些内存，给其他更需要的进程使用。再次访问这些内存时，重新从磁盘读入内存就可以了。</p><h2 id="Swap-原理"><a href="#Swap-原理" class="headerlink" title="Swap 原理"></a>Swap 原理</h2><p>  Swap 说白了就是把一块磁盘空间或者一个本地文件（以下讲解以磁盘为例），当成内存来使用。它包括换出和换入两个过程。</p><ol><li>换出，就是把进程暂时不用的内存数据存储到磁盘中，并释放这些数据占用的内存。</li><li><p>换入，则是在进程再次访问这些内存的时候，把它们从磁盘读到内存中来。<br>Swap 其实是把系统的可用内存变大了。这样，即使服务器的内存不足，也可以运行大内存的应用程序。  </p><p>有一个专门的内核线程用来定期回收内存，也就是 kswapd0。<br>为了衡量内存的使用情况，kswapd0 定义了三个内存阈值（watermark，也称为水位），分别是页最小阈值（pages_min）、页低阈值（pages_low）和页高阈值（pages_high）。剩余内存，则使用 pages_free 表示。</p><p>kswapd0 定期扫描内存的使用情况，并根据剩余内存落在这三个阈值的空间位置，进行内存的回收操作。</p></li><li>剩余内存小于页最小阈值，说明进程可用内存都耗尽了，只有内核才可以分配内存。</li><li>剩余内存落在页最小阈值和页低阈值中间，说明内存压力比较大，剩余内存不多了。这时 kswapd0 会执行内存回收，直到剩余内存大于高阈值为止。</li><li>剩余内存落在页低阈值和页高阈值中间，说明内存有一定压力，但还可以满足新内存请求。</li><li>剩余内存大于页高阈值，说明剩余内存比较多，没有内存压力。</li></ol><p> 直接内存访问区（DMA）、普通内存区（NORMAL）、伪内存区（MOVABLE）</p><p>   内存既包括了文件页，又包括了匿名页。<br>   对文件页的回收，当然就是直接回收缓存，或者把脏页写回磁盘后再回收。<br>   而对匿名页的回收，其实就是通过 Swap 机制，把它们写入磁盘后再释放内存。</p><p>   不过，你可能还有一个问题。既然有两种不同的内存回收机制，那么在实际回收内存时，到底该先回收哪一种呢？<br>   其实，Linux 提供了一个  /proc/sys/vm/swappiness 选项，用来调整使用 Swap 的积极程度。<br>   swappiness 的范围是 0-100，数值越大，越积极使用 Swap，也就是更倾向于回收匿名页；数值越小，越消极使用 Swap，也就是更倾向于回收文件页。虽然 swappiness 的范围是 0-100，不过要注意，这并不是内存的百分比，而是调整 Swap 积极程度的权重，即使你把它设置成 0，当剩余内存 + 文件页小于页高阈值时，还是会发生 Swap。</p><p>  在内存资源紧张时，Linux 通过直接内存回收和定期扫描的方式，来释放文件页和匿名页，以便把内存分配给更需要的进程使用。文件页的回收比较容易理解，直接清空，或者把脏数据写回磁盘后再释放。而对匿名页的回收，需要通过 Swap 换出到磁盘中，下次访问时，再从磁盘换入到内存中。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建Swap文件</span></span><br><span class="line">$ fallocate -l 8G /mnt/swapfile</span><br><span class="line"><span class="comment"># 修改权限只有根用户可以访问</span></span><br><span class="line">$ chmod 600 /mnt/swapfile</span><br><span class="line"><span class="comment"># 配置Swap文件</span></span><br><span class="line">$ mkswap /mnt/swapfile</span><br><span class="line"><span class="comment"># 开启Swap</span></span><br><span class="line">$ swapon /mnt/swapfile</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭 swap</span></span><br><span class="line">$ swapoff -a</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭 Swap 后再重新打开，也是一种常用的 Swap 空间清理方法</span></span><br><span class="line">$ swapoff -a &amp;&amp; swapon -a</span><br></pre></td></tr></table></figure><p>  查看 swappiness 的配置  <code>cat /proc/sys/vm/swappiness</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按VmSwap使用量对进程排序，输出进程名称、进程ID以及SWAP用量</span></span><br><span class="line">$ <span class="keyword">for</span> file <span class="keyword">in</span> /proc/*/status ; <span class="keyword">do</span> awk <span class="string">'/VmSwap|Name|^Pid/&#123;printf $2 " " $3&#125;END&#123; print ""&#125;'</span> <span class="variable">$file</span>; <span class="keyword">done</span> | sort -k 3 -n -r | head</span><br><span class="line">dockerd 2226 10728 kB</span><br><span class="line">docker-containe 2251 8516 kB</span><br><span class="line">snapd 936 4020 kB</span><br><span class="line">networkd-dispat 911 836 kB</span><br><span class="line">polkitd 1004 44 kB</span><br></pre></td></tr></table></figure><p>内存性能指标</p><h1 id="快速定位系统内存问题"><a href="#快速定位系统内存问题" class="headerlink" title="快速定位系统内存问题"></a>快速定位系统内存问题</h1><blockquote><p>为了迅速定位内存问题，我通常会先运行几个覆盖面比较大的性能工具，比如 free、top、vmstat、pidstat 等。具体的分析思路主要有这几步。</p><ol><li>先用 free 和 top，查看系统整体的内存使用情况。</li><li>再用 vmstat 和 pidstat，查看一段时间的趋势，从而判断出内存问题的类型。</li><li>最后进行详细分析，比如内存分配分析、缓存 / 缓冲区分析、具体进程的内存使用分析等。</li></ol></blockquote><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://time.geekbang.org/column/article/161660" target="_blank" rel="noopener">01| 基础篇：Linux内存是怎么工作的？</a><br>[2] <a href="https://time.geekbang.org/column/article/161667" target="_blank" rel="noopener">02 | 基础篇：怎么理解内存中的Buffer和Cache？</a><br>[3] <a href="https://time.geekbang.org/column/article/161674" target="_blank" rel="noopener">03 | 案例篇：如何利用系统缓存优化程序的运行效率？</a><br>[4] <a href="https://time.geekbang.org/column/article/161675" target="_blank" rel="noopener">04 | 案例篇：内存泄漏了，我该如何定位和处理？</a><br>[5] <a href="https://time.geekbang.org/column/article/161676" target="_blank" rel="noopener">05 | 案例篇：为什么系统的Swap变高了（上）</a><br>[6] <a href="https://time.geekbang.org/column/article/161677" target="_blank" rel="noopener">06 | 案例篇：为什么系统的Swap变高了？（下）</a><br>[7] <a href="https://time.geekbang.org/column/article/161681" target="_blank" rel="noopener">07 | 套路篇：如何“快准狠”找到系统内存的问题？</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt; 用户空间内存，从低到高分别是五种不同的内存段。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;只读段，包括代码和常量等。&lt;/li&gt;
&lt;li&gt;数据段，包括全局变量等。&lt;/li&gt;
&lt;li&gt;堆，包括动态分配的内存，从低地址开始向上增长。&lt;/li&gt;
&lt;li&gt;文件映射段，包括
      
    
    </summary>
    
      <category term="linux" scheme="http://weikeqin.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://weikeqin.com/tags/linux/"/>
    
  </entry>
  
</feed>
